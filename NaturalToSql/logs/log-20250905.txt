2025-09-05 01:32:17.150 +03:00 [INF] This is a test log to file!
2025-09-05 01:32:18.518 +03:00 [INF] Shared Kernal configured successfully.
2025-09-05 01:32:18.556 +03:00 [INF] API configured successfully.
2025-09-05 01:32:18.902 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-05 01:32:19.031 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-05 01:32:19.745 +03:00 [WRN] The foreign key property 'Profile.UserInfoId1' was created in shadow state because a conflicting property with the simple name 'UserInfoId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-09-05 01:32:19.841 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:32:19.880 +03:00 [INF] Registered 20 endpoints in 2,356 milliseconds.
2025-09-05 01:32:19.886 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:32:19.933 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:32:20.053 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:32:20.071 +03:00 [DBG] Created DbConnection. (14ms).
2025-09-05 01:32:20.076 +03:00 [DBG] Migrating using database 'main' on server 'schema_cache.db'.
2025-09-05 01:32:20.088 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:32:20.091 +03:00 [DBG] Created DbConnection. (3ms).
2025-09-05 01:32:20.093 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:32:20.120 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:32:20.124 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:32:20.130 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (2ms).
2025-09-05 01:32:20.132 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:32:20.136 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:32:20.139 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-05 01:32:20.144 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:32:20.149 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (3ms).
2025-09-05 01:32:20.151 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (7ms).
2025-09-05 01:32:20.158 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 01:32:20.182 +03:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 01:32:20.186 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:32:20.187 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 01:32:20.188 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:32:20.189 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-04 22:32:20.1860984+00:00');
SELECT changes();
2025-09-05 01:32:20.202 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-04 22:32:20.1860984+00:00');
SELECT changes();
2025-09-05 01:32:20.246 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 01:32:20.249 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 01:32:20.252 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-05 01:32:20.254 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-09-05 01:32:20.255 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-09-05 01:32:20.257 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 01:32:20.259 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 01:32:20.262 +03:00 [DBG] Committing transaction.
2025-09-05 01:32:20.264 +03:00 [DBG] Committed transaction.
2025-09-05 01:32:20.266 +03:00 [DBG] Disposing transaction.
2025-09-05 01:32:20.269 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 01:32:20.271 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 01:32:20.274 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:32:20.276 +03:00 [DBG] Created DbConnection. (1ms).
2025-09-05 01:32:20.277 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:32:20.279 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:32:20.281 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:32:20.282 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:32:20.284 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:32:20.285 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:32:20.286 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 01:32:20.288 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 01:32:20.290 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 01:32:20.294 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:32:20.295 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:32:20.296 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 01:32:20.298 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 01:32:20.301 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 01:32:20.305 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:32:20.307 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 3ms reading results.
2025-09-05 01:32:20.313 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-05 01:32:20.314 +03:00 [DBG] Committing transaction.
2025-09-05 01:32:20.315 +03:00 [DBG] Committed transaction.
2025-09-05 01:32:20.316 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:32:20.318 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:32:20.319 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 01:32:20.321 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 01:32:20.324 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 01:32:20.326 +03:00 [DBG] Disposing transaction.
2025-09-05 01:32:20.328 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:32:20.332 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (4ms).
2025-09-05 01:32:20.333 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:32:20.335 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:32:20.336 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:32:20.338 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 01:32:20.339 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 01:32:20.396 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-05 01:32:20.569 +03:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-09-05 01:32:20.572 +03:00 [DBG] Hosting starting
2025-09-05 01:32:20.615 +03:00 [DBG] Middleware loaded
2025-09-05 01:32:20.621 +03:00 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16521 B).
2025-09-05 01:32:20.624 +03:00 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-09-05 01:32:20.902 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-05 01:32:20.905 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-05 01:32:20.936 +03:00 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-09-05 01:32:21.097 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert
2025-09-05 01:32:21.181 +03:00 [INF] Now listening on: https://localhost:7202
2025-09-05 01:32:21.182 +03:00 [INF] Now listening on: http://localhost:5000
2025-09-05 01:32:21.184 +03:00 [DBG] Loaded hosting startup assembly NaturalToQuery.Api
2025-09-05 01:32:21.185 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-05 01:32:21.187 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-05 01:32:21.188 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-05 01:32:21.198 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 01:32:21.223 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 01:32:21.284 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-05 01:32:21.285 +03:00 [INF] Hosting environment: Development
2025-09-05 01:32:21.287 +03:00 [INF] Content root path: C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql
2025-09-05 01:32:21.288 +03:00 [DBG] Hosting started
2025-09-05 01:33:09.033 +03:00 [DBG] Connection id "0HNFC0C33U7M2" received FIN.
2025-09-05 01:33:09.044 +03:00 [DBG] Connection id "0HNFC0C33U7M2" accepted.
2025-09-05 01:33:09.050 +03:00 [DBG] Connection id "0HNFC0C33U7M2" started.
2025-09-05 01:33:09.051 +03:00 [DBG] Connection id "0HNFC0C33U7M3" accepted.
2025-09-05 01:33:09.052 +03:00 [DBG] Connection id "0HNFC0C33U7M3" started.
2025-09-05 01:33:09.060 +03:00 [DBG] Connection id "0HNFC0C33U7M2" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 01:33:09.062 +03:00 [DBG] Connection id "0HNFC0C33U7M2" disconnecting.
2025-09-05 01:33:09.064 +03:00 [DBG] Connection id "0HNFC0C33U7M2" stopped.
2025-09-05 01:33:09.087 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf - null null
2025-09-05 01:33:09.126 +03:00 [DBG] 1 candidate(s) found for the request path '/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf'
2025-09-05 01:33:09.128 +03:00 [DBG] Endpoint 'HTTP: GET api/userinfo/{id}' with route pattern 'api/userinfo/{id}' is valid for the request path '/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf'
2025-09-05 01:33:09.130 +03:00 [DBG] Request matched endpoint 'HTTP: GET api/userinfo/{id}'
2025-09-05 01:33:09.158 +03:00 [DBG] Https port '7202' loaded from configuration.
2025-09-05 01:33:09.161 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf'.
2025-09-05 01:33:09.164 +03:00 [DBG] Connection id "0HNFC0C33U7M3" completed keep alive response.
2025-09-05 01:33:09.167 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf - 307 0 null 86.5069ms
2025-09-05 01:33:09.170 +03:00 [DBG] Connection id "0HNFC0C33U7M4" accepted.
2025-09-05 01:33:09.173 +03:00 [DBG] Connection id "0HNFC0C33U7M5" accepted.
2025-09-05 01:33:09.175 +03:00 [DBG] Connection id "0HNFC0C33U7M4" received FIN.
2025-09-05 01:33:09.179 +03:00 [DBG] Connection id "0HNFC0C33U7M4" started.
2025-09-05 01:33:09.201 +03:00 [DBG] Connection id "0HNFC0C33U7M5" started.
2025-09-05 01:33:09.203 +03:00 [DBG] Connection id "0HNFC0C33U7M4" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 01:33:09.204 +03:00 [DBG] Connection id "0HNFC0C33U7M4" disconnecting.
2025-09-05 01:33:09.205 +03:00 [DBG] Connection id "0HNFC0C33U7M4" stopped.
2025-09-05 01:33:09.246 +03:00 [DBG] Connection 0HNFC0C33U7M5 established using the following protocol: "Tls13"
2025-09-05 01:33:09.250 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7202/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf - null null
2025-09-05 01:33:09.253 +03:00 [DBG] 1 candidate(s) found for the request path '/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf'
2025-09-05 01:33:09.254 +03:00 [DBG] Endpoint 'HTTP: GET api/userinfo/{id}' with route pattern 'api/userinfo/{id}' is valid for the request path '/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf'
2025-09-05 01:33:09.255 +03:00 [DBG] Request matched endpoint 'HTTP: GET api/userinfo/{id}'
2025-09-05 01:33:09.259 +03:00 [INF] Executing endpoint 'HTTP: GET api/userinfo/{id}'
2025-09-05 01:33:09.278 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:33:09.326 +03:00 [INF] Getting user by ID: "46d016a8-8e03-4987-91a6-998f321cfacf"
2025-09-05 01:33:09.386 +03:00 [DBG] Compiling query expression: 
'DbSet<UserInfo>()
    .Include(p => p.Profiles)
    .FirstOrDefault(e => e.Id.Equals(__id_0))'
2025-09-05 01:33:09.427 +03:00 [DBG] Including navigation: 'UserInfo.Profiles'.
2025-09-05 01:33:09.646 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<UserInfo>(
    asyncEnumerable: SingleQueryingEnumerable.Create<UserInfo>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: UserInfo.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserInfo.ApiKey (string) Required MaxLength(200), 1], [Property: UserInfo.CreatedUtc (DateTime) Required, 2], [Property: UserInfo.LastUpdatedUtc (DateTime) Required, 3], [Property: UserInfo.Mode (AIMode) Required, 4] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 5], [Property: Profile.CacheFile (string) MaxLength(500), 6], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 7], [Property: Profile.DatabaseName (string) Required, 8], [Property: Profile.Name (string) Required MaxLength(200), 9], [Property: Profile.Provider (ProviderType) Required, 10], [Property: Profile.SecretRef (string) Required, 11], [Property: Profile.UserInfoId (Guid?) FK Index, 12], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 13] }
                3 -> 5
            SELECT u0.Id, u0.ApiKey, u0.CreatedUtc, u0.LastUpdatedUtc, u0.Mode, p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
            FROM 
            (
                SELECT TOP(1) u.Id, u.ApiKey, u.CreatedUtc, u.LastUpdatedUtc, u.Mode
                FROM UserInfos AS u
                WHERE u.Id == @__id_0
            ) AS u0
            LEFT JOIN Profiles AS p ON u0.Id == p.UserInfoId
            ORDER BY u0.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: UserInfo.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserInfo.ApiKey (string) Required MaxLength(200), 1], [Property: UserInfo.CreatedUtc (DateTime) Required, 2], [Property: UserInfo.LastUpdatedUtc (DateTime) Required, 3], [Property: UserInfo.Mode (AIMode) Required, 4] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 5], [Property: Profile.CacheFile (string) MaxLength(500), 6], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 7], [Property: Profile.DatabaseName (string) Required, 8], [Property: Profile.Name (string) Required MaxLength(200), 9], [Property: Profile.Provider (ProviderType) Required, 10], [Property: Profile.SecretRef (string) Required, 11], [Property: Profile.UserInfoId (Guid?) FK Index, 12], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 13] }
                3 -> 5
            SELECT u0.Id, u0.ApiKey, u0.CreatedUtc, u0.LastUpdatedUtc, u0.Mode, p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
            FROM 
            (
                SELECT TOP(1) u.Id, u.ApiKey, u.CreatedUtc, u.LastUpdatedUtc, u.Mode
                FROM UserInfos AS u
                WHERE u.Id == @__id_0
            ) AS u0
            LEFT JOIN Profiles AS p ON u0.Id == p.UserInfoId
            ORDER BY u0.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                UserInfo entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    UserInfo instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(UserInfo);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: UserInfo.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (UserInfo)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")]: 
                                {
                                    return 
                                    {
                                        UserInfo instance;
                                        instance = new UserInfo();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<ApiKey>k__BackingField = dataReader.GetString(1);
                                        instance.<CreatedUtc>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<LastUpdatedUtc>k__BackingField = dataReader.GetDateTime(3);
                                        instance.<Mode>k__BackingField = Invoke(((EnumToNumberConverter<AIMode, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: UserInfo.Mode (AIMode) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindProperty("Mode")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(4));
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(UserInfo)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<UserInfo, UserInfo>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (UserInfo)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: UserInfo.Profiles (List<Profile>) Collection ToDependent Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<UserInfo, List<Profile>, Profile> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<UserInfo, Profile>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(5) ? default(Guid?) : (Guid?)dataReader.GetGuid(5) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Profile entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Profile instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Profile);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Profile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetGuid(5) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Profile)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<Guid?>(dataReader.IsDBNull(13) ? default(Guid?) : (Guid?)dataReader.GetGuid(13));
                                        return 
                                        {
                                            Profile instance;
                                            instance = new Profile();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(5) ? default(Guid) : dataReader.GetGuid(5);
                                            instance.<CacheFile>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                            instance.<CreatedUtc>k__BackingField = dataReader.IsDBNull(7) ? default(DateTimeOffset) : dataReader.GetFieldValue<DateTimeOffset>(7);
                                            instance.<DatabaseName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                            instance.<Name>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                            instance.<Provider>k__BackingField = dataReader.IsDBNull(10) ? default(ProviderType) : Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(10));
                                            instance.<SecretRef>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                            instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(12) ? default(Guid?) : (Guid?)dataReader.GetGuid(12);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Profile)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<UserInfo, List<Profile>, Profile> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (UserInfo)(resultContext.Values[0]) : default(UserInfo);
        }, 
        contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-05 01:33:09.671 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:33:09.672 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:33:09.675 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:33:09.677 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:33:09.677 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:33:09.678 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:33:09.680 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 01:33:09.684 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:33:09.690 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:33:09.722 +03:00 [DBG] Context 'ContextDB' started tracking 'UserInfo' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:33:09.748 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:33:09.764 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:33:09.765 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 73ms reading results.
2025-09-05 01:33:09.768 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:33:09.769 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:33:09.794 +03:00 [INF] Executed endpoint 'HTTP: GET api/userinfo/{id}'
2025-09-05 01:33:09.795 +03:00 [DBG] Connection id "0HNFC0C33U7M5" completed keep alive response.
2025-09-05 01:33:09.797 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:33:09.799 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:33:09.801 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:33:09.804 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7202/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf - 200 null application/json; charset=utf-8 553.2704ms
2025-09-05 01:33:45.210 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 187
2025-09-05 01:33:45.212 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:33:45.212 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:33:45.214 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:33:45.215 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'.
2025-09-05 01:33:45.216 +03:00 [DBG] Connection id "0HNFC0C33U7M3" completed keep alive response.
2025-09-05 01:33:45.217 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 307 0 null 6.8764ms
2025-09-05 01:33:45.223 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 187
2025-09-05 01:33:45.224 +03:00 [DBG] Connection id "0HNFC0C33U7M3", Request id "0HNFC0C33U7M3:00000002": started reading request body.
2025-09-05 01:33:45.226 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:33:45.226 +03:00 [DBG] Connection id "0HNFC0C33U7M3", Request id "0HNFC0C33U7M3:00000002": done reading request body.
2025-09-05 01:33:45.227 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:33:45.228 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:33:45.229 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:33:45.232 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:33:45.243 +03:00 [DBG] Connection id "0HNFC0C33U7M5", Request id "0HNFC0C33U7M5:00000002": started reading request body.
2025-09-05 01:33:45.244 +03:00 [DBG] Connection id "0HNFC0C33U7M5", Request id "0HNFC0C33U7M5:00000002": done reading request body.
2025-09-05 01:33:45.308 +03:00 [INF] Converting NL to SQL for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:33:45.312 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:33:45.313 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:33:45.313 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:33:45.314 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:33:45.315 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:33:45.316 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:33:45.317 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:33:45.318 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:33:45.319 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:33:45.321 +03:00 [DBG] Context 'ContextDB' started tracking 'UserInfo' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:33:45.322 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:33:45.323 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:33:45.324 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 3ms reading results.
2025-09-05 01:33:45.325 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:33:45.326 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:33:45.330 +03:00 [DBG] Compiling query expression: 
'DbSet<Profile>()
    .Include(e => e.Queries)
    .FirstOrDefault(e => e.Id.Equals(__id_0))'
2025-09-05 01:33:45.331 +03:00 [DBG] Including navigation: 'Profile.Queries'.
2025-09-05 01:33:45.344 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Profile>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Profile>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Profile entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Profile instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Profile);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Profile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Profile)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                {
                                    shadowSnapshot1 = (ISnapshot)new Snapshot<Guid?>(dataReader.IsDBNull(8) ? default(Guid?) : (Guid?)dataReader.GetGuid(8));
                                    return 
                                    {
                                        Profile instance;
                                        instance = new Profile();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<CacheFile>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                        instance.<CreatedUtc>k__BackingField = dataReader.GetFieldValue<DateTimeOffset>(2);
                                        instance.<DatabaseName>k__BackingField = dataReader.GetString(3);
                                        instance.<Name>k__BackingField = dataReader.GetString(4);
                                        instance.<Provider>k__BackingField = Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                        instance.<SecretRef>k__BackingField = dataReader.GetString(6);
                                        instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid?) : (Guid?)dataReader.GetGuid(7);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Profile)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Profile, Profile>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Profile)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: Profile.Queries (List<Query>) Collection ToDependent Query Inverse: Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Profile, Query>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(9) ? default(Guid?) : (Guid?)dataReader.GetGuid(9) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Query entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Query instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Query);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Query.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetGuid(9) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Query)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]: 
                                    {
                                        return 
                                        {
                                            Query instance;
                                            instance = new Query();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                            instance.<ProfileId>k__BackingField = dataReader.IsDBNull(10) ? default(Guid) : dataReader.GetGuid(10);
                                            instance.<ResultJson>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                            instance.<SqlQuery>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                            instance.<TimestampUtc>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime) : dataReader.GetDateTime(13);
                                            instance.<UserQuery>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Query)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Query.Profile (Profile) ToPrincipal Profile Inverse: Queries | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindNavigation("Profile")], 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                    return namelessParameter{11}.<Profile>k__BackingField = namelessParameter{10};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Profile)(resultContext.Values[0]) : default(Profile);
        }, 
        contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-05 01:33:45.350 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:33:45.351 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:33:45.352 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:33:45.352 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:33:45.353 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:33:45.354 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:33:45.356 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:33:45.358 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:33:45.359 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 2ms reading results.
2025-09-05 01:33:45.360 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:33:45.361 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:33:45.375 +03:00 [INF] Fetching connection string for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:33:45.376 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:33:45.378 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:33:45.378 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:33:45.379 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:33:45.380 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:33:45.381 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:33:45.383 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:33:45.385 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:33:45.386 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 1ms reading results.
2025-09-05 01:33:45.387 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:33:45.389 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:33:45.419 +03:00 [DBG] Fetched secret for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:33:45.476 +03:00 [DBG] Fetching schema for Profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08", ForceRefresh=false
2025-09-05 01:33:45.478 +03:00 [INF] Fetching schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory (ForceRefresh=false)
2025-09-05 01:33:45.615 +03:00 [INF] Loaded schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory from cache file
2025-09-05 01:33:45.639 +03:00 [INF] No provider-specific configuration needed
2025-09-05 01:33:45.776 +03:00 [INF] Executed endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:33:45.872 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Convertion is not allowed in basic mode, you can only execute queries
   at NaturalToQuery.Infrastructure.LLM.LLMService.ConvertToSqlAsync(String schema, String userQuery, ExecutionMode mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 53
   at NaturalToQuery.Application.Services.QueryOrchestrationService.ConvertNaturalLanguageAsync(Guid UserId, Guid profileId, String naturalLanguage, ExecutionMode Mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Application\Services\QueryOrchestrationService.cs:line 60
   at NaturalToQuery.Api.Controllers.Query.ConvertNaturalLanguage.HandleAsync(ConvertNaturalLanguageRequest req, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\Controllers\Query\ConvertNaturalLanguage.cs:line 45
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-09-05 01:33:45.884 +03:00 [ERR] Unhandled exception occurred.
2025-09-05 01:33:45.891 +03:00 [DBG] Connection id "0HNFC0C33U7M5" completed keep alive response.
2025-09-05 01:33:45.892 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:33:45.893 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:33:45.894 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:33:45.895 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 500 null application/json; charset=utf-8 672.0247ms
2025-09-05 01:33:54.895 +03:00 [INF] Request starting HTTP/1.1 PUT http://localhost:5000/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode - application/json 28
2025-09-05 01:33:54.898 +03:00 [DBG] 1 candidate(s) found for the request path '/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode'
2025-09-05 01:33:54.899 +03:00 [DBG] Endpoint 'HTTP: PUT api/userinfo/{userId}/aimode' with route pattern 'api/userinfo/{userId}/aimode' is valid for the request path '/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode'
2025-09-05 01:33:54.901 +03:00 [DBG] Request matched endpoint 'HTTP: PUT api/userinfo/{userId}/aimode'
2025-09-05 01:33:54.902 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode'.
2025-09-05 01:33:54.903 +03:00 [DBG] Connection id "0HNFC0C33U7M3" completed keep alive response.
2025-09-05 01:33:54.904 +03:00 [INF] Request finished HTTP/1.1 PUT http://localhost:5000/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode - 307 0 null 8.514ms
2025-09-05 01:33:54.904 +03:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7202/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode - application/json 28
2025-09-05 01:33:54.908 +03:00 [DBG] Connection id "0HNFC0C33U7M3", Request id "0HNFC0C33U7M3:00000003": started reading request body.
2025-09-05 01:33:54.911 +03:00 [DBG] 1 candidate(s) found for the request path '/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode'
2025-09-05 01:33:54.911 +03:00 [DBG] Connection id "0HNFC0C33U7M3", Request id "0HNFC0C33U7M3:00000003": done reading request body.
2025-09-05 01:33:54.912 +03:00 [DBG] Endpoint 'HTTP: PUT api/userinfo/{userId}/aimode' with route pattern 'api/userinfo/{userId}/aimode' is valid for the request path '/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode'
2025-09-05 01:33:54.914 +03:00 [DBG] Request matched endpoint 'HTTP: PUT api/userinfo/{userId}/aimode'
2025-09-05 01:33:54.915 +03:00 [INF] Executing endpoint 'HTTP: PUT api/userinfo/{userId}/aimode'
2025-09-05 01:33:54.917 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:33:54.920 +03:00 [DBG] Connection id "0HNFC0C33U7M5", Request id "0HNFC0C33U7M5:00000003": started reading request body.
2025-09-05 01:33:54.921 +03:00 [DBG] Connection id "0HNFC0C33U7M5", Request id "0HNFC0C33U7M5:00000003": done reading request body.
2025-09-05 01:33:54.926 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:33:54.927 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:33:54.928 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:33:54.929 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:33:54.930 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:33:54.930 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:33:54.931 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:33:54.932 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:33:54.934 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:33:54.935 +03:00 [DBG] Context 'ContextDB' started tracking 'UserInfo' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:33:54.936 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:33:54.937 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:33:54.938 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 2ms reading results.
2025-09-05 01:33:54.939 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:33:54.940 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:33:55.058 +03:00 [INF] Executed endpoint 'HTTP: PUT api/userinfo/{userId}/aimode'
2025-09-05 01:33:55.095 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Cannot switch to groq mode without providing api key
   at NaturalToQuery.Application.Services.UserInfoService.UpdateAiModeAsync(Guid UserId, String ApiKey, AIMode newAiMode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Application\Services\UserInfoService.cs:line 271
   at NaturalToQuery.Api.Controllers.UserInfo.UpdateAiMode.HandleAsync(UpdateAiModeRequest req, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\Controllers\UserInfo\UpdateAiMode.cs:line 32
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-09-05 01:33:55.098 +03:00 [ERR] Unhandled exception occurred.
2025-09-05 01:33:55.099 +03:00 [DBG] Connection id "0HNFC0C33U7M5" completed keep alive response.
2025-09-05 01:33:55.100 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:33:55.101 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:33:55.103 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:33:55.104 +03:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7202/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode - 500 null application/json; charset=utf-8 199.4717ms
2025-09-05 01:34:34.523 +03:00 [INF] Request starting HTTP/1.1 PUT http://localhost:5000/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode - application/json 102
2025-09-05 01:34:34.526 +03:00 [DBG] 1 candidate(s) found for the request path '/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode'
2025-09-05 01:34:34.527 +03:00 [DBG] Endpoint 'HTTP: PUT api/userinfo/{userId}/aimode' with route pattern 'api/userinfo/{userId}/aimode' is valid for the request path '/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode'
2025-09-05 01:34:34.528 +03:00 [DBG] Request matched endpoint 'HTTP: PUT api/userinfo/{userId}/aimode'
2025-09-05 01:34:34.529 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode'.
2025-09-05 01:34:34.530 +03:00 [DBG] Connection id "0HNFC0C33U7M3" completed keep alive response.
2025-09-05 01:34:34.531 +03:00 [INF] Request finished HTTP/1.1 PUT http://localhost:5000/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode - 307 0 null 7.0949ms
2025-09-05 01:34:34.556 +03:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7202/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode - application/json 102
2025-09-05 01:34:34.558 +03:00 [DBG] Connection id "0HNFC0C33U7M3", Request id "0HNFC0C33U7M3:00000004": started reading request body.
2025-09-05 01:34:34.560 +03:00 [DBG] 1 candidate(s) found for the request path '/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode'
2025-09-05 01:34:34.561 +03:00 [DBG] Connection id "0HNFC0C33U7M3", Request id "0HNFC0C33U7M3:00000004": done reading request body.
2025-09-05 01:34:34.562 +03:00 [DBG] Endpoint 'HTTP: PUT api/userinfo/{userId}/aimode' with route pattern 'api/userinfo/{userId}/aimode' is valid for the request path '/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode'
2025-09-05 01:34:34.564 +03:00 [DBG] Request matched endpoint 'HTTP: PUT api/userinfo/{userId}/aimode'
2025-09-05 01:34:34.565 +03:00 [INF] Executing endpoint 'HTTP: PUT api/userinfo/{userId}/aimode'
2025-09-05 01:34:34.567 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:34:34.570 +03:00 [DBG] Connection id "0HNFC0C33U7M5", Request id "0HNFC0C33U7M5:00000004": started reading request body.
2025-09-05 01:34:34.571 +03:00 [DBG] Connection id "0HNFC0C33U7M5", Request id "0HNFC0C33U7M5:00000004": done reading request body.
2025-09-05 01:34:34.573 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:34:34.574 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:34:34.576 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:34:34.577 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:34.578 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:34:34.578 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:34:34.580 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 01:34:34.581 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:34:34.583 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:34:34.584 +03:00 [DBG] Context 'ContextDB' started tracking 'UserInfo' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:34:34.585 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:34:34.587 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:34.588 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 3ms reading results.
2025-09-05 01:34:34.589 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:34.590 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:34:34.602 +03:00 [DBG] An entity of type 'UserInfo' tracked by 'ContextDB' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:34:34.607 +03:00 [DBG] DetectChanges starting for 'ContextDB'.
2025-09-05 01:34:34.630 +03:00 [DBG] DetectChanges completed for 'ContextDB'.
2025-09-05 01:34:34.634 +03:00 [DBG] SaveChanges starting for 'ContextDB'.
2025-09-05 01:34:34.636 +03:00 [DBG] DetectChanges starting for 'ContextDB'.
2025-09-05 01:34:34.636 +03:00 [DBG] DetectChanges completed for 'ContextDB'.
2025-09-05 01:34:34.673 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:34:34.674 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:34.676 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:34:34.677 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:34:34.679 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 01:34:34.680 +03:00 [DBG] Executing DbCommand [Parameters=[@p4='?' (DbType = Guid), @p0='?' (Size = 56), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "UserInfos" SET "ApiKey" = @p0, "CreatedUtc" = @p1, "LastUpdatedUtc" = @p2, "Mode" = @p3
WHERE "Id" = @p4
RETURNING 1;
2025-09-05 01:34:34.685 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p4='?' (DbType = Guid), @p0='?' (Size = 56), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "UserInfos" SET "ApiKey" = @p0, "CreatedUtc" = @p1, "LastUpdatedUtc" = @p2, "Mode" = @p3
WHERE "Id" = @p4
RETURNING 1;
2025-09-05 01:34:34.692 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:34.693 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 6ms reading results.
2025-09-05 01:34:34.694 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:34.695 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:34:34.698 +03:00 [DBG] An entity of type 'UserInfo' tracked by 'ContextDB' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:34:34.699 +03:00 [DBG] SaveChanges completed for 'ContextDB' with 1 entities written to the database.
2025-09-05 01:34:34.704 +03:00 [INF] AI mode changed to "Groq" for user "46d016a8-8e03-4987-91a6-998f321cfacf" at "2025-09-04T22:34:34.5910856Z"
2025-09-05 01:34:34.706 +03:00 [INF] API key changed for user "46d016a8-8e03-4987-91a6-998f321cfacf" at "2025-09-04T22:34:34.5914039Z"
2025-09-05 01:34:34.707 +03:00 [INF] Executed endpoint 'HTTP: PUT api/userinfo/{userId}/aimode'
2025-09-05 01:34:34.708 +03:00 [DBG] Connection id "0HNFC0C33U7M5" completed keep alive response.
2025-09-05 01:34:34.709 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:34:34.710 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:34:34.711 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:34:34.712 +03:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7202/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode - 200 null application/json; charset=utf-8 178.446ms
2025-09-05 01:34:40.573 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 187
2025-09-05 01:34:40.575 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:34:40.576 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:34:40.577 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:34:40.578 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'.
2025-09-05 01:34:40.579 +03:00 [DBG] Connection id "0HNFC0C33U7M3" completed keep alive response.
2025-09-05 01:34:40.579 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 307 0 null 6.5842ms
2025-09-05 01:34:40.580 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 187
2025-09-05 01:34:40.582 +03:00 [DBG] Connection id "0HNFC0C33U7M3", Request id "0HNFC0C33U7M3:00000005": started reading request body.
2025-09-05 01:34:40.583 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:34:40.584 +03:00 [DBG] Connection id "0HNFC0C33U7M3", Request id "0HNFC0C33U7M3:00000005": done reading request body.
2025-09-05 01:34:40.585 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:34:40.587 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:34:40.587 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:34:40.589 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:34:40.590 +03:00 [DBG] Connection id "0HNFC0C33U7M5", Request id "0HNFC0C33U7M5:00000005": started reading request body.
2025-09-05 01:34:40.591 +03:00 [DBG] Connection id "0HNFC0C33U7M5", Request id "0HNFC0C33U7M5:00000005": done reading request body.
2025-09-05 01:34:40.593 +03:00 [INF] Converting NL to SQL for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:34:40.594 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:34:40.594 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:34:40.595 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:34:40.596 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:40.597 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:34:40.598 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:34:40.599 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:34:40.600 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:34:40.601 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:34:40.602 +03:00 [DBG] Context 'ContextDB' started tracking 'UserInfo' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:34:40.604 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:34:40.605 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:40.606 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 3ms reading results.
2025-09-05 01:34:40.607 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:40.608 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:34:40.609 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:34:40.610 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:40.611 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:34:40.611 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:34:40.613 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:34:40.613 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:34:40.615 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:34:40.617 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:40.618 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 1ms reading results.
2025-09-05 01:34:40.619 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:40.619 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:34:40.621 +03:00 [INF] Fetching connection string for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:34:40.622 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:34:40.623 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:40.623 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:34:40.624 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:34:40.625 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:34:40.626 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:34:40.627 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:34:40.629 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:40.630 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 0ms reading results.
2025-09-05 01:34:40.631 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:40.632 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:34:40.634 +03:00 [DBG] Fetched secret for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:34:40.635 +03:00 [DBG] Fetching schema for Profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08", ForceRefresh=false
2025-09-05 01:34:40.635 +03:00 [INF] Fetching schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory (ForceRefresh=false)
2025-09-05 01:34:40.661 +03:00 [INF] Loaded schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory from cache file
2025-09-05 01:34:40.674 +03:00 [INF] Groq API key configured for HttpClient
2025-09-05 01:34:40.675 +03:00 [INF] Converting natural language to SQL. User query: show all categories
2025-09-05 01:34:40.677 +03:00 [DBG] Generated prompt with system message, 2 examples, and user query
2025-09-05 01:34:40.678 +03:00 [DBG] Generated prompt with 6 messages
2025-09-05 01:34:40.683 +03:00 [DBG] Request payload prepared for LLM API
2025-09-05 01:34:45.123 +03:00 [ERR] Network error while calling LLM API: No connection could be made because the target machine actively refused it. (localhost:11434)
2025-09-05 01:34:45.477 +03:00 [INF] Executed endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:34:45.642 +03:00 [ERR] An unhandled exception has occurred while executing the request.
NaturalToQuery.Core.Exceptions.LLMServiceException: Network error occurred while communicating with LLM API
 ---> System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it. (localhost:11434)
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.InjectNewHttp11ConnectionAsync(QueueItem queueItem)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionWaiter`1.WaitForConnectionWithTelemetryAsync(HttpRequestMessage request, HttpConnectionPool pool, Boolean async, CancellationToken requestCancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at NaturalToQuery.Infrastructure.LLM.LLMService.CallLlmApiAsync(PromptMessage[] messages, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 119
   --- End of inner exception stack trace ---
   at NaturalToQuery.Infrastructure.LLM.LLMService.CallLlmApiAsync(PromptMessage[] messages, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 148
   at NaturalToQuery.Infrastructure.LLM.LLMService.ConvertToSqlAsync(String schema, String userQuery, ExecutionMode mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 62
   at NaturalToQuery.Application.Services.QueryOrchestrationService.ConvertNaturalLanguageAsync(Guid UserId, Guid profileId, String naturalLanguage, ExecutionMode Mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Application\Services\QueryOrchestrationService.cs:line 60
   at NaturalToQuery.Api.Controllers.Query.ConvertNaturalLanguage.HandleAsync(ConvertNaturalLanguageRequest req, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\Controllers\Query\ConvertNaturalLanguage.cs:line 45
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-09-05 01:34:45.649 +03:00 [ERR] Error occurred.
2025-09-05 01:34:45.808 +03:00 [ERR] An exception was thrown attempting to execute the error handler.
System.ArgumentNullException: Value cannot be null. (Parameter 'json')
   at System.Text.Json.ThrowHelper.ThrowArgumentNullException(String parameterName)
   at System.Text.Json.JsonDocument.Parse(String json, JsonDocumentOptions options)
   at NaturalToQuery.Api.Middlewares.ExceptionMiddlewareHelper.ParseGroqApiError(String responseBody) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\Middlewares\ExceptionMiddleware.Helper.cs:line 87
   at NaturalToQuery.Api.Middlewares.ExceptionMiddlewareHelper.<>c.<.cctor>b__3_4(Exception ex) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\Middlewares\ExceptionMiddleware.Helper.cs:line 58
   at NaturalToQuery.Api.Middlewares.ExceptionMiddlewareExtensions.<>c__DisplayClass0_0.<<ConfigureExceptionHandler>b__1>d.MoveNext() in C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\Middlewares\ExceptionMiddleware.cs:line 29
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
2025-09-05 01:34:46.199 +03:00 [ERR] An unhandled exception has occurred while executing the request.
NaturalToQuery.Core.Exceptions.LLMServiceException: Network error occurred while communicating with LLM API
 ---> System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it. (localhost:11434)
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.InjectNewHttp11ConnectionAsync(QueueItem queueItem)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionWaiter`1.WaitForConnectionWithTelemetryAsync(HttpRequestMessage request, HttpConnectionPool pool, Boolean async, CancellationToken requestCancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at NaturalToQuery.Infrastructure.LLM.LLMService.CallLlmApiAsync(PromptMessage[] messages, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 119
   --- End of inner exception stack trace ---
   at NaturalToQuery.Infrastructure.LLM.LLMService.CallLlmApiAsync(PromptMessage[] messages, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 148
   at NaturalToQuery.Infrastructure.LLM.LLMService.ConvertToSqlAsync(String schema, String userQuery, ExecutionMode mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 62
   at NaturalToQuery.Application.Services.QueryOrchestrationService.ConvertNaturalLanguageAsync(Guid UserId, Guid profileId, String naturalLanguage, ExecutionMode Mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Application\Services\QueryOrchestrationService.cs:line 60
   at NaturalToQuery.Api.Controllers.Query.ConvertNaturalLanguage.HandleAsync(ConvertNaturalLanguageRequest req, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\Controllers\Query\ConvertNaturalLanguage.cs:line 45
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-05 01:34:46.210 +03:00 [DBG] Connection id "0HNFC0C33U7M5" completed keep alive response.
2025-09-05 01:34:46.211 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:34:46.212 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:34:46.213 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:34:46.215 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 500 null text/plain; charset=utf-8 5634.8388ms
2025-09-05 01:34:52.462 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 187
2025-09-05 01:34:52.465 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:34:52.466 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:34:52.467 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:34:52.468 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'.
2025-09-05 01:34:52.469 +03:00 [DBG] Connection id "0HNFC0C33U7M3" completed keep alive response.
2025-09-05 01:34:52.470 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 307 0 null 7.4221ms
2025-09-05 01:34:52.470 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 187
2025-09-05 01:34:52.472 +03:00 [DBG] Connection id "0HNFC0C33U7M3", Request id "0HNFC0C33U7M3:00000006": started reading request body.
2025-09-05 01:34:52.473 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:34:52.474 +03:00 [DBG] Connection id "0HNFC0C33U7M3", Request id "0HNFC0C33U7M3:00000006": done reading request body.
2025-09-05 01:34:52.475 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:34:52.477 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:34:52.478 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:34:52.479 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:34:52.481 +03:00 [DBG] Connection id "0HNFC0C33U7M5", Request id "0HNFC0C33U7M5:00000006": started reading request body.
2025-09-05 01:34:52.481 +03:00 [DBG] Connection id "0HNFC0C33U7M5", Request id "0HNFC0C33U7M5:00000006": done reading request body.
2025-09-05 01:34:52.482 +03:00 [INF] Converting NL to SQL for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:34:52.483 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:34:52.484 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:34:52.485 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:34:52.485 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:52.486 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:34:52.487 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:34:52.488 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:34:52.489 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:34:52.491 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:34:52.492 +03:00 [DBG] Context 'ContextDB' started tracking 'UserInfo' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:34:52.494 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:34:52.495 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:52.496 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 3ms reading results.
2025-09-05 01:34:52.497 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:52.498 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:34:52.499 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:34:52.500 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:52.501 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:34:52.502 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:34:52.502 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:34:52.503 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:34:52.505 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:34:52.506 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:52.507 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 1ms reading results.
2025-09-05 01:34:52.508 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:52.509 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:34:52.511 +03:00 [INF] Fetching connection string for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:34:52.512 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:34:52.513 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:52.514 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:34:52.514 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:34:52.515 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:34:52.516 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:34:52.518 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:34:52.519 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:52.520 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 1ms reading results.
2025-09-05 01:34:52.521 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:34:52.522 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:34:52.524 +03:00 [DBG] Fetched secret for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:34:52.525 +03:00 [DBG] Fetching schema for Profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08", ForceRefresh=false
2025-09-05 01:34:52.525 +03:00 [INF] Fetching schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory (ForceRefresh=false)
2025-09-05 01:34:52.527 +03:00 [INF] Loaded schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory from cache file
2025-09-05 01:34:52.528 +03:00 [INF] Groq API key configured for HttpClient
2025-09-05 01:35:49.957 +03:00 [INF] Converting natural language to SQL. User query: show all categories
2025-09-05 01:35:49.985 +03:00 [DBG] Generated prompt with system message, 2 examples, and user query
2025-09-05 01:35:49.985 +03:00 [DBG] Connection id "0HNFC0C33U7M5" received FIN.
2025-09-05 01:35:49.990 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:35:49.993 +03:00 [DBG] Generated prompt with 6 messages
2025-09-05 01:35:49.994 +03:00 [DBG] Connection id "0HNFC0C33U7M5" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 01:35:49.996 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:35:49.997 +03:00 [DBG] Request payload prepared for LLM API
2025-09-05 01:35:49.998 +03:00 [DBG] Connection id "0HNFC0C33U7M5" disconnecting.
2025-09-05 01:35:49.998 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:35:50.011 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:35:50.073 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'.
2025-09-05 01:35:50.183 +03:00 [DBG] Connection id "0HNFC0C33U7M3" completed keep alive response.
2025-09-05 01:35:50.244 +03:00 [DBG] Connection id "0HNFC0C33U7M6" received FIN.
2025-09-05 01:35:50.278 +03:00 [INF] LLM API request was cancelled
2025-09-05 01:35:50.278 +03:00 [DBG] Connection id "0HNFC0C33U7M7" accepted.
2025-09-05 01:35:50.279 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 307 0 null 289.2226ms
2025-09-05 01:35:50.343 +03:00 [DBG] Connection id "0HNFC0C33U7M7" started.
2025-09-05 01:35:50.280 +03:00 [DBG] Connection id "0HNFC0C33U7M6" accepted.
2025-09-05 01:35:50.630 +03:00 [INF] Executed endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:35:50.631 +03:00 [DBG] Connection id "0HNFC0C33U7M3", Request id "0HNFC0C33U7M3:00000007": started reading request body.
2025-09-05 01:35:50.633 +03:00 [DBG] Connection id "0HNFC0C33U7M6" started.
2025-09-05 01:35:50.852 +03:00 [DBG] The request was aborted by the client.
2025-09-05 01:35:50.853 +03:00 [DBG] Connection 0HNFC0C33U7M7 established using the following protocol: "Tls13"
2025-09-05 01:35:50.853 +03:00 [DBG] Connection id "0HNFC0C33U7M3", Request id "0HNFC0C33U7M3:00000007": done reading request body.
2025-09-05 01:35:50.854 +03:00 [DBG] Connection id "0HNFC0C33U7M6" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 01:35:50.855 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:35:50.856 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:35:50.858 +03:00 [DBG] Connection id "0HNFC0C33U7M6" disconnecting.
2025-09-05 01:35:50.858 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:35:50.860 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:35:50.861 +03:00 [DBG] Connection id "0HNFC0C33U7M6" stopped.
2025-09-05 01:35:50.861 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (2ms).
2025-09-05 01:35:50.862 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:35:50.864 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 499 null null 58394.227ms
2025-09-05 01:35:50.865 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:35:50.868 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:35:50.870 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:35:50.871 +03:00 [DBG] Connection id "0HNFC0C33U7M5" stopped.
2025-09-05 01:35:50.872 +03:00 [DBG] Connection id "0HNFC0C33U7M7", Request id "0HNFC0C33U7M7:00000001": started reading request body.
2025-09-05 01:35:50.874 +03:00 [DBG] Connection id "0HNFC0C33U7M7", Request id "0HNFC0C33U7M7:00000001": done reading request body.
2025-09-05 01:35:52.602 +03:00 [INF] Converting NL to SQL for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:35:52.603 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:35:52.604 +03:00 [DBG] Created DbConnection. (1ms).
2025-09-05 01:35:52.605 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:35:52.606 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:35:52.607 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:35:52.607 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:35:52.608 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:35:52.609 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:35:52.611 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:35:52.612 +03:00 [DBG] Context 'ContextDB' started tracking 'UserInfo' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:35:52.613 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:35:52.614 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:35:52.616 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 3ms reading results.
2025-09-05 01:35:52.617 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:35:52.618 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:35:52.620 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:35:52.620 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:35:52.622 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:35:52.623 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:35:52.624 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 01:35:52.625 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:35:52.639 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:35:52.642 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:35:52.644 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 2ms reading results.
2025-09-05 01:35:52.645 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:35:52.647 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:35:52.648 +03:00 [INF] Fetching connection string for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:35:52.649 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:35:52.650 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:35:52.651 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:35:52.652 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:35:52.653 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 01:35:52.654 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:35:52.655 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:35:52.656 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:35:52.657 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 0ms reading results.
2025-09-05 01:35:52.659 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:35:52.659 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:35:52.661 +03:00 [DBG] Fetched secret for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:35:52.661 +03:00 [DBG] Fetching schema for Profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08", ForceRefresh=false
2025-09-05 01:35:52.662 +03:00 [INF] Fetching schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory (ForceRefresh=false)
2025-09-05 01:35:52.674 +03:00 [INF] Loaded schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory from cache file
2025-09-05 01:35:52.676 +03:00 [INF] Groq API key configured for HttpClient
2025-09-05 01:35:53.604 +03:00 [INF] Converting natural language to SQL. User query: show all categories
2025-09-05 01:35:53.605 +03:00 [DBG] Generated prompt with system message, 2 examples, and user query
2025-09-05 01:35:53.606 +03:00 [DBG] Generated prompt with 6 messages
2025-09-05 01:35:53.607 +03:00 [DBG] Request payload prepared for LLM API
2025-09-05 01:35:57.969 +03:00 [ERR] Network error while calling LLM API: No connection could be made because the target machine actively refused it. (localhost:11434)
2025-09-05 01:35:58.367 +03:00 [INF] Executed endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:35:58.544 +03:00 [ERR] An unhandled exception has occurred while executing the request.
NaturalToQuery.Core.Exceptions.LLMServiceException: Network error occurred while communicating with LLM API
 ---> System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it. (localhost:11434)
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.InjectNewHttp11ConnectionAsync(QueueItem queueItem)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionWaiter`1.WaitForConnectionWithTelemetryAsync(HttpRequestMessage request, HttpConnectionPool pool, Boolean async, CancellationToken requestCancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at NaturalToQuery.Infrastructure.LLM.LLMService.CallLlmApiAsync(PromptMessage[] messages, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 119
   --- End of inner exception stack trace ---
   at NaturalToQuery.Infrastructure.LLM.LLMService.CallLlmApiAsync(PromptMessage[] messages, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 148
   at NaturalToQuery.Infrastructure.LLM.LLMService.ConvertToSqlAsync(String schema, String userQuery, ExecutionMode mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 62
   at NaturalToQuery.Application.Services.QueryOrchestrationService.ConvertNaturalLanguageAsync(Guid UserId, Guid profileId, String naturalLanguage, ExecutionMode Mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Application\Services\QueryOrchestrationService.cs:line 60
   at NaturalToQuery.Api.Controllers.Query.ConvertNaturalLanguage.HandleAsync(ConvertNaturalLanguageRequest req, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\Controllers\Query\ConvertNaturalLanguage.cs:line 45
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-09-05 01:35:58.551 +03:00 [ERR] Error occurred.
2025-09-05 01:35:58.694 +03:00 [ERR] An exception was thrown attempting to execute the error handler.
System.ArgumentNullException: Value cannot be null. (Parameter 'json')
   at System.Text.Json.ThrowHelper.ThrowArgumentNullException(String parameterName)
   at System.Text.Json.JsonDocument.Parse(String json, JsonDocumentOptions options)
   at NaturalToQuery.Api.Middlewares.ExceptionMiddlewareHelper.ParseGroqApiError(String responseBody) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\Middlewares\ExceptionMiddleware.Helper.cs:line 87
   at NaturalToQuery.Api.Middlewares.ExceptionMiddlewareHelper.<>c.<.cctor>b__3_4(Exception ex) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\Middlewares\ExceptionMiddleware.Helper.cs:line 58
   at NaturalToQuery.Api.Middlewares.ExceptionMiddlewareExtensions.<>c__DisplayClass0_0.<<ConfigureExceptionHandler>b__1>d.MoveNext() in C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\Middlewares\ExceptionMiddleware.cs:line 29
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
2025-09-05 01:35:59.049 +03:00 [ERR] An unhandled exception has occurred while executing the request.
NaturalToQuery.Core.Exceptions.LLMServiceException: Network error occurred while communicating with LLM API
 ---> System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it. (localhost:11434)
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.InjectNewHttp11ConnectionAsync(QueueItem queueItem)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionWaiter`1.WaitForConnectionWithTelemetryAsync(HttpRequestMessage request, HttpConnectionPool pool, Boolean async, CancellationToken requestCancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at NaturalToQuery.Infrastructure.LLM.LLMService.CallLlmApiAsync(PromptMessage[] messages, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 119
   --- End of inner exception stack trace ---
   at NaturalToQuery.Infrastructure.LLM.LLMService.CallLlmApiAsync(PromptMessage[] messages, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 148
   at NaturalToQuery.Infrastructure.LLM.LLMService.ConvertToSqlAsync(String schema, String userQuery, ExecutionMode mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 62
   at NaturalToQuery.Application.Services.QueryOrchestrationService.ConvertNaturalLanguageAsync(Guid UserId, Guid profileId, String naturalLanguage, ExecutionMode Mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Application\Services\QueryOrchestrationService.cs:line 60
   at NaturalToQuery.Api.Controllers.Query.ConvertNaturalLanguage.HandleAsync(ConvertNaturalLanguageRequest req, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\Controllers\Query\ConvertNaturalLanguage.cs:line 45
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-05 01:35:59.056 +03:00 [DBG] Connection id "0HNFC0C33U7M7" completed keep alive response.
2025-09-05 01:35:59.057 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:35:59.058 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:35:59.059 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:35:59.061 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 500 null text/plain; charset=utf-8 8204.7828ms
2025-09-05 01:36:00.415 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:36:00.418 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:36:00.419 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:36:00.420 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:36:00.421 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'.
2025-09-05 01:36:00.422 +03:00 [DBG] Connection id "0HNFC0C33U7M3" completed keep alive response.
2025-09-05 01:36:00.423 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 307 0 null 7.7445ms
2025-09-05 01:36:00.423 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:36:00.425 +03:00 [DBG] Connection id "0HNFC0C33U7M3", Request id "0HNFC0C33U7M3:00000008": started reading request body.
2025-09-05 01:36:00.427 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:36:00.428 +03:00 [DBG] Connection id "0HNFC0C33U7M3", Request id "0HNFC0C33U7M3:00000008": done reading request body.
2025-09-05 01:36:00.428 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:36:00.430 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:36:00.431 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:36:00.432 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:36:00.433 +03:00 [DBG] Connection id "0HNFC0C33U7M7", Request id "0HNFC0C33U7M7:00000002": started reading request body.
2025-09-05 01:36:00.434 +03:00 [DBG] Connection id "0HNFC0C33U7M7", Request id "0HNFC0C33U7M7:00000002": done reading request body.
2025-09-05 01:36:24.935 +03:00 [INF] Converting NL to SQL for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:36:24.937 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:36:24.937 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:36:24.938 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:36:24.939 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:36:24.939 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:36:24.940 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:36:24.941 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:36:24.941 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:36:24.943 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:36:24.944 +03:00 [DBG] Context 'ContextDB' started tracking 'UserInfo' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:36:24.945 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:36:24.946 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:36:24.947 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 2ms reading results.
2025-09-05 01:36:24.947 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:36:24.948 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:36:24.950 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:36:24.950 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:36:24.951 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:36:24.952 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:36:24.952 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:36:24.953 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:36:24.955 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:36:24.956 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:36:24.957 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 1ms reading results.
2025-09-05 01:36:24.958 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:36:24.959 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:36:24.960 +03:00 [INF] Fetching connection string for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:36:24.961 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:36:24.962 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:36:24.963 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:36:24.963 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:36:24.964 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:36:24.964 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:36:24.966 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:36:24.967 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:36:24.968 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 0ms reading results.
2025-09-05 01:36:24.969 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:36:24.969 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:36:24.970 +03:00 [DBG] Fetched secret for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:36:24.971 +03:00 [DBG] Fetching schema for Profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08", ForceRefresh=false
2025-09-05 01:36:24.972 +03:00 [INF] Fetching schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory (ForceRefresh=false)
2025-09-05 01:36:24.974 +03:00 [INF] Loaded schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory from cache file
2025-09-05 01:36:24.986 +03:00 [INF] Groq API key configured for HttpClient
2025-09-05 01:36:31.016 +03:00 [INF] Converting natural language to SQL. User query: show all categories
2025-09-05 01:36:33.762 +03:00 [DBG] Generated prompt with system message, 2 examples, and user query
2025-09-05 01:36:34.935 +03:00 [DBG] Generated prompt with 6 messages
2025-09-05 01:36:41.854 +03:00 [DBG] Request payload prepared for LLM API
2025-09-05 01:40:18.731 +03:00 [INF] This is a test log to file!
2025-09-05 01:40:19.034 +03:00 [INF] Shared Kernal configured successfully.
2025-09-05 01:40:19.044 +03:00 [INF] API configured successfully.
2025-09-05 01:40:19.171 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-05 01:40:19.258 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-05 01:40:19.628 +03:00 [WRN] The foreign key property 'Profile.UserInfoId1' was created in shadow state because a conflicting property with the simple name 'UserInfoId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-09-05 01:40:19.684 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:40:19.711 +03:00 [INF] Registered 20 endpoints in 874 milliseconds.
2025-09-05 01:40:19.717 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:40:19.754 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:40:19.826 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:40:19.837 +03:00 [DBG] Created DbConnection. (9ms).
2025-09-05 01:40:19.840 +03:00 [DBG] Migrating using database 'main' on server 'schema_cache.db'.
2025-09-05 01:40:19.844 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:40:19.847 +03:00 [DBG] Created DbConnection. (2ms).
2025-09-05 01:40:19.849 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:40:19.857 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:19.860 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:40:19.864 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:40:19.865 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:40:19.867 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:19.869 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-05 01:40:19.873 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:40:19.877 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 01:40:19.879 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (6ms).
2025-09-05 01:40:19.884 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 01:40:19.900 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 01:40:19.903 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:40:19.903 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 01:40:19.904 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:40:19.905 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-04 22:40:19.9029646+00:00');
SELECT changes();
2025-09-05 01:40:19.909 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-04 22:40:19.9029646+00:00');
SELECT changes();
2025-09-05 01:40:19.944 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 01:40:19.947 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 01:40:19.949 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-05 01:40:19.950 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-05 01:40:19.951 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (1ms).
2025-09-05 01:40:19.952 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 01:40:19.953 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 01:40:19.955 +03:00 [DBG] Committing transaction.
2025-09-05 01:40:19.956 +03:00 [DBG] Committed transaction.
2025-09-05 01:40:19.958 +03:00 [DBG] Disposing transaction.
2025-09-05 01:40:19.959 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 01:40:19.960 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 01:40:19.962 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:40:19.963 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:40:19.964 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:40:19.965 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:19.966 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:40:19.967 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:40:19.968 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:40:19.969 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 01:40:19.970 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:40:19.971 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 01:40:19.972 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 01:40:19.975 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:40:19.976 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:40:19.977 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:40:19.978 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 01:40:19.979 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 01:40:19.983 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:19.984 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 2ms reading results.
2025-09-05 01:40:19.988 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-05 01:40:19.989 +03:00 [DBG] Committing transaction.
2025-09-05 01:40:19.990 +03:00 [DBG] Committed transaction.
2025-09-05 01:40:19.991 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:40:19.992 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 01:40:19.993 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 01:40:19.994 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 01:40:19.998 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 01:40:20.000 +03:00 [DBG] Disposing transaction.
2025-09-05 01:40:20.001 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:20.004 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (2ms).
2025-09-05 01:40:20.005 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:40:20.005 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:40:20.006 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:40:20.007 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 01:40:20.008 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 01:40:20.030 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-05 01:40:20.052 +03:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-09-05 01:40:20.053 +03:00 [DBG] Hosting starting
2025-09-05 01:40:20.063 +03:00 [DBG] Middleware loaded
2025-09-05 01:40:20.066 +03:00 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16521 B).
2025-09-05 01:40:20.067 +03:00 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-09-05 01:40:20.128 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-05 01:40:20.131 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-05 01:40:20.133 +03:00 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-09-05 01:40:20.164 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert
2025-09-05 01:40:20.227 +03:00 [INF] Now listening on: https://localhost:7202
2025-09-05 01:40:20.228 +03:00 [INF] Now listening on: http://localhost:5000
2025-09-05 01:40:20.229 +03:00 [DBG] Loaded hosting startup assembly NaturalToQuery.Api
2025-09-05 01:40:20.230 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-05 01:40:20.230 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-05 01:40:20.231 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-05 01:40:20.236 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 01:40:20.249 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 01:40:20.276 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-05 01:40:20.277 +03:00 [INF] Hosting environment: Development
2025-09-05 01:40:20.278 +03:00 [INF] Content root path: C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql
2025-09-05 01:40:20.279 +03:00 [DBG] Hosting started
2025-09-05 01:40:26.345 +03:00 [DBG] Connection id "0HNFC0G5EFAPS" received FIN.
2025-09-05 01:40:26.352 +03:00 [DBG] Connection id "0HNFC0G5EFAPS" accepted.
2025-09-05 01:40:26.353 +03:00 [DBG] Connection id "0HNFC0G5EFAPS" started.
2025-09-05 01:40:26.354 +03:00 [DBG] Connection id "0HNFC0G5EFAPT" accepted.
2025-09-05 01:40:26.356 +03:00 [DBG] Connection id "0HNFC0G5EFAPT" started.
2025-09-05 01:40:26.359 +03:00 [DBG] Connection id "0HNFC0G5EFAPS" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 01:40:26.362 +03:00 [DBG] Connection id "0HNFC0G5EFAPS" disconnecting.
2025-09-05 01:40:26.364 +03:00 [DBG] Connection id "0HNFC0G5EFAPS" stopped.
2025-09-05 01:40:26.377 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:40:26.411 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:40:26.413 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:40:26.414 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:40:26.432 +03:00 [DBG] Https port '7202' loaded from configuration.
2025-09-05 01:40:26.434 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'.
2025-09-05 01:40:26.436 +03:00 [DBG] Connection id "0HNFC0G5EFAPT" completed keep alive response.
2025-09-05 01:40:26.438 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 307 0 null 64.6302ms
2025-09-05 01:40:26.440 +03:00 [DBG] Connection id "0HNFC0G5EFAPV" accepted.
2025-09-05 01:40:26.439 +03:00 [DBG] Connection id "0HNFC0G5EFAPU" accepted.
2025-09-05 01:40:26.440 +03:00 [DBG] Connection id "0HNFC0G5EFAPU" received FIN.
2025-09-05 01:40:26.447 +03:00 [DBG] Connection id "0HNFC0G5EFAPV" started.
2025-09-05 01:40:26.448 +03:00 [DBG] Connection id "0HNFC0G5EFAPU" started.
2025-09-05 01:40:26.448 +03:00 [DBG] Connection id "0HNFC0G5EFAPT", Request id "0HNFC0G5EFAPT:00000001": started reading request body.
2025-09-05 01:40:26.450 +03:00 [DBG] Connection id "0HNFC0G5EFAPU" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 01:40:26.451 +03:00 [DBG] Connection id "0HNFC0G5EFAPT", Request id "0HNFC0G5EFAPT:00000001": done reading request body.
2025-09-05 01:40:26.452 +03:00 [DBG] Connection id "0HNFC0G5EFAPU" disconnecting.
2025-09-05 01:40:26.454 +03:00 [DBG] Connection id "0HNFC0G5EFAPU" stopped.
2025-09-05 01:40:26.478 +03:00 [DBG] Connection 0HNFC0G5EFAPV established using the following protocol: "Tls13"
2025-09-05 01:40:26.481 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:40:26.484 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:40:26.485 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:40:26.486 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:40:26.490 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:40:26.500 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:40:26.531 +03:00 [DBG] Connection id "0HNFC0G5EFAPV", Request id "0HNFC0G5EFAPV:00000001": started reading request body.
2025-09-05 01:40:26.533 +03:00 [DBG] Connection id "0HNFC0G5EFAPV", Request id "0HNFC0G5EFAPV:00000001": done reading request body.
2025-09-05 01:40:28.528 +03:00 [INF] Converting NL to SQL for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:40:28.598 +03:00 [DBG] Compiling query expression: 
'DbSet<UserInfo>()
    .Include(p => p.Profiles)
    .FirstOrDefault(e => e.Id.Equals(__id_0))'
2025-09-05 01:40:28.638 +03:00 [DBG] Including navigation: 'UserInfo.Profiles'.
2025-09-05 01:40:28.878 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<UserInfo>(
    asyncEnumerable: SingleQueryingEnumerable.Create<UserInfo>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: UserInfo.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserInfo.ApiKey (string) Required MaxLength(200), 1], [Property: UserInfo.CreatedUtc (DateTime) Required, 2], [Property: UserInfo.LastUpdatedUtc (DateTime) Required, 3], [Property: UserInfo.Mode (AIMode) Required, 4] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 5], [Property: Profile.CacheFile (string) MaxLength(500), 6], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 7], [Property: Profile.DatabaseName (string) Required, 8], [Property: Profile.Name (string) Required MaxLength(200), 9], [Property: Profile.Provider (ProviderType) Required, 10], [Property: Profile.SecretRef (string) Required, 11], [Property: Profile.UserInfoId (Guid?) FK Index, 12], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 13] }
                3 -> 5
            SELECT u0.Id, u0.ApiKey, u0.CreatedUtc, u0.LastUpdatedUtc, u0.Mode, p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
            FROM 
            (
                SELECT TOP(1) u.Id, u.ApiKey, u.CreatedUtc, u.LastUpdatedUtc, u.Mode
                FROM UserInfos AS u
                WHERE u.Id == @__id_0
            ) AS u0
            LEFT JOIN Profiles AS p ON u0.Id == p.UserInfoId
            ORDER BY u0.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: UserInfo.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserInfo.ApiKey (string) Required MaxLength(200), 1], [Property: UserInfo.CreatedUtc (DateTime) Required, 2], [Property: UserInfo.LastUpdatedUtc (DateTime) Required, 3], [Property: UserInfo.Mode (AIMode) Required, 4] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 5], [Property: Profile.CacheFile (string) MaxLength(500), 6], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 7], [Property: Profile.DatabaseName (string) Required, 8], [Property: Profile.Name (string) Required MaxLength(200), 9], [Property: Profile.Provider (ProviderType) Required, 10], [Property: Profile.SecretRef (string) Required, 11], [Property: Profile.UserInfoId (Guid?) FK Index, 12], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 13] }
                3 -> 5
            SELECT u0.Id, u0.ApiKey, u0.CreatedUtc, u0.LastUpdatedUtc, u0.Mode, p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
            FROM 
            (
                SELECT TOP(1) u.Id, u.ApiKey, u.CreatedUtc, u.LastUpdatedUtc, u.Mode
                FROM UserInfos AS u
                WHERE u.Id == @__id_0
            ) AS u0
            LEFT JOIN Profiles AS p ON u0.Id == p.UserInfoId
            ORDER BY u0.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                UserInfo entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    UserInfo instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(UserInfo);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: UserInfo.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (UserInfo)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")]: 
                                {
                                    return 
                                    {
                                        UserInfo instance;
                                        instance = new UserInfo();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<ApiKey>k__BackingField = dataReader.GetString(1);
                                        instance.<CreatedUtc>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<LastUpdatedUtc>k__BackingField = dataReader.GetDateTime(3);
                                        instance.<Mode>k__BackingField = Invoke(((EnumToNumberConverter<AIMode, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: UserInfo.Mode (AIMode) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindProperty("Mode")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(4));
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(UserInfo)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<UserInfo, UserInfo>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (UserInfo)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: UserInfo.Profiles (List<Profile>) Collection ToDependent Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<UserInfo, List<Profile>, Profile> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<UserInfo, Profile>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(5) ? default(Guid?) : (Guid?)dataReader.GetGuid(5) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Profile entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Profile instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Profile);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Profile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetGuid(5) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Profile)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<Guid?>(dataReader.IsDBNull(13) ? default(Guid?) : (Guid?)dataReader.GetGuid(13));
                                        return 
                                        {
                                            Profile instance;
                                            instance = new Profile();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(5) ? default(Guid) : dataReader.GetGuid(5);
                                            instance.<CacheFile>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                            instance.<CreatedUtc>k__BackingField = dataReader.IsDBNull(7) ? default(DateTimeOffset) : dataReader.GetFieldValue<DateTimeOffset>(7);
                                            instance.<DatabaseName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                            instance.<Name>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                            instance.<Provider>k__BackingField = dataReader.IsDBNull(10) ? default(ProviderType) : Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(10));
                                            instance.<SecretRef>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                            instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(12) ? default(Guid?) : (Guid?)dataReader.GetGuid(12);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Profile)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<UserInfo, List<Profile>, Profile> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (UserInfo)(resultContext.Values[0]) : default(UserInfo);
        }, 
        contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-05 01:40:28.903 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:40:28.904 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:40:28.905 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:40:28.907 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:28.908 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:40:28.909 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:40:28.911 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 01:40:28.913 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:40:28.918 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:40:28.946 +03:00 [DBG] Context 'ContextDB' started tracking 'UserInfo' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:40:28.973 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:40:28.989 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:28.991 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 70ms reading results.
2025-09-05 01:40:28.993 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:28.994 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:40:28.999 +03:00 [DBG] Compiling query expression: 
'DbSet<Profile>()
    .Include(e => e.Queries)
    .FirstOrDefault(e => e.Id.Equals(__id_0))'
2025-09-05 01:40:29.000 +03:00 [DBG] Including navigation: 'Profile.Queries'.
2025-09-05 01:40:29.012 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Profile>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Profile>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Profile entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Profile instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Profile);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Profile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Profile)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                {
                                    shadowSnapshot1 = (ISnapshot)new Snapshot<Guid?>(dataReader.IsDBNull(8) ? default(Guid?) : (Guid?)dataReader.GetGuid(8));
                                    return 
                                    {
                                        Profile instance;
                                        instance = new Profile();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<CacheFile>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                        instance.<CreatedUtc>k__BackingField = dataReader.GetFieldValue<DateTimeOffset>(2);
                                        instance.<DatabaseName>k__BackingField = dataReader.GetString(3);
                                        instance.<Name>k__BackingField = dataReader.GetString(4);
                                        instance.<Provider>k__BackingField = Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                        instance.<SecretRef>k__BackingField = dataReader.GetString(6);
                                        instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid?) : (Guid?)dataReader.GetGuid(7);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Profile)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Profile, Profile>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Profile)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: Profile.Queries (List<Query>) Collection ToDependent Query Inverse: Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Profile, Query>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(9) ? default(Guid?) : (Guid?)dataReader.GetGuid(9) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Query entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Query instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Query);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Query.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetGuid(9) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Query)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]: 
                                    {
                                        return 
                                        {
                                            Query instance;
                                            instance = new Query();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                            instance.<ProfileId>k__BackingField = dataReader.IsDBNull(10) ? default(Guid) : dataReader.GetGuid(10);
                                            instance.<ResultJson>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                            instance.<SqlQuery>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                            instance.<TimestampUtc>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime) : dataReader.GetDateTime(13);
                                            instance.<UserQuery>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Query)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Query.Profile (Profile) ToPrincipal Profile Inverse: Queries | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindNavigation("Profile")], 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                    return namelessParameter{11}.<Profile>k__BackingField = namelessParameter{10};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Profile)(resultContext.Values[0]) : default(Profile);
        }, 
        contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-05 01:40:29.017 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:40:29.018 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:29.019 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:40:29.020 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:40:29.021 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:40:29.022 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:40:29.024 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:40:29.026 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:29.027 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 1ms reading results.
2025-09-05 01:40:29.028 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:29.029 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:40:29.038 +03:00 [INF] Fetching connection string for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:40:29.040 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:40:29.041 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:29.042 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:40:29.043 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:40:29.044 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:40:29.046 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:40:29.047 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:40:29.049 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:29.049 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 0ms reading results.
2025-09-05 01:40:29.050 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:29.051 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:40:29.060 +03:00 [DBG] Fetched secret for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:40:29.070 +03:00 [DBG] Fetching schema for Profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08", ForceRefresh=false
2025-09-05 01:40:29.072 +03:00 [INF] Fetching schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory (ForceRefresh=false)
2025-09-05 01:40:29.159 +03:00 [INF] Loaded schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory from cache file
2025-09-05 01:40:29.182 +03:00 [INF] Groq API key configured for HttpClient
2025-09-05 01:40:29.184 +03:00 [INF] Converting natural language to SQL. User query: show all categories
2025-09-05 01:40:29.186 +03:00 [DBG] Generated prompt with system message, 2 examples, and user query
2025-09-05 01:40:29.188 +03:00 [DBG] Generated prompt with 6 messages
2025-09-05 01:40:29.194 +03:00 [DBG] Request payload prepared for LLM API
2025-09-05 01:40:29.740 +03:00 [INF] LLM API responded with status: "NotFound"
2025-09-05 01:40:29.742 +03:00 [ERR] LLM API error: "NotFound" - {"error":{"message":"Unknown request URL: POST /chat. Please check the URL for typos, or see the docs at https://console.groq.com/docs/","type":"invalid_request_error","code":"unknown_url"}}

2025-09-05 01:40:29.990 +03:00 [INF] Executed endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:40:30.114 +03:00 [ERR] An unhandled exception has occurred while executing the request.
NaturalToQuery.Core.Exceptions.LLMServiceException: LLM API request failed with status NotFound
   at NaturalToQuery.Infrastructure.LLM.LLMService.CallLlmApiAsync(PromptMessage[] messages, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 143
   at NaturalToQuery.Infrastructure.LLM.LLMService.ConvertToSqlAsync(String schema, String userQuery, ExecutionMode mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 71
   at NaturalToQuery.Application.Services.QueryOrchestrationService.ConvertNaturalLanguageAsync(Guid UserId, Guid profileId, String naturalLanguage, ExecutionMode Mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Application\Services\QueryOrchestrationService.cs:line 60
   at NaturalToQuery.Api.Controllers.Query.ConvertNaturalLanguage.HandleAsync(ConvertNaturalLanguageRequest req, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\Controllers\Query\ConvertNaturalLanguage.cs:line 45
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-09-05 01:40:30.123 +03:00 [ERR] Error occurred.
2025-09-05 01:40:30.132 +03:00 [DBG] Connection id "0HNFC0G5EFAPV" completed keep alive response.
2025-09-05 01:40:30.134 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:40:30.136 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:40:30.138 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:40:30.139 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 404 null application/json; charset=utf-8 3658.5408ms
2025-09-05 01:40:49.166 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:40:49.169 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:40:49.170 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:40:49.171 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:40:49.173 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'.
2025-09-05 01:40:49.174 +03:00 [DBG] Connection id "0HNFC0G5EFAPT" completed keep alive response.
2025-09-05 01:40:49.174 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 307 0 null 8.8855ms
2025-09-05 01:40:49.175 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:40:49.177 +03:00 [DBG] Connection id "0HNFC0G5EFAPT", Request id "0HNFC0G5EFAPT:00000002": started reading request body.
2025-09-05 01:40:49.179 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:40:49.179 +03:00 [DBG] Connection id "0HNFC0G5EFAPT", Request id "0HNFC0G5EFAPT:00000002": done reading request body.
2025-09-05 01:40:49.180 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:40:49.182 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:40:49.183 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:40:49.192 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:40:49.194 +03:00 [DBG] Connection id "0HNFC0G5EFAPV", Request id "0HNFC0G5EFAPV:00000002": started reading request body.
2025-09-05 01:40:49.195 +03:00 [DBG] Connection id "0HNFC0G5EFAPV", Request id "0HNFC0G5EFAPV:00000002": done reading request body.
2025-09-05 01:40:52.353 +03:00 [INF] Converting NL to SQL for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:40:52.356 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:40:52.356 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:40:52.357 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:40:52.358 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:52.359 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:40:52.359 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:40:52.361 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:40:52.361 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:40:52.363 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:40:52.365 +03:00 [DBG] Context 'ContextDB' started tracking 'UserInfo' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:40:52.366 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:40:52.367 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:52.368 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 3ms reading results.
2025-09-05 01:40:52.369 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:52.370 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:40:52.371 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:40:52.372 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:52.373 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:40:52.374 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:40:52.375 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:40:52.376 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:40:52.377 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:40:52.379 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:52.380 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 1ms reading results.
2025-09-05 01:40:52.381 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:52.382 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:40:52.384 +03:00 [INF] Fetching connection string for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:40:52.385 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:40:52.386 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:52.387 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:40:52.387 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:40:52.388 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:40:52.389 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:40:52.391 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:40:52.392 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:52.393 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 0ms reading results.
2025-09-05 01:40:52.394 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:40:52.395 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:40:52.397 +03:00 [DBG] Fetched secret for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:40:52.398 +03:00 [DBG] Fetching schema for Profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08", ForceRefresh=false
2025-09-05 01:40:52.399 +03:00 [INF] Fetching schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory (ForceRefresh=false)
2025-09-05 01:40:52.411 +03:00 [INF] Loaded schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory from cache file
2025-09-05 01:40:52.412 +03:00 [INF] Groq API key configured for HttpClient
2025-09-05 01:40:52.413 +03:00 [INF] Converting natural language to SQL. User query: show all categories
2025-09-05 01:40:52.413 +03:00 [DBG] Generated prompt with system message, 2 examples, and user query
2025-09-05 01:40:52.414 +03:00 [DBG] Generated prompt with 6 messages
2025-09-05 01:40:52.416 +03:00 [DBG] Request payload prepared for LLM API
2025-09-05 01:40:52.992 +03:00 [INF] LLM API responded with status: "NotFound"
2025-09-05 01:40:52.994 +03:00 [ERR] LLM API error: "NotFound" - {"error":{"message":"Unknown request URL: POST /chat. Please check the URL for typos, or see the docs at https://console.groq.com/docs/","type":"invalid_request_error","code":"unknown_url"}}

2025-09-05 01:40:53.243 +03:00 [INF] Executed endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:40:53.366 +03:00 [ERR] An unhandled exception has occurred while executing the request.
NaturalToQuery.Core.Exceptions.LLMServiceException: LLM API request failed with status NotFound
   at NaturalToQuery.Infrastructure.LLM.LLMService.CallLlmApiAsync(PromptMessage[] messages, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 143
   at NaturalToQuery.Infrastructure.LLM.LLMService.ConvertToSqlAsync(String schema, String userQuery, ExecutionMode mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 71
   at NaturalToQuery.Application.Services.QueryOrchestrationService.ConvertNaturalLanguageAsync(Guid UserId, Guid profileId, String naturalLanguage, ExecutionMode Mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Application\Services\QueryOrchestrationService.cs:line 60
   at NaturalToQuery.Api.Controllers.Query.ConvertNaturalLanguage.HandleAsync(ConvertNaturalLanguageRequest req, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\Controllers\Query\ConvertNaturalLanguage.cs:line 45
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-09-05 01:40:53.370 +03:00 [ERR] Error occurred.
2025-09-05 01:40:53.371 +03:00 [DBG] Connection id "0HNFC0G5EFAPV" completed keep alive response.
2025-09-05 01:40:53.372 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:40:53.372 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:40:53.374 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:40:53.375 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 404 null application/json; charset=utf-8 4199.7703ms
2025-09-05 01:41:07.031 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:41:07.034 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:41:07.035 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:41:07.036 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:41:07.036 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'.
2025-09-05 01:41:07.037 +03:00 [DBG] Connection id "0HNFC0G5EFAPT" completed keep alive response.
2025-09-05 01:41:07.038 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 307 0 null 6.6038ms
2025-09-05 01:41:07.038 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:41:07.040 +03:00 [DBG] Connection id "0HNFC0G5EFAPT", Request id "0HNFC0G5EFAPT:00000003": started reading request body.
2025-09-05 01:41:07.042 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:41:07.043 +03:00 [DBG] Connection id "0HNFC0G5EFAPT", Request id "0HNFC0G5EFAPT:00000003": done reading request body.
2025-09-05 01:41:07.043 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:41:07.046 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:41:07.047 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:41:07.049 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:41:07.050 +03:00 [DBG] Connection id "0HNFC0G5EFAPV", Request id "0HNFC0G5EFAPV:00000003": started reading request body.
2025-09-05 01:41:07.051 +03:00 [DBG] Connection id "0HNFC0G5EFAPV", Request id "0HNFC0G5EFAPV:00000003": done reading request body.
2025-09-05 01:41:19.131 +03:00 [INF] Converting NL to SQL for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:41:20.229 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:41:20.230 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:41:20.230 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:41:20.231 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:41:20.232 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:41:20.233 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:41:20.234 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:41:20.235 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:41:20.237 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:41:20.238 +03:00 [DBG] Context 'ContextDB' started tracking 'UserInfo' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:41:20.240 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:41:20.241 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:41:20.242 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 3ms reading results.
2025-09-05 01:41:20.243 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:41:20.243 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:41:20.590 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:41:20.591 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:41:20.592 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:41:20.594 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:41:20.595 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 01:41:20.596 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:41:20.598 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:41:20.600 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:41:20.600 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 0ms reading results.
2025-09-05 01:41:20.601 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:41:20.602 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:41:20.604 +03:00 [INF] Fetching connection string for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:41:20.606 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:41:20.607 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:41:20.608 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:41:20.609 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:41:20.609 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:41:20.616 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:41:20.618 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:41:20.619 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:41:20.621 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 1ms reading results.
2025-09-05 01:41:20.622 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:41:20.623 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:41:20.625 +03:00 [DBG] Fetched secret for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:41:20.625 +03:00 [DBG] Fetching schema for Profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08", ForceRefresh=false
2025-09-05 01:41:20.626 +03:00 [INF] Fetching schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory (ForceRefresh=false)
2025-09-05 01:41:20.645 +03:00 [INF] Loaded schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory from cache file
2025-09-05 01:41:35.366 +03:00 [INF] Groq API key configured for HttpClient
2025-09-05 01:41:40.906 +03:00 [INF] Converting natural language to SQL. User query: show all categories
2025-09-05 01:41:40.980 +03:00 [DBG] Generated prompt with system message, 2 examples, and user query
2025-09-05 01:41:41.004 +03:00 [DBG] Generated prompt with 6 messages
2025-09-05 01:41:41.006 +03:00 [DBG] Request payload prepared for LLM API
2025-09-05 01:41:41.455 +03:00 [INF] LLM API responded with status: "NotFound"
2025-09-05 01:41:41.456 +03:00 [ERR] LLM API error: "NotFound" - {"error":{"message":"Unknown request URL: POST /chat. Please check the URL for typos, or see the docs at https://console.groq.com/docs/","type":"invalid_request_error","code":"unknown_url"}}

2025-09-05 01:41:41.776 +03:00 [INF] Executed endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:41:41.909 +03:00 [ERR] An unhandled exception has occurred while executing the request.
NaturalToQuery.Core.Exceptions.LLMServiceException: LLM API request failed with status NotFound
   at NaturalToQuery.Infrastructure.LLM.LLMService.CallLlmApiAsync(PromptMessage[] messages, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 143
   at NaturalToQuery.Infrastructure.LLM.LLMService.ConvertToSqlAsync(String schema, String userQuery, ExecutionMode mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 71
   at NaturalToQuery.Application.Services.QueryOrchestrationService.ConvertNaturalLanguageAsync(Guid UserId, Guid profileId, String naturalLanguage, ExecutionMode Mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Application\Services\QueryOrchestrationService.cs:line 60
   at NaturalToQuery.Api.Controllers.Query.ConvertNaturalLanguage.HandleAsync(ConvertNaturalLanguageRequest req, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\Controllers\Query\ConvertNaturalLanguage.cs:line 45
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-09-05 01:41:41.912 +03:00 [ERR] Error occurred.
2025-09-05 01:41:41.913 +03:00 [DBG] Connection id "0HNFC0G5EFAPV" completed keep alive response.
2025-09-05 01:41:41.913 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:41:41.914 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:41:41.915 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:41:41.916 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 404 null application/json; charset=utf-8 34877.7397ms
2025-09-05 01:42:23.924 +03:00 [INF] This is a test log to file!
2025-09-05 01:42:24.203 +03:00 [INF] Shared Kernal configured successfully.
2025-09-05 01:42:24.210 +03:00 [INF] API configured successfully.
2025-09-05 01:42:24.277 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-05 01:42:24.321 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-05 01:42:24.742 +03:00 [WRN] The foreign key property 'Profile.UserInfoId1' was created in shadow state because a conflicting property with the simple name 'UserInfoId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-09-05 01:42:24.804 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:42:24.833 +03:00 [INF] Registered 20 endpoints in 793 milliseconds.
2025-09-05 01:42:24.840 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:42:24.880 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:42:24.975 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:42:24.984 +03:00 [DBG] Created DbConnection. (7ms).
2025-09-05 01:42:24.987 +03:00 [DBG] Migrating using database 'main' on server 'schema_cache.db'.
2025-09-05 01:42:24.991 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:42:24.993 +03:00 [DBG] Created DbConnection. (2ms).
2025-09-05 01:42:24.995 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:42:25.002 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:42:25.006 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:42:25.010 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:42:25.012 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:42:25.014 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:42:25.016 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-05 01:42:25.019 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:42:25.024 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 01:42:25.025 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (6ms).
2025-09-05 01:42:25.030 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 01:42:25.048 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 01:42:25.051 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:42:25.052 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 01:42:25.053 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:42:25.054 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-04 22:42:25.0512721+00:00');
SELECT changes();
2025-09-05 01:42:25.063 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-04 22:42:25.0512721+00:00');
SELECT changes();
2025-09-05 01:42:25.102 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 01:42:25.106 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 01:42:25.108 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-05 01:42:25.109 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-05 01:42:25.111 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-09-05 01:42:25.112 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 01:42:25.114 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 01:42:25.116 +03:00 [DBG] Committing transaction.
2025-09-05 01:42:25.118 +03:00 [DBG] Committed transaction.
2025-09-05 01:42:25.119 +03:00 [DBG] Disposing transaction.
2025-09-05 01:42:25.122 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 01:42:25.123 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 01:42:25.125 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:42:25.126 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:42:25.127 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:42:25.129 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:42:25.130 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:42:25.131 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:42:25.132 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:42:25.133 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:42:25.134 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 01:42:25.136 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 01:42:25.137 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 01:42:25.140 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:42:25.141 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:42:25.144 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-09-05 01:42:25.145 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 01:42:25.147 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 01:42:25.151 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:42:25.153 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 3ms reading results.
2025-09-05 01:42:25.159 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-05 01:42:25.165 +03:00 [DBG] Committing transaction.
2025-09-05 01:42:25.166 +03:00 [DBG] Committed transaction.
2025-09-05 01:42:25.167 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:42:25.168 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:42:25.170 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 01:42:25.171 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 01:42:25.185 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 01:42:25.187 +03:00 [DBG] Disposing transaction.
2025-09-05 01:42:25.189 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:42:25.192 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (4ms).
2025-09-05 01:42:25.194 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:42:25.195 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:42:25.199 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (4ms).
2025-09-05 01:42:25.200 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 01:42:25.201 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 01:42:25.228 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-05 01:42:25.253 +03:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-09-05 01:42:25.255 +03:00 [DBG] Hosting starting
2025-09-05 01:42:25.268 +03:00 [DBG] Middleware loaded
2025-09-05 01:42:25.272 +03:00 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16521 B).
2025-09-05 01:42:25.274 +03:00 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-09-05 01:42:25.359 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-05 01:42:25.361 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-05 01:42:25.364 +03:00 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-09-05 01:42:25.403 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert
2025-09-05 01:42:25.455 +03:00 [INF] Now listening on: https://localhost:7202
2025-09-05 01:42:25.456 +03:00 [INF] Now listening on: http://localhost:5000
2025-09-05 01:42:25.457 +03:00 [DBG] Loaded hosting startup assembly NaturalToQuery.Api
2025-09-05 01:42:25.457 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-05 01:42:25.458 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-05 01:42:25.458 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-05 01:42:25.464 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 01:42:25.484 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 01:42:25.521 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-05 01:42:25.522 +03:00 [INF] Hosting environment: Development
2025-09-05 01:42:25.523 +03:00 [INF] Content root path: C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql
2025-09-05 01:42:25.523 +03:00 [DBG] Hosting started
2025-09-05 01:42:27.247 +03:00 [DBG] Connection id "0HNFC0H9FFF76" received FIN.
2025-09-05 01:42:27.253 +03:00 [DBG] Connection id "0HNFC0H9FFF76" accepted.
2025-09-05 01:42:27.255 +03:00 [DBG] Connection id "0HNFC0H9FFF76" started.
2025-09-05 01:42:27.257 +03:00 [DBG] Connection id "0HNFC0H9FFF77" accepted.
2025-09-05 01:42:27.258 +03:00 [DBG] Connection id "0HNFC0H9FFF77" started.
2025-09-05 01:42:27.262 +03:00 [DBG] Connection id "0HNFC0H9FFF76" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 01:42:27.265 +03:00 [DBG] Connection id "0HNFC0H9FFF76" disconnecting.
2025-09-05 01:42:27.266 +03:00 [DBG] Connection id "0HNFC0H9FFF76" stopped.
2025-09-05 01:42:27.283 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:42:27.317 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:42:27.318 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:42:27.320 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:42:27.338 +03:00 [DBG] Https port '7202' loaded from configuration.
2025-09-05 01:42:27.340 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'.
2025-09-05 01:42:27.342 +03:00 [DBG] Connection id "0HNFC0H9FFF77" completed keep alive response.
2025-09-05 01:42:27.344 +03:00 [DBG] Connection id "0HNFC0H9FFF78" accepted.
2025-09-05 01:42:27.344 +03:00 [DBG] Connection id "0HNFC0H9FFF78" received FIN.
2025-09-05 01:42:27.344 +03:00 [DBG] Connection id "0HNFC0H9FFF79" accepted.
2025-09-05 01:42:27.344 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 307 0 null 66.2559ms
2025-09-05 01:42:27.349 +03:00 [DBG] Connection id "0HNFC0H9FFF78" started.
2025-09-05 01:42:27.350 +03:00 [DBG] Connection id "0HNFC0H9FFF79" started.
2025-09-05 01:42:27.355 +03:00 [DBG] Connection id "0HNFC0H9FFF78" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 01:42:27.355 +03:00 [DBG] Connection id "0HNFC0H9FFF77", Request id "0HNFC0H9FFF77:00000001": started reading request body.
2025-09-05 01:42:27.356 +03:00 [DBG] Connection id "0HNFC0H9FFF78" disconnecting.
2025-09-05 01:42:27.357 +03:00 [DBG] Connection id "0HNFC0H9FFF77", Request id "0HNFC0H9FFF77:00000001": done reading request body.
2025-09-05 01:42:27.358 +03:00 [DBG] Connection id "0HNFC0H9FFF78" stopped.
2025-09-05 01:42:27.382 +03:00 [DBG] Connection 0HNFC0H9FFF79 established using the following protocol: "Tls13"
2025-09-05 01:42:27.386 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:42:27.391 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:42:27.392 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:42:27.394 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:42:27.397 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:42:27.408 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:42:27.438 +03:00 [DBG] Connection id "0HNFC0H9FFF79", Request id "0HNFC0H9FFF79:00000001": started reading request body.
2025-09-05 01:42:27.442 +03:00 [DBG] Connection id "0HNFC0H9FFF79", Request id "0HNFC0H9FFF79:00000001": done reading request body.
2025-09-05 01:42:30.772 +03:00 [INF] Converting NL to SQL for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:42:30.826 +03:00 [DBG] Compiling query expression: 
'DbSet<UserInfo>()
    .Include(p => p.Profiles)
    .FirstOrDefault(e => e.Id.Equals(__id_0))'
2025-09-05 01:42:30.865 +03:00 [DBG] Including navigation: 'UserInfo.Profiles'.
2025-09-05 01:42:31.094 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<UserInfo>(
    asyncEnumerable: SingleQueryingEnumerable.Create<UserInfo>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: UserInfo.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserInfo.ApiKey (string) Required MaxLength(200), 1], [Property: UserInfo.CreatedUtc (DateTime) Required, 2], [Property: UserInfo.LastUpdatedUtc (DateTime) Required, 3], [Property: UserInfo.Mode (AIMode) Required, 4] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 5], [Property: Profile.CacheFile (string) MaxLength(500), 6], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 7], [Property: Profile.DatabaseName (string) Required, 8], [Property: Profile.Name (string) Required MaxLength(200), 9], [Property: Profile.Provider (ProviderType) Required, 10], [Property: Profile.SecretRef (string) Required, 11], [Property: Profile.UserInfoId (Guid?) FK Index, 12], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 13] }
                3 -> 5
            SELECT u0.Id, u0.ApiKey, u0.CreatedUtc, u0.LastUpdatedUtc, u0.Mode, p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
            FROM 
            (
                SELECT TOP(1) u.Id, u.ApiKey, u.CreatedUtc, u.LastUpdatedUtc, u.Mode
                FROM UserInfos AS u
                WHERE u.Id == @__id_0
            ) AS u0
            LEFT JOIN Profiles AS p ON u0.Id == p.UserInfoId
            ORDER BY u0.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: UserInfo.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserInfo.ApiKey (string) Required MaxLength(200), 1], [Property: UserInfo.CreatedUtc (DateTime) Required, 2], [Property: UserInfo.LastUpdatedUtc (DateTime) Required, 3], [Property: UserInfo.Mode (AIMode) Required, 4] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 5], [Property: Profile.CacheFile (string) MaxLength(500), 6], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 7], [Property: Profile.DatabaseName (string) Required, 8], [Property: Profile.Name (string) Required MaxLength(200), 9], [Property: Profile.Provider (ProviderType) Required, 10], [Property: Profile.SecretRef (string) Required, 11], [Property: Profile.UserInfoId (Guid?) FK Index, 12], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 13] }
                3 -> 5
            SELECT u0.Id, u0.ApiKey, u0.CreatedUtc, u0.LastUpdatedUtc, u0.Mode, p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
            FROM 
            (
                SELECT TOP(1) u.Id, u.ApiKey, u.CreatedUtc, u.LastUpdatedUtc, u.Mode
                FROM UserInfos AS u
                WHERE u.Id == @__id_0
            ) AS u0
            LEFT JOIN Profiles AS p ON u0.Id == p.UserInfoId
            ORDER BY u0.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                UserInfo entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    UserInfo instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(UserInfo);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: UserInfo.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (UserInfo)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")]: 
                                {
                                    return 
                                    {
                                        UserInfo instance;
                                        instance = new UserInfo();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<ApiKey>k__BackingField = dataReader.GetString(1);
                                        instance.<CreatedUtc>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<LastUpdatedUtc>k__BackingField = dataReader.GetDateTime(3);
                                        instance.<Mode>k__BackingField = Invoke(((EnumToNumberConverter<AIMode, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: UserInfo.Mode (AIMode) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindProperty("Mode")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(4));
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(UserInfo)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<UserInfo, UserInfo>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (UserInfo)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: UserInfo.Profiles (List<Profile>) Collection ToDependent Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<UserInfo, List<Profile>, Profile> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<UserInfo, Profile>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(5) ? default(Guid?) : (Guid?)dataReader.GetGuid(5) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Profile entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Profile instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Profile);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Profile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetGuid(5) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Profile)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<Guid?>(dataReader.IsDBNull(13) ? default(Guid?) : (Guid?)dataReader.GetGuid(13));
                                        return 
                                        {
                                            Profile instance;
                                            instance = new Profile();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(5) ? default(Guid) : dataReader.GetGuid(5);
                                            instance.<CacheFile>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                            instance.<CreatedUtc>k__BackingField = dataReader.IsDBNull(7) ? default(DateTimeOffset) : dataReader.GetFieldValue<DateTimeOffset>(7);
                                            instance.<DatabaseName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                            instance.<Name>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                            instance.<Provider>k__BackingField = dataReader.IsDBNull(10) ? default(ProviderType) : Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(10));
                                            instance.<SecretRef>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                            instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(12) ? default(Guid?) : (Guid?)dataReader.GetGuid(12);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Profile)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<UserInfo, List<Profile>, Profile> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (UserInfo)(resultContext.Values[0]) : default(UserInfo);
        }, 
        contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-05 01:42:31.118 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:42:31.119 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:42:31.121 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:42:31.123 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:42:31.124 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:42:31.125 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:42:31.127 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 01:42:31.130 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:42:31.135 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:42:31.164 +03:00 [DBG] Context 'ContextDB' started tracking 'UserInfo' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:42:31.191 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:42:31.206 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:42:31.208 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 71ms reading results.
2025-09-05 01:42:31.211 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:42:31.212 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:42:31.217 +03:00 [DBG] Compiling query expression: 
'DbSet<Profile>()
    .Include(e => e.Queries)
    .FirstOrDefault(e => e.Id.Equals(__id_0))'
2025-09-05 01:42:31.218 +03:00 [DBG] Including navigation: 'Profile.Queries'.
2025-09-05 01:42:31.230 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Profile>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Profile>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Profile entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Profile instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Profile);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Profile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Profile)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                {
                                    shadowSnapshot1 = (ISnapshot)new Snapshot<Guid?>(dataReader.IsDBNull(8) ? default(Guid?) : (Guid?)dataReader.GetGuid(8));
                                    return 
                                    {
                                        Profile instance;
                                        instance = new Profile();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<CacheFile>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                        instance.<CreatedUtc>k__BackingField = dataReader.GetFieldValue<DateTimeOffset>(2);
                                        instance.<DatabaseName>k__BackingField = dataReader.GetString(3);
                                        instance.<Name>k__BackingField = dataReader.GetString(4);
                                        instance.<Provider>k__BackingField = Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                        instance.<SecretRef>k__BackingField = dataReader.GetString(6);
                                        instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid?) : (Guid?)dataReader.GetGuid(7);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Profile)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Profile, Profile>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Profile)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: Profile.Queries (List<Query>) Collection ToDependent Query Inverse: Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Profile, Query>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(9) ? default(Guid?) : (Guid?)dataReader.GetGuid(9) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Query entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Query instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Query);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Query.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetGuid(9) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Query)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]: 
                                    {
                                        return 
                                        {
                                            Query instance;
                                            instance = new Query();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                            instance.<ProfileId>k__BackingField = dataReader.IsDBNull(10) ? default(Guid) : dataReader.GetGuid(10);
                                            instance.<ResultJson>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                            instance.<SqlQuery>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                            instance.<TimestampUtc>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime) : dataReader.GetDateTime(13);
                                            instance.<UserQuery>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Query)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Query.Profile (Profile) ToPrincipal Profile Inverse: Queries | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindNavigation("Profile")], 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                    return namelessParameter{11}.<Profile>k__BackingField = namelessParameter{10};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Profile)(resultContext.Values[0]) : default(Profile);
        }, 
        contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-05 01:42:31.236 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:42:31.237 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:42:31.238 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:42:31.239 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:42:31.240 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:42:31.241 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:42:31.242 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:42:31.245 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:42:31.246 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 2ms reading results.
2025-09-05 01:42:31.247 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:42:31.248 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:42:31.256 +03:00 [INF] Fetching connection string for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:42:31.258 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:42:31.259 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:42:31.260 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:42:31.261 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:42:31.262 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:42:31.263 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:42:31.264 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:42:31.265 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:42:31.266 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 0ms reading results.
2025-09-05 01:42:31.267 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:42:31.268 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:42:31.276 +03:00 [DBG] Fetched secret for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:42:31.287 +03:00 [DBG] Fetching schema for Profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08", ForceRefresh=false
2025-09-05 01:42:31.290 +03:00 [INF] Fetching schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory (ForceRefresh=false)
2025-09-05 01:42:31.370 +03:00 [INF] Loaded schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory from cache file
2025-09-05 01:42:31.393 +03:00 [INF] Groq API key configured for HttpClient
2025-09-05 01:42:31.395 +03:00 [INF] Converting natural language to SQL. User query: show all categories
2025-09-05 01:42:31.397 +03:00 [DBG] Generated prompt with system message, 2 examples, and user query
2025-09-05 01:42:31.398 +03:00 [DBG] Generated prompt with 6 messages
2025-09-05 01:42:31.404 +03:00 [DBG] Request payload prepared for LLM API
2025-09-05 01:42:32.280 +03:00 [INF] LLM API responded with status: "NotFound"
2025-09-05 01:42:32.283 +03:00 [ERR] LLM API error: "NotFound" - {"error":{"message":"Unknown request URL: POST /chat. Please check the URL for typos, or see the docs at https://console.groq.com/docs/","type":"invalid_request_error","code":"unknown_url"}}

2025-09-05 01:42:32.522 +03:00 [INF] Executed endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:42:32.642 +03:00 [ERR] An unhandled exception has occurred while executing the request.
NaturalToQuery.Core.Exceptions.LLMServiceException: LLM API request failed with status NotFound
   at NaturalToQuery.Infrastructure.LLM.LLMService.CallLlmApiAsync(PromptMessage[] messages, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 143
   at NaturalToQuery.Infrastructure.LLM.LLMService.ConvertToSqlAsync(String schema, String userQuery, ExecutionMode mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 71
   at NaturalToQuery.Application.Services.QueryOrchestrationService.ConvertNaturalLanguageAsync(Guid UserId, Guid profileId, String naturalLanguage, ExecutionMode Mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Application\Services\QueryOrchestrationService.cs:line 60
   at NaturalToQuery.Api.Controllers.Query.ConvertNaturalLanguage.HandleAsync(ConvertNaturalLanguageRequest req, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\Controllers\Query\ConvertNaturalLanguage.cs:line 45
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-09-05 01:42:32.651 +03:00 [ERR] Error occurred.
2025-09-05 01:42:32.663 +03:00 [DBG] Connection id "0HNFC0H9FFF79" completed keep alive response.
2025-09-05 01:42:32.664 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:42:32.667 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:42:32.669 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:42:32.671 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 404 null application/json; charset=utf-8 5284.5988ms
2025-09-05 01:45:37.338 +03:00 [INF] This is a test log to file!
2025-09-05 01:45:37.592 +03:00 [INF] Shared Kernal configured successfully.
2025-09-05 01:45:37.600 +03:00 [INF] API configured successfully.
2025-09-05 01:45:37.664 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-05 01:45:37.708 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-05 01:45:38.208 +03:00 [WRN] The foreign key property 'Profile.UserInfoId1' was created in shadow state because a conflicting property with the simple name 'UserInfoId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-09-05 01:45:38.278 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:45:38.304 +03:00 [INF] Registered 20 endpoints in 862 milliseconds.
2025-09-05 01:45:38.311 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:45:38.343 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:45:38.417 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:45:38.432 +03:00 [DBG] Created DbConnection. (12ms).
2025-09-05 01:45:38.437 +03:00 [DBG] Migrating using database 'main' on server 'schema_cache.db'.
2025-09-05 01:45:38.442 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:45:38.453 +03:00 [DBG] Created DbConnection. (11ms).
2025-09-05 01:45:38.455 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:45:38.472 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:45:38.476 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:45:38.479 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:45:38.480 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:45:38.483 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:45:38.485 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-05 01:45:38.490 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:45:38.495 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (4ms).
2025-09-05 01:45:38.497 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (8ms).
2025-09-05 01:45:38.503 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 01:45:38.521 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 01:45:38.524 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:45:38.525 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 01:45:38.526 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:45:38.526 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-04 22:45:38.524087+00:00');
SELECT changes();
2025-09-05 01:45:38.531 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-04 22:45:38.524087+00:00');
SELECT changes();
2025-09-05 01:45:38.583 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 01:45:38.586 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 01:45:38.587 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-05 01:45:38.588 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-05 01:45:38.589 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-09-05 01:45:38.591 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 01:45:38.593 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 01:45:38.596 +03:00 [DBG] Committing transaction.
2025-09-05 01:45:38.597 +03:00 [DBG] Committed transaction.
2025-09-05 01:45:38.601 +03:00 [DBG] Disposing transaction.
2025-09-05 01:45:38.611 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 01:45:38.612 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 01:45:38.615 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:45:38.616 +03:00 [DBG] Created DbConnection. (1ms).
2025-09-05 01:45:38.617 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:45:38.619 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:45:38.632 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:45:38.633 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:45:38.635 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:45:38.636 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 01:45:38.637 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:45:38.638 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 01:45:38.639 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 01:45:38.642 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:45:38.655 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (13ms).
2025-09-05 01:45:38.656 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (14ms).
2025-09-05 01:45:38.658 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 01:45:38.659 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 01:45:38.663 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:45:38.676 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 13ms reading results.
2025-09-05 01:45:38.679 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-05 01:45:38.680 +03:00 [DBG] Committing transaction.
2025-09-05 01:45:38.681 +03:00 [DBG] Committed transaction.
2025-09-05 01:45:38.681 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:45:38.682 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 01:45:38.683 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:45:38.684 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 01:45:38.688 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 01:45:38.689 +03:00 [DBG] Disposing transaction.
2025-09-05 01:45:38.690 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:45:38.694 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (3ms).
2025-09-05 01:45:38.695 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:45:38.696 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:45:38.697 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:45:38.698 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 01:45:38.699 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 01:45:38.725 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-05 01:45:38.752 +03:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-09-05 01:45:38.753 +03:00 [DBG] Hosting starting
2025-09-05 01:45:38.764 +03:00 [DBG] Middleware loaded
2025-09-05 01:45:38.766 +03:00 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16521 B).
2025-09-05 01:45:38.768 +03:00 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-09-05 01:45:38.836 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-05 01:45:38.839 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-05 01:45:38.843 +03:00 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-09-05 01:45:38.884 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert
2025-09-05 01:45:38.936 +03:00 [INF] Now listening on: https://localhost:7202
2025-09-05 01:45:38.942 +03:00 [INF] Now listening on: http://localhost:5000
2025-09-05 01:45:38.943 +03:00 [DBG] Loaded hosting startup assembly NaturalToQuery.Api
2025-09-05 01:45:38.943 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-05 01:45:38.944 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-05 01:45:38.944 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-05 01:45:38.948 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 01:45:38.968 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 01:45:38.997 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-05 01:45:38.998 +03:00 [INF] Hosting environment: Development
2025-09-05 01:45:38.999 +03:00 [INF] Content root path: C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql
2025-09-05 01:45:39.000 +03:00 [DBG] Hosting started
2025-09-05 01:45:44.848 +03:00 [DBG] Connection id "0HNFC0J4BUGAD" received FIN.
2025-09-05 01:45:44.854 +03:00 [DBG] Connection id "0HNFC0J4BUGAD" accepted.
2025-09-05 01:45:44.858 +03:00 [DBG] Connection id "0HNFC0J4BUGAE" accepted.
2025-09-05 01:45:44.860 +03:00 [DBG] Connection id "0HNFC0J4BUGAD" started.
2025-09-05 01:45:44.860 +03:00 [DBG] Connection id "0HNFC0J4BUGAE" started.
2025-09-05 01:45:44.867 +03:00 [DBG] Connection id "0HNFC0J4BUGAD" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 01:45:44.870 +03:00 [DBG] Connection id "0HNFC0J4BUGAD" disconnecting.
2025-09-05 01:45:44.875 +03:00 [DBG] Connection id "0HNFC0J4BUGAD" stopped.
2025-09-05 01:45:44.898 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:45:44.935 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:45:44.937 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:45:44.940 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:45:44.960 +03:00 [DBG] Https port '7202' loaded from configuration.
2025-09-05 01:45:44.962 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'.
2025-09-05 01:45:44.964 +03:00 [DBG] Connection id "0HNFC0J4BUGAE" completed keep alive response.
2025-09-05 01:45:44.966 +03:00 [DBG] Connection id "0HNFC0J4BUGAF" accepted.
2025-09-05 01:45:44.966 +03:00 [DBG] Connection id "0HNFC0J4BUGAG" accepted.
2025-09-05 01:45:44.966 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 307 0 null 74.2265ms
2025-09-05 01:45:44.966 +03:00 [DBG] Connection id "0HNFC0J4BUGAF" received FIN.
2025-09-05 01:45:44.971 +03:00 [DBG] Connection id "0HNFC0J4BUGAF" started.
2025-09-05 01:45:44.995 +03:00 [DBG] Connection id "0HNFC0J4BUGAG" started.
2025-09-05 01:45:45.000 +03:00 [DBG] Connection id "0HNFC0J4BUGAE", Request id "0HNFC0J4BUGAE:00000001": started reading request body.
2025-09-05 01:45:45.001 +03:00 [DBG] Connection id "0HNFC0J4BUGAF" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 01:45:45.003 +03:00 [DBG] Connection id "0HNFC0J4BUGAE", Request id "0HNFC0J4BUGAE:00000001": done reading request body.
2025-09-05 01:45:45.004 +03:00 [DBG] Connection id "0HNFC0J4BUGAF" disconnecting.
2025-09-05 01:45:45.006 +03:00 [DBG] Connection id "0HNFC0J4BUGAF" stopped.
2025-09-05 01:45:45.037 +03:00 [DBG] Connection 0HNFC0J4BUGAG established using the following protocol: "Tls13"
2025-09-05 01:45:45.040 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:45:45.047 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:45:45.048 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:45:45.050 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:45:45.055 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:45:45.073 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:45:45.114 +03:00 [DBG] Connection id "0HNFC0J4BUGAG", Request id "0HNFC0J4BUGAG:00000001": started reading request body.
2025-09-05 01:45:45.115 +03:00 [DBG] Connection id "0HNFC0J4BUGAG", Request id "0HNFC0J4BUGAG:00000001": done reading request body.
2025-09-05 01:45:45.140 +03:00 [INF] Converting NL to SQL for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:45:45.189 +03:00 [DBG] Compiling query expression: 
'DbSet<UserInfo>()
    .Include(p => p.Profiles)
    .FirstOrDefault(e => e.Id.Equals(__id_0))'
2025-09-05 01:45:45.223 +03:00 [DBG] Including navigation: 'UserInfo.Profiles'.
2025-09-05 01:45:45.399 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<UserInfo>(
    asyncEnumerable: SingleQueryingEnumerable.Create<UserInfo>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: UserInfo.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserInfo.ApiKey (string) Required MaxLength(200), 1], [Property: UserInfo.CreatedUtc (DateTime) Required, 2], [Property: UserInfo.LastUpdatedUtc (DateTime) Required, 3], [Property: UserInfo.Mode (AIMode) Required, 4] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 5], [Property: Profile.CacheFile (string) MaxLength(500), 6], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 7], [Property: Profile.DatabaseName (string) Required, 8], [Property: Profile.Name (string) Required MaxLength(200), 9], [Property: Profile.Provider (ProviderType) Required, 10], [Property: Profile.SecretRef (string) Required, 11], [Property: Profile.UserInfoId (Guid?) FK Index, 12], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 13] }
                3 -> 5
            SELECT u0.Id, u0.ApiKey, u0.CreatedUtc, u0.LastUpdatedUtc, u0.Mode, p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
            FROM 
            (
                SELECT TOP(1) u.Id, u.ApiKey, u.CreatedUtc, u.LastUpdatedUtc, u.Mode
                FROM UserInfos AS u
                WHERE u.Id == @__id_0
            ) AS u0
            LEFT JOIN Profiles AS p ON u0.Id == p.UserInfoId
            ORDER BY u0.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: UserInfo.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserInfo.ApiKey (string) Required MaxLength(200), 1], [Property: UserInfo.CreatedUtc (DateTime) Required, 2], [Property: UserInfo.LastUpdatedUtc (DateTime) Required, 3], [Property: UserInfo.Mode (AIMode) Required, 4] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 5], [Property: Profile.CacheFile (string) MaxLength(500), 6], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 7], [Property: Profile.DatabaseName (string) Required, 8], [Property: Profile.Name (string) Required MaxLength(200), 9], [Property: Profile.Provider (ProviderType) Required, 10], [Property: Profile.SecretRef (string) Required, 11], [Property: Profile.UserInfoId (Guid?) FK Index, 12], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 13] }
                3 -> 5
            SELECT u0.Id, u0.ApiKey, u0.CreatedUtc, u0.LastUpdatedUtc, u0.Mode, p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
            FROM 
            (
                SELECT TOP(1) u.Id, u.ApiKey, u.CreatedUtc, u.LastUpdatedUtc, u.Mode
                FROM UserInfos AS u
                WHERE u.Id == @__id_0
            ) AS u0
            LEFT JOIN Profiles AS p ON u0.Id == p.UserInfoId
            ORDER BY u0.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                UserInfo entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    UserInfo instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(UserInfo);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: UserInfo.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (UserInfo)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")]: 
                                {
                                    return 
                                    {
                                        UserInfo instance;
                                        instance = new UserInfo();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<ApiKey>k__BackingField = dataReader.GetString(1);
                                        instance.<CreatedUtc>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<LastUpdatedUtc>k__BackingField = dataReader.GetDateTime(3);
                                        instance.<Mode>k__BackingField = Invoke(((EnumToNumberConverter<AIMode, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: UserInfo.Mode (AIMode) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindProperty("Mode")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(4));
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(UserInfo)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<UserInfo, UserInfo>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (UserInfo)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: UserInfo.Profiles (List<Profile>) Collection ToDependent Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<UserInfo, List<Profile>, Profile> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<UserInfo, Profile>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(5) ? default(Guid?) : (Guid?)dataReader.GetGuid(5) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Profile entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Profile instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Profile);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Profile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetGuid(5) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Profile)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<Guid?>(dataReader.IsDBNull(13) ? default(Guid?) : (Guid?)dataReader.GetGuid(13));
                                        return 
                                        {
                                            Profile instance;
                                            instance = new Profile();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(5) ? default(Guid) : dataReader.GetGuid(5);
                                            instance.<CacheFile>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                            instance.<CreatedUtc>k__BackingField = dataReader.IsDBNull(7) ? default(DateTimeOffset) : dataReader.GetFieldValue<DateTimeOffset>(7);
                                            instance.<DatabaseName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                            instance.<Name>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                            instance.<Provider>k__BackingField = dataReader.IsDBNull(10) ? default(ProviderType) : Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(10));
                                            instance.<SecretRef>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                            instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(12) ? default(Guid?) : (Guid?)dataReader.GetGuid(12);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Profile)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<UserInfo, List<Profile>, Profile> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (UserInfo)(resultContext.Values[0]) : default(UserInfo);
        }, 
        contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-05 01:45:45.425 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:45:45.426 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:45:45.429 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:45:45.431 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:45:45.432 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:45:45.433 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:45:45.436 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-09-05 01:45:45.439 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:45:45.444 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:45:45.476 +03:00 [DBG] Context 'ContextDB' started tracking 'UserInfo' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:45:45.500 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:45:45.516 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:45:45.519 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 73ms reading results.
2025-09-05 01:45:45.522 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:45:45.524 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:45:45.528 +03:00 [DBG] Compiling query expression: 
'DbSet<Profile>()
    .Include(e => e.Queries)
    .FirstOrDefault(e => e.Id.Equals(__id_0))'
2025-09-05 01:45:45.530 +03:00 [DBG] Including navigation: 'Profile.Queries'.
2025-09-05 01:45:45.544 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Profile>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Profile>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Profile entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Profile instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Profile);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Profile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Profile)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                {
                                    shadowSnapshot1 = (ISnapshot)new Snapshot<Guid?>(dataReader.IsDBNull(8) ? default(Guid?) : (Guid?)dataReader.GetGuid(8));
                                    return 
                                    {
                                        Profile instance;
                                        instance = new Profile();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<CacheFile>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                        instance.<CreatedUtc>k__BackingField = dataReader.GetFieldValue<DateTimeOffset>(2);
                                        instance.<DatabaseName>k__BackingField = dataReader.GetString(3);
                                        instance.<Name>k__BackingField = dataReader.GetString(4);
                                        instance.<Provider>k__BackingField = Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                        instance.<SecretRef>k__BackingField = dataReader.GetString(6);
                                        instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid?) : (Guid?)dataReader.GetGuid(7);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Profile)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Profile, Profile>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Profile)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: Profile.Queries (List<Query>) Collection ToDependent Query Inverse: Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Profile, Query>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(9) ? default(Guid?) : (Guid?)dataReader.GetGuid(9) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Query entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Query instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Query);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Query.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetGuid(9) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Query)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]: 
                                    {
                                        return 
                                        {
                                            Query instance;
                                            instance = new Query();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                            instance.<ProfileId>k__BackingField = dataReader.IsDBNull(10) ? default(Guid) : dataReader.GetGuid(10);
                                            instance.<ResultJson>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                            instance.<SqlQuery>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                            instance.<TimestampUtc>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime) : dataReader.GetDateTime(13);
                                            instance.<UserQuery>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Query)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Query.Profile (Profile) ToPrincipal Profile Inverse: Queries | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindNavigation("Profile")], 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                    return namelessParameter{11}.<Profile>k__BackingField = namelessParameter{10};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Profile)(resultContext.Values[0]) : default(Profile);
        }, 
        contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-05 01:45:45.553 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:45:45.554 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:45:45.555 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:45:45.556 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:45:45.557 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:45:45.558 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:45:45.560 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:45:45.563 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:45:45.564 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 2ms reading results.
2025-09-05 01:45:45.565 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:45:45.567 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:45:45.575 +03:00 [INF] Fetching connection string for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:45:45.578 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:45:45.579 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:45:45.580 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:45:45.581 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:45:45.582 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 01:45:45.583 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:45:45.585 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:45:45.587 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:45:45.588 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 1ms reading results.
2025-09-05 01:45:45.589 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:45:45.590 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:45:45.598 +03:00 [DBG] Fetched secret for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:45:45.609 +03:00 [DBG] Fetching schema for Profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08", ForceRefresh=false
2025-09-05 01:45:45.611 +03:00 [INF] Fetching schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory (ForceRefresh=false)
2025-09-05 01:45:45.692 +03:00 [INF] Loaded schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory from cache file
2025-09-05 01:45:45.716 +03:00 [INF] Groq API key configured for HttpClient
2025-09-05 01:45:45.718 +03:00 [INF] Converting natural language to SQL. User query: show all categories
2025-09-05 01:45:45.719 +03:00 [DBG] Generated prompt with system message, 2 examples, and user query
2025-09-05 01:45:45.721 +03:00 [DBG] Generated prompt with 6 messages
2025-09-05 01:45:45.727 +03:00 [DBG] Request payload prepared for LLM API
2025-09-05 01:45:46.088 +03:00 [INF] LLM API responded with status: "NotFound"
2025-09-05 01:45:46.092 +03:00 [ERR] LLM API error: "NotFound" - {"error":{"message":"The model `qwen3:8b` does not exist or you do not have access to it.","type":"invalid_request_error","code":"model_not_found"}}

2025-09-05 01:45:46.320 +03:00 [INF] Executed endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:45:46.442 +03:00 [ERR] An unhandled exception has occurred while executing the request.
NaturalToQuery.Core.Exceptions.LLMServiceException: LLM API request failed with status NotFound
   at NaturalToQuery.Infrastructure.LLM.LLMService.CallLlmApiAsync(PromptMessage[] messages, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 143
   at NaturalToQuery.Infrastructure.LLM.LLMService.ConvertToSqlAsync(String schema, String userQuery, ExecutionMode mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 71
   at NaturalToQuery.Application.Services.QueryOrchestrationService.ConvertNaturalLanguageAsync(Guid UserId, Guid profileId, String naturalLanguage, ExecutionMode Mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Application\Services\QueryOrchestrationService.cs:line 60
   at NaturalToQuery.Api.Controllers.Query.ConvertNaturalLanguage.HandleAsync(ConvertNaturalLanguageRequest req, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\Controllers\Query\ConvertNaturalLanguage.cs:line 45
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-09-05 01:45:46.452 +03:00 [ERR] Error occurred.
2025-09-05 01:45:46.463 +03:00 [DBG] Connection id "0HNFC0J4BUGAG" completed keep alive response.
2025-09-05 01:45:46.465 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:45:46.468 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:45:46.470 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:45:46.472 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 404 null application/json; charset=utf-8 1431.4375ms
2025-09-05 01:46:29.730 +03:00 [DBG] Config reload token fired. Checking for changes...
2025-09-05 01:46:29.732 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-05 01:46:29.733 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-05 01:46:29.985 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-05 01:46:29.987 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-05 01:46:29.988 +03:00 [DBG] Config reload token fired. Checking for changes...
2025-09-05 01:47:58.165 +03:00 [INF] This is a test log to file!
2025-09-05 01:47:58.478 +03:00 [INF] Shared Kernal configured successfully.
2025-09-05 01:47:58.487 +03:00 [INF] API configured successfully.
2025-09-05 01:47:58.561 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-05 01:47:58.622 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-05 01:47:59.058 +03:00 [WRN] The foreign key property 'Profile.UserInfoId1' was created in shadow state because a conflicting property with the simple name 'UserInfoId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-09-05 01:47:59.131 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:47:59.158 +03:00 [INF] Registered 20 endpoints in 886 milliseconds.
2025-09-05 01:47:59.164 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:47:59.201 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:47:59.284 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:47:59.296 +03:00 [DBG] Created DbConnection. (10ms).
2025-09-05 01:47:59.299 +03:00 [DBG] Migrating using database 'main' on server 'schema_cache.db'.
2025-09-05 01:47:59.310 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:47:59.312 +03:00 [DBG] Created DbConnection. (2ms).
2025-09-05 01:47:59.314 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:47:59.324 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:47:59.327 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:47:59.331 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:47:59.341 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:47:59.343 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:47:59.345 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-05 01:47:59.350 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:47:59.355 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 01:47:59.357 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (7ms).
2025-09-05 01:47:59.363 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 01:47:59.383 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 01:47:59.386 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:47:59.387 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:47:59.388 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 01:47:59.390 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-04 22:47:59.3863917+00:00');
SELECT changes();
2025-09-05 01:47:59.395 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-04 22:47:59.3863917+00:00');
SELECT changes();
2025-09-05 01:47:59.439 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 01:47:59.446 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 01:47:59.448 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-05 01:47:59.449 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-09-05 01:47:59.451 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-09-05 01:47:59.452 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 01:47:59.458 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 01:47:59.464 +03:00 [DBG] Committing transaction.
2025-09-05 01:47:59.467 +03:00 [DBG] Committed transaction.
2025-09-05 01:47:59.469 +03:00 [DBG] Disposing transaction.
2025-09-05 01:47:59.471 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 01:47:59.473 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 01:47:59.475 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:47:59.476 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:47:59.477 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:47:59.479 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:47:59.480 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:47:59.481 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:47:59.483 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:47:59.485 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:47:59.486 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 01:47:59.488 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 01:47:59.489 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 01:47:59.494 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:47:59.502 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (7ms).
2025-09-05 01:47:59.503 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-09-05 01:47:59.504 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 01:47:59.506 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 01:47:59.513 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:47:59.524 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 15ms reading results.
2025-09-05 01:47:59.528 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-05 01:47:59.530 +03:00 [DBG] Committing transaction.
2025-09-05 01:47:59.530 +03:00 [DBG] Committed transaction.
2025-09-05 01:47:59.531 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:47:59.534 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 01:47:59.536 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (5ms).
2025-09-05 01:47:59.537 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 01:47:59.546 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 01:47:59.548 +03:00 [DBG] Disposing transaction.
2025-09-05 01:47:59.549 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:47:59.551 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (2ms).
2025-09-05 01:47:59.552 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:47:59.553 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:47:59.554 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:47:59.555 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 01:47:59.556 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 01:47:59.591 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-05 01:47:59.626 +03:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-09-05 01:47:59.628 +03:00 [DBG] Hosting starting
2025-09-05 01:47:59.643 +03:00 [DBG] Middleware loaded
2025-09-05 01:47:59.646 +03:00 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16521 B).
2025-09-05 01:47:59.648 +03:00 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-09-05 01:47:59.739 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-05 01:47:59.741 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-05 01:47:59.744 +03:00 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-09-05 01:47:59.779 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert
2025-09-05 01:47:59.843 +03:00 [INF] Now listening on: https://localhost:7202
2025-09-05 01:47:59.843 +03:00 [INF] Now listening on: http://localhost:5000
2025-09-05 01:47:59.844 +03:00 [DBG] Loaded hosting startup assembly NaturalToQuery.Api
2025-09-05 01:47:59.845 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-05 01:47:59.845 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-05 01:47:59.846 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-05 01:47:59.859 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 01:47:59.881 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 01:47:59.911 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-05 01:47:59.918 +03:00 [INF] Hosting environment: Development
2025-09-05 01:47:59.919 +03:00 [INF] Content root path: C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql
2025-09-05 01:47:59.920 +03:00 [DBG] Hosting started
2025-09-05 01:48:03.880 +03:00 [DBG] Connection id "0HNFC0KDPRNB8" received FIN.
2025-09-05 01:48:03.885 +03:00 [DBG] Connection id "0HNFC0KDPRNB8" accepted.
2025-09-05 01:48:03.887 +03:00 [DBG] Connection id "0HNFC0KDPRNB8" started.
2025-09-05 01:48:03.888 +03:00 [DBG] Connection id "0HNFC0KDPRNB9" accepted.
2025-09-05 01:48:03.889 +03:00 [DBG] Connection id "0HNFC0KDPRNB9" started.
2025-09-05 01:48:03.893 +03:00 [DBG] Connection id "0HNFC0KDPRNB8" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 01:48:03.896 +03:00 [DBG] Connection id "0HNFC0KDPRNB8" disconnecting.
2025-09-05 01:48:03.899 +03:00 [DBG] Connection id "0HNFC0KDPRNB8" stopped.
2025-09-05 01:48:03.913 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:48:03.951 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:48:03.953 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:48:03.955 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:48:03.975 +03:00 [DBG] Https port '7202' loaded from configuration.
2025-09-05 01:48:03.977 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'.
2025-09-05 01:48:03.980 +03:00 [DBG] Connection id "0HNFC0KDPRNB9" completed keep alive response.
2025-09-05 01:48:03.982 +03:00 [DBG] Connection id "0HNFC0KDPRNBA" accepted.
2025-09-05 01:48:03.982 +03:00 [DBG] Connection id "0HNFC0KDPRNBB" accepted.
2025-09-05 01:48:03.982 +03:00 [DBG] Connection id "0HNFC0KDPRNBA" received FIN.
2025-09-05 01:48:04.008 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 307 0 null 74.2343ms
2025-09-05 01:48:04.008 +03:00 [DBG] Connection id "0HNFC0KDPRNBA" started.
2025-09-05 01:48:04.009 +03:00 [DBG] Connection id "0HNFC0KDPRNBB" started.
2025-09-05 01:48:04.014 +03:00 [DBG] Connection id "0HNFC0KDPRNBA" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 01:48:04.015 +03:00 [DBG] Connection id "0HNFC0KDPRNB9", Request id "0HNFC0KDPRNB9:00000001": started reading request body.
2025-09-05 01:48:04.016 +03:00 [DBG] Connection id "0HNFC0KDPRNBA" disconnecting.
2025-09-05 01:48:04.017 +03:00 [DBG] Connection id "0HNFC0KDPRNB9", Request id "0HNFC0KDPRNB9:00000001": done reading request body.
2025-09-05 01:48:04.018 +03:00 [DBG] Connection id "0HNFC0KDPRNBA" stopped.
2025-09-05 01:48:04.044 +03:00 [DBG] Connection 0HNFC0KDPRNBB established using the following protocol: "Tls13"
2025-09-05 01:48:04.047 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:48:04.050 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:48:04.052 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:48:04.053 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:48:04.057 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:48:04.069 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:48:04.102 +03:00 [DBG] Connection id "0HNFC0KDPRNBB", Request id "0HNFC0KDPRNBB:00000001": started reading request body.
2025-09-05 01:48:04.103 +03:00 [DBG] Connection id "0HNFC0KDPRNBB", Request id "0HNFC0KDPRNBB:00000001": done reading request body.
2025-09-05 01:48:04.126 +03:00 [INF] Converting NL to SQL for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:48:04.170 +03:00 [DBG] Compiling query expression: 
'DbSet<UserInfo>()
    .Include(p => p.Profiles)
    .FirstOrDefault(e => e.Id.Equals(__id_0))'
2025-09-05 01:48:04.202 +03:00 [DBG] Including navigation: 'UserInfo.Profiles'.
2025-09-05 01:48:04.376 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<UserInfo>(
    asyncEnumerable: SingleQueryingEnumerable.Create<UserInfo>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: UserInfo.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserInfo.ApiKey (string) Required MaxLength(200), 1], [Property: UserInfo.CreatedUtc (DateTime) Required, 2], [Property: UserInfo.LastUpdatedUtc (DateTime) Required, 3], [Property: UserInfo.Mode (AIMode) Required, 4] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 5], [Property: Profile.CacheFile (string) MaxLength(500), 6], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 7], [Property: Profile.DatabaseName (string) Required, 8], [Property: Profile.Name (string) Required MaxLength(200), 9], [Property: Profile.Provider (ProviderType) Required, 10], [Property: Profile.SecretRef (string) Required, 11], [Property: Profile.UserInfoId (Guid?) FK Index, 12], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 13] }
                3 -> 5
            SELECT u0.Id, u0.ApiKey, u0.CreatedUtc, u0.LastUpdatedUtc, u0.Mode, p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
            FROM 
            (
                SELECT TOP(1) u.Id, u.ApiKey, u.CreatedUtc, u.LastUpdatedUtc, u.Mode
                FROM UserInfos AS u
                WHERE u.Id == @__id_0
            ) AS u0
            LEFT JOIN Profiles AS p ON u0.Id == p.UserInfoId
            ORDER BY u0.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: UserInfo.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserInfo.ApiKey (string) Required MaxLength(200), 1], [Property: UserInfo.CreatedUtc (DateTime) Required, 2], [Property: UserInfo.LastUpdatedUtc (DateTime) Required, 3], [Property: UserInfo.Mode (AIMode) Required, 4] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 5], [Property: Profile.CacheFile (string) MaxLength(500), 6], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 7], [Property: Profile.DatabaseName (string) Required, 8], [Property: Profile.Name (string) Required MaxLength(200), 9], [Property: Profile.Provider (ProviderType) Required, 10], [Property: Profile.SecretRef (string) Required, 11], [Property: Profile.UserInfoId (Guid?) FK Index, 12], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 13] }
                3 -> 5
            SELECT u0.Id, u0.ApiKey, u0.CreatedUtc, u0.LastUpdatedUtc, u0.Mode, p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
            FROM 
            (
                SELECT TOP(1) u.Id, u.ApiKey, u.CreatedUtc, u.LastUpdatedUtc, u.Mode
                FROM UserInfos AS u
                WHERE u.Id == @__id_0
            ) AS u0
            LEFT JOIN Profiles AS p ON u0.Id == p.UserInfoId
            ORDER BY u0.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                UserInfo entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    UserInfo instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(UserInfo);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: UserInfo.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (UserInfo)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")]: 
                                {
                                    return 
                                    {
                                        UserInfo instance;
                                        instance = new UserInfo();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<ApiKey>k__BackingField = dataReader.GetString(1);
                                        instance.<CreatedUtc>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<LastUpdatedUtc>k__BackingField = dataReader.GetDateTime(3);
                                        instance.<Mode>k__BackingField = Invoke(((EnumToNumberConverter<AIMode, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: UserInfo.Mode (AIMode) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindProperty("Mode")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(4));
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(UserInfo)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<UserInfo, UserInfo>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (UserInfo)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: UserInfo.Profiles (List<Profile>) Collection ToDependent Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<UserInfo, List<Profile>, Profile> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<UserInfo, Profile>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(5) ? default(Guid?) : (Guid?)dataReader.GetGuid(5) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Profile entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Profile instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Profile);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Profile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetGuid(5) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Profile)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<Guid?>(dataReader.IsDBNull(13) ? default(Guid?) : (Guid?)dataReader.GetGuid(13));
                                        return 
                                        {
                                            Profile instance;
                                            instance = new Profile();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(5) ? default(Guid) : dataReader.GetGuid(5);
                                            instance.<CacheFile>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                            instance.<CreatedUtc>k__BackingField = dataReader.IsDBNull(7) ? default(DateTimeOffset) : dataReader.GetFieldValue<DateTimeOffset>(7);
                                            instance.<DatabaseName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                            instance.<Name>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                            instance.<Provider>k__BackingField = dataReader.IsDBNull(10) ? default(ProviderType) : Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(10));
                                            instance.<SecretRef>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                            instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(12) ? default(Guid?) : (Guid?)dataReader.GetGuid(12);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Profile)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<UserInfo, List<Profile>, Profile> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (UserInfo)(resultContext.Values[0]) : default(UserInfo);
        }, 
        contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-05 01:48:04.403 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:48:04.405 +03:00 [DBG] Created DbConnection. (1ms).
2025-09-05 01:48:04.408 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:48:04.410 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:48:04.411 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:48:04.412 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:48:04.414 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-09-05 01:48:04.417 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:48:04.423 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:48:04.452 +03:00 [DBG] Context 'ContextDB' started tracking 'UserInfo' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:48:04.480 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:48:04.497 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:48:04.499 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 74ms reading results.
2025-09-05 01:48:04.501 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:48:04.503 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:48:04.507 +03:00 [DBG] Compiling query expression: 
'DbSet<Profile>()
    .Include(e => e.Queries)
    .FirstOrDefault(e => e.Id.Equals(__id_0))'
2025-09-05 01:48:04.510 +03:00 [DBG] Including navigation: 'Profile.Queries'.
2025-09-05 01:48:04.523 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Profile>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Profile>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Profile entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Profile instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Profile);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Profile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Profile)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                {
                                    shadowSnapshot1 = (ISnapshot)new Snapshot<Guid?>(dataReader.IsDBNull(8) ? default(Guid?) : (Guid?)dataReader.GetGuid(8));
                                    return 
                                    {
                                        Profile instance;
                                        instance = new Profile();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<CacheFile>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                        instance.<CreatedUtc>k__BackingField = dataReader.GetFieldValue<DateTimeOffset>(2);
                                        instance.<DatabaseName>k__BackingField = dataReader.GetString(3);
                                        instance.<Name>k__BackingField = dataReader.GetString(4);
                                        instance.<Provider>k__BackingField = Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                        instance.<SecretRef>k__BackingField = dataReader.GetString(6);
                                        instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid?) : (Guid?)dataReader.GetGuid(7);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Profile)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Profile, Profile>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Profile)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: Profile.Queries (List<Query>) Collection ToDependent Query Inverse: Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Profile, Query>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(9) ? default(Guid?) : (Guid?)dataReader.GetGuid(9) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Query entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Query instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Query);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Query.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetGuid(9) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Query)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]: 
                                    {
                                        return 
                                        {
                                            Query instance;
                                            instance = new Query();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                            instance.<ProfileId>k__BackingField = dataReader.IsDBNull(10) ? default(Guid) : dataReader.GetGuid(10);
                                            instance.<ResultJson>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                            instance.<SqlQuery>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                            instance.<TimestampUtc>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime) : dataReader.GetDateTime(13);
                                            instance.<UserQuery>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Query)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Query.Profile (Profile) ToPrincipal Profile Inverse: Queries | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindNavigation("Profile")], 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                    return namelessParameter{11}.<Profile>k__BackingField = namelessParameter{10};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Profile)(resultContext.Values[0]) : default(Profile);
        }, 
        contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-05 01:48:04.529 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:48:04.530 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:48:04.531 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:48:04.532 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:48:04.533 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:48:04.534 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:48:04.536 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:48:04.539 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:48:04.540 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 2ms reading results.
2025-09-05 01:48:04.541 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:48:04.542 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:48:04.550 +03:00 [INF] Fetching connection string for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:48:04.553 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:48:04.554 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:48:04.555 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:48:04.555 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:48:04.556 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:48:04.557 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:48:04.559 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:48:04.561 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:48:04.562 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 1ms reading results.
2025-09-05 01:48:04.564 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:48:04.565 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:48:04.573 +03:00 [DBG] Fetched secret for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:48:04.584 +03:00 [DBG] Fetching schema for Profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08", ForceRefresh=false
2025-09-05 01:48:04.586 +03:00 [INF] Fetching schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory (ForceRefresh=false)
2025-09-05 01:48:04.669 +03:00 [INF] Loaded schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory from cache file
2025-09-05 01:48:04.691 +03:00 [INF] Groq API key configured for HttpClient
2025-09-05 01:48:04.694 +03:00 [INF] Converting natural language to SQL. User query: show all categories
2025-09-05 01:48:04.696 +03:00 [DBG] Generated prompt with system message, 2 examples, and user query
2025-09-05 01:48:04.698 +03:00 [DBG] Generated prompt with 6 messages
2025-09-05 01:48:04.703 +03:00 [DBG] Request payload prepared for LLM API
2025-09-05 01:48:05.119 +03:00 [INF] LLM API responded with status: "NotFound"
2025-09-05 01:48:05.122 +03:00 [ERR] LLM API error: "NotFound" - {"error":{"message":"The model `https://api.groq.com` does not exist or you do not have access to it.","type":"invalid_request_error","code":"model_not_found"}}

2025-09-05 01:48:05.430 +03:00 [INF] Executed endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:48:05.580 +03:00 [ERR] An unhandled exception has occurred while executing the request.
NaturalToQuery.Core.Exceptions.LLMServiceException: LLM API request failed with status NotFound
   at NaturalToQuery.Infrastructure.LLM.LLMService.CallLlmApiAsync(PromptMessage[] messages, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 143
   at NaturalToQuery.Infrastructure.LLM.LLMService.ConvertToSqlAsync(String schema, String userQuery, ExecutionMode mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Infrastructure\LLM\LLMService.cs:line 71
   at NaturalToQuery.Application.Services.QueryOrchestrationService.ConvertNaturalLanguageAsync(Guid UserId, Guid profileId, String naturalLanguage, ExecutionMode Mode, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToQuery.Application\Services\QueryOrchestrationService.cs:line 60
   at NaturalToQuery.Api.Controllers.Query.ConvertNaturalLanguage.HandleAsync(ConvertNaturalLanguageRequest req, CancellationToken ct) in C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\Controllers\Query\ConvertNaturalLanguage.cs:line 45
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-09-05 01:48:05.595 +03:00 [ERR] Error occurred.
2025-09-05 01:48:05.612 +03:00 [DBG] Connection id "0HNFC0KDPRNBB" completed keep alive response.
2025-09-05 01:48:05.614 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:48:05.616 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:48:05.626 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (9ms).
2025-09-05 01:48:05.629 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 404 null application/json; charset=utf-8 1582.5846ms
2025-09-05 01:48:18.865 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:48:18.868 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:48:18.869 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:48:18.870 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:48:18.872 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'.
2025-09-05 01:48:18.873 +03:00 [DBG] Connection id "0HNFC0KDPRNB9" completed keep alive response.
2025-09-05 01:48:18.874 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 307 0 null 9.139ms
2025-09-05 01:48:18.875 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:48:18.876 +03:00 [DBG] Connection id "0HNFC0KDPRNB9", Request id "0HNFC0KDPRNB9:00000002": started reading request body.
2025-09-05 01:48:18.877 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:48:18.878 +03:00 [DBG] Connection id "0HNFC0KDPRNB9", Request id "0HNFC0KDPRNB9:00000002": done reading request body.
2025-09-05 01:48:18.879 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:48:18.881 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:48:18.881 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:48:18.891 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:48:18.892 +03:00 [DBG] Connection id "0HNFC0KDPRNBB", Request id "0HNFC0KDPRNBB:00000002": started reading request body.
2025-09-05 01:48:18.893 +03:00 [DBG] Connection id "0HNFC0KDPRNBB", Request id "0HNFC0KDPRNBB:00000002": done reading request body.
2025-09-05 01:48:18.894 +03:00 [INF] Converting NL to SQL for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:48:18.896 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:48:18.896 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:48:18.897 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:48:18.898 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:48:18.899 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:48:18.899 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:48:18.900 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:48:18.901 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:48:18.902 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:48:18.904 +03:00 [DBG] Context 'ContextDB' started tracking 'UserInfo' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:48:18.905 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:48:18.906 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:48:18.907 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 2ms reading results.
2025-09-05 01:48:18.908 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:48:18.909 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:48:18.910 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:48:18.911 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:48:18.912 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:48:18.912 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:48:18.913 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:48:18.914 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:48:18.915 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:48:18.917 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:48:18.917 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 0ms reading results.
2025-09-05 01:48:18.918 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:48:18.919 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:48:18.920 +03:00 [INF] Fetching connection string for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:48:18.921 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:48:18.922 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:48:18.923 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:48:18.924 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:48:18.924 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:48:18.925 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:48:18.927 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:48:18.928 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:48:18.929 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 0ms reading results.
2025-09-05 01:48:18.930 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:48:18.930 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:48:18.932 +03:00 [DBG] Fetched secret for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:48:18.933 +03:00 [DBG] Fetching schema for Profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08", ForceRefresh=false
2025-09-05 01:48:18.933 +03:00 [INF] Fetching schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory (ForceRefresh=false)
2025-09-05 01:48:18.935 +03:00 [INF] Loaded schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory from cache file
2025-09-05 01:48:18.936 +03:00 [INF] Groq API key configured for HttpClient
2025-09-05 01:48:18.936 +03:00 [INF] Converting natural language to SQL. User query: show all categories
2025-09-05 01:48:18.937 +03:00 [DBG] Generated prompt with system message, 2 examples, and user query
2025-09-05 01:48:18.938 +03:00 [DBG] Generated prompt with 6 messages
2025-09-05 01:49:58.473 +03:00 [INF] This is a test log to file!
2025-09-05 01:49:58.748 +03:00 [INF] Shared Kernal configured successfully.
2025-09-05 01:49:58.754 +03:00 [INF] API configured successfully.
2025-09-05 01:49:58.822 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-05 01:49:58.871 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-05 01:49:59.265 +03:00 [WRN] The foreign key property 'Profile.UserInfoId1' was created in shadow state because a conflicting property with the simple name 'UserInfoId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-09-05 01:49:59.367 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:49:59.407 +03:00 [INF] Registered 20 endpoints in 818 milliseconds.
2025-09-05 01:49:59.419 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:49:59.464 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:49:59.564 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:49:59.576 +03:00 [DBG] Created DbConnection. (9ms).
2025-09-05 01:49:59.579 +03:00 [DBG] Migrating using database 'main' on server 'schema_cache.db'.
2025-09-05 01:49:59.583 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:49:59.585 +03:00 [DBG] Created DbConnection. (2ms).
2025-09-05 01:49:59.597 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:49:59.605 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:49:59.620 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:49:59.624 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:49:59.625 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:49:59.628 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:49:59.643 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-05 01:49:59.647 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:49:59.664 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 01:49:59.666 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (19ms).
2025-09-05 01:49:59.674 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 01:49:59.700 +03:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 01:49:59.703 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:49:59.704 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 01:49:59.705 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:49:59.706 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-04 22:49:59.7035452+00:00');
SELECT changes();
2025-09-05 01:49:59.711 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-04 22:49:59.7035452+00:00');
SELECT changes();
2025-09-05 01:49:59.769 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 01:49:59.772 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 01:49:59.775 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-05 01:49:59.777 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-09-05 01:49:59.778 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-09-05 01:49:59.780 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 01:49:59.784 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 01:49:59.791 +03:00 [DBG] Committing transaction.
2025-09-05 01:49:59.793 +03:00 [DBG] Committed transaction.
2025-09-05 01:49:59.795 +03:00 [DBG] Disposing transaction.
2025-09-05 01:49:59.798 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 01:49:59.799 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 01:49:59.801 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:49:59.802 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:49:59.803 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:49:59.804 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:49:59.806 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:49:59.807 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:49:59.809 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:49:59.810 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:49:59.811 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 01:49:59.812 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 01:49:59.814 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 01:49:59.818 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:49:59.819 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:49:59.820 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 01:49:59.823 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 01:49:59.830 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 01:49:59.835 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:49:59.837 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 3ms reading results.
2025-09-05 01:49:59.841 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-05 01:49:59.842 +03:00 [DBG] Committing transaction.
2025-09-05 01:49:59.843 +03:00 [DBG] Committed transaction.
2025-09-05 01:49:59.844 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:49:59.845 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:49:59.847 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (3ms).
2025-09-05 01:49:59.848 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 01:49:59.853 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 01:49:59.855 +03:00 [DBG] Disposing transaction.
2025-09-05 01:49:59.856 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:49:59.860 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (3ms).
2025-09-05 01:49:59.861 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:49:59.862 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:49:59.863 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:49:59.864 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 01:49:59.865 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 01:49:59.906 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-05 01:49:59.950 +03:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-09-05 01:49:59.952 +03:00 [DBG] Hosting starting
2025-09-05 01:49:59.971 +03:00 [DBG] Middleware loaded
2025-09-05 01:49:59.974 +03:00 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16521 B).
2025-09-05 01:49:59.987 +03:00 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-09-05 01:50:00.080 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-05 01:50:00.082 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-05 01:50:00.085 +03:00 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-09-05 01:50:00.116 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert
2025-09-05 01:50:00.177 +03:00 [INF] Now listening on: https://localhost:7202
2025-09-05 01:50:00.178 +03:00 [INF] Now listening on: http://localhost:5000
2025-09-05 01:50:00.179 +03:00 [DBG] Loaded hosting startup assembly NaturalToQuery.Api
2025-09-05 01:50:00.180 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-05 01:50:00.181 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-05 01:50:00.181 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-05 01:50:00.186 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 01:50:00.199 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 01:50:00.228 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-05 01:50:00.229 +03:00 [INF] Hosting environment: Development
2025-09-05 01:50:00.229 +03:00 [INF] Content root path: C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql
2025-09-05 01:50:00.230 +03:00 [DBG] Hosting started
2025-09-05 01:50:00.699 +03:00 [DBG] Connection id "0HNFC0LGJU1CE" received FIN.
2025-09-05 01:50:00.704 +03:00 [DBG] Connection id "0HNFC0LGJU1CE" accepted.
2025-09-05 01:50:00.705 +03:00 [DBG] Connection id "0HNFC0LGJU1CE" started.
2025-09-05 01:50:00.707 +03:00 [DBG] Connection id "0HNFC0LGJU1CF" accepted.
2025-09-05 01:50:00.708 +03:00 [DBG] Connection id "0HNFC0LGJU1CF" started.
2025-09-05 01:50:00.712 +03:00 [DBG] Connection id "0HNFC0LGJU1CE" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 01:50:00.715 +03:00 [DBG] Connection id "0HNFC0LGJU1CE" disconnecting.
2025-09-05 01:50:00.717 +03:00 [DBG] Connection id "0HNFC0LGJU1CE" stopped.
2025-09-05 01:50:00.731 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:50:00.775 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:50:00.776 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:50:00.778 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:50:00.804 +03:00 [DBG] Https port '7202' loaded from configuration.
2025-09-05 01:50:00.806 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'.
2025-09-05 01:50:00.808 +03:00 [DBG] Connection id "0HNFC0LGJU1CF" completed keep alive response.
2025-09-05 01:50:00.811 +03:00 [DBG] Connection id "0HNFC0LGJU1CG" accepted.
2025-09-05 01:50:00.811 +03:00 [DBG] Connection id "0HNFC0LGJU1CH" accepted.
2025-09-05 01:50:00.811 +03:00 [DBG] Connection id "0HNFC0LGJU1CG" received FIN.
2025-09-05 01:50:00.811 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 307 0 null 82.9466ms
2025-09-05 01:50:00.816 +03:00 [DBG] Connection id "0HNFC0LGJU1CG" started.
2025-09-05 01:50:00.817 +03:00 [DBG] Connection id "0HNFC0LGJU1CH" started.
2025-09-05 01:50:00.823 +03:00 [DBG] Connection id "0HNFC0LGJU1CG" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 01:50:00.824 +03:00 [DBG] Connection id "0HNFC0LGJU1CF", Request id "0HNFC0LGJU1CF:00000001": started reading request body.
2025-09-05 01:50:00.825 +03:00 [DBG] Connection id "0HNFC0LGJU1CG" disconnecting.
2025-09-05 01:50:00.826 +03:00 [DBG] Connection id "0HNFC0LGJU1CF", Request id "0HNFC0LGJU1CF:00000001": done reading request body.
2025-09-05 01:50:00.827 +03:00 [DBG] Connection id "0HNFC0LGJU1CG" stopped.
2025-09-05 01:50:00.861 +03:00 [DBG] Connection 0HNFC0LGJU1CH established using the following protocol: "Tls13"
2025-09-05 01:50:00.867 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:50:00.881 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:50:00.882 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:50:00.884 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:50:00.899 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:50:00.919 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:50:00.954 +03:00 [DBG] Connection id "0HNFC0LGJU1CH", Request id "0HNFC0LGJU1CH:00000001": started reading request body.
2025-09-05 01:50:00.955 +03:00 [DBG] Connection id "0HNFC0LGJU1CH", Request id "0HNFC0LGJU1CH:00000001": done reading request body.
2025-09-05 01:50:00.979 +03:00 [INF] Converting NL to SQL for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:50:01.028 +03:00 [DBG] Compiling query expression: 
'DbSet<UserInfo>()
    .Include(p => p.Profiles)
    .FirstOrDefault(e => e.Id.Equals(__id_0))'
2025-09-05 01:50:01.070 +03:00 [DBG] Including navigation: 'UserInfo.Profiles'.
2025-09-05 01:50:01.317 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<UserInfo>(
    asyncEnumerable: SingleQueryingEnumerable.Create<UserInfo>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: UserInfo.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserInfo.ApiKey (string) Required MaxLength(200), 1], [Property: UserInfo.CreatedUtc (DateTime) Required, 2], [Property: UserInfo.LastUpdatedUtc (DateTime) Required, 3], [Property: UserInfo.Mode (AIMode) Required, 4] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 5], [Property: Profile.CacheFile (string) MaxLength(500), 6], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 7], [Property: Profile.DatabaseName (string) Required, 8], [Property: Profile.Name (string) Required MaxLength(200), 9], [Property: Profile.Provider (ProviderType) Required, 10], [Property: Profile.SecretRef (string) Required, 11], [Property: Profile.UserInfoId (Guid?) FK Index, 12], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 13] }
                3 -> 5
            SELECT u0.Id, u0.ApiKey, u0.CreatedUtc, u0.LastUpdatedUtc, u0.Mode, p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
            FROM 
            (
                SELECT TOP(1) u.Id, u.ApiKey, u.CreatedUtc, u.LastUpdatedUtc, u.Mode
                FROM UserInfos AS u
                WHERE u.Id == @__id_0
            ) AS u0
            LEFT JOIN Profiles AS p ON u0.Id == p.UserInfoId
            ORDER BY u0.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: UserInfo.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserInfo.ApiKey (string) Required MaxLength(200), 1], [Property: UserInfo.CreatedUtc (DateTime) Required, 2], [Property: UserInfo.LastUpdatedUtc (DateTime) Required, 3], [Property: UserInfo.Mode (AIMode) Required, 4] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 5], [Property: Profile.CacheFile (string) MaxLength(500), 6], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 7], [Property: Profile.DatabaseName (string) Required, 8], [Property: Profile.Name (string) Required MaxLength(200), 9], [Property: Profile.Provider (ProviderType) Required, 10], [Property: Profile.SecretRef (string) Required, 11], [Property: Profile.UserInfoId (Guid?) FK Index, 12], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 13] }
                3 -> 5
            SELECT u0.Id, u0.ApiKey, u0.CreatedUtc, u0.LastUpdatedUtc, u0.Mode, p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
            FROM 
            (
                SELECT TOP(1) u.Id, u.ApiKey, u.CreatedUtc, u.LastUpdatedUtc, u.Mode
                FROM UserInfos AS u
                WHERE u.Id == @__id_0
            ) AS u0
            LEFT JOIN Profiles AS p ON u0.Id == p.UserInfoId
            ORDER BY u0.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                UserInfo entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    UserInfo instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(UserInfo);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: UserInfo.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (UserInfo)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")]: 
                                {
                                    return 
                                    {
                                        UserInfo instance;
                                        instance = new UserInfo();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<ApiKey>k__BackingField = dataReader.GetString(1);
                                        instance.<CreatedUtc>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<LastUpdatedUtc>k__BackingField = dataReader.GetDateTime(3);
                                        instance.<Mode>k__BackingField = Invoke(((EnumToNumberConverter<AIMode, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: UserInfo.Mode (AIMode) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindProperty("Mode")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(4));
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(UserInfo)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<UserInfo, UserInfo>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (UserInfo)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: UserInfo.Profiles (List<Profile>) Collection ToDependent Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<UserInfo, List<Profile>, Profile> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<UserInfo, Profile>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(5) ? default(Guid?) : (Guid?)dataReader.GetGuid(5) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Profile entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Profile instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Profile);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Profile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetGuid(5) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Profile)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<Guid?>(dataReader.IsDBNull(13) ? default(Guid?) : (Guid?)dataReader.GetGuid(13));
                                        return 
                                        {
                                            Profile instance;
                                            instance = new Profile();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(5) ? default(Guid) : dataReader.GetGuid(5);
                                            instance.<CacheFile>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                            instance.<CreatedUtc>k__BackingField = dataReader.IsDBNull(7) ? default(DateTimeOffset) : dataReader.GetFieldValue<DateTimeOffset>(7);
                                            instance.<DatabaseName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                            instance.<Name>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                            instance.<Provider>k__BackingField = dataReader.IsDBNull(10) ? default(ProviderType) : Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(10));
                                            instance.<SecretRef>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                            instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(12) ? default(Guid?) : (Guid?)dataReader.GetGuid(12);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Profile)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<UserInfo, List<Profile>, Profile> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (UserInfo)(resultContext.Values[0]) : default(UserInfo);
        }, 
        contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-05 01:50:01.346 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:50:01.346 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:50:01.349 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:50:01.351 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:01.360 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:50:01.361 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:50:01.364 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-09-05 01:50:01.366 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:50:01.373 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:50:01.416 +03:00 [DBG] Context 'ContextDB' started tracking 'UserInfo' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:50:01.442 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:50:01.462 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:01.463 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 85ms reading results.
2025-09-05 01:50:01.466 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:01.474 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (7ms).
2025-09-05 01:50:01.479 +03:00 [DBG] Compiling query expression: 
'DbSet<Profile>()
    .Include(e => e.Queries)
    .FirstOrDefault(e => e.Id.Equals(__id_0))'
2025-09-05 01:50:01.482 +03:00 [DBG] Including navigation: 'Profile.Queries'.
2025-09-05 01:50:01.502 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Profile>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Profile>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Profile entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Profile instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Profile);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Profile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Profile)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                {
                                    shadowSnapshot1 = (ISnapshot)new Snapshot<Guid?>(dataReader.IsDBNull(8) ? default(Guid?) : (Guid?)dataReader.GetGuid(8));
                                    return 
                                    {
                                        Profile instance;
                                        instance = new Profile();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<CacheFile>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                        instance.<CreatedUtc>k__BackingField = dataReader.GetFieldValue<DateTimeOffset>(2);
                                        instance.<DatabaseName>k__BackingField = dataReader.GetString(3);
                                        instance.<Name>k__BackingField = dataReader.GetString(4);
                                        instance.<Provider>k__BackingField = Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                        instance.<SecretRef>k__BackingField = dataReader.GetString(6);
                                        instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid?) : (Guid?)dataReader.GetGuid(7);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Profile)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Profile, Profile>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Profile)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: Profile.Queries (List<Query>) Collection ToDependent Query Inverse: Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Profile, Query>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(9) ? default(Guid?) : (Guid?)dataReader.GetGuid(9) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Query entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Query instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Query);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Query.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetGuid(9) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Query)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]: 
                                    {
                                        return 
                                        {
                                            Query instance;
                                            instance = new Query();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                            instance.<ProfileId>k__BackingField = dataReader.IsDBNull(10) ? default(Guid) : dataReader.GetGuid(10);
                                            instance.<ResultJson>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                            instance.<SqlQuery>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                            instance.<TimestampUtc>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime) : dataReader.GetDateTime(13);
                                            instance.<UserQuery>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Query)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Query.Profile (Profile) ToPrincipal Profile Inverse: Queries | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindNavigation("Profile")], 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                    return namelessParameter{11}.<Profile>k__BackingField = namelessParameter{10};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Profile)(resultContext.Values[0]) : default(Profile);
        }, 
        contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-05 01:50:01.519 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:50:01.521 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:01.522 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:50:01.523 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:50:01.524 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 01:50:01.525 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:50:01.528 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:50:01.532 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:01.533 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 3ms reading results.
2025-09-05 01:50:01.534 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:01.535 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:50:01.545 +03:00 [INF] Fetching connection string for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:50:01.548 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:50:01.549 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:01.550 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:50:01.551 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:50:01.552 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 01:50:01.553 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:50:01.556 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:50:01.558 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:01.559 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 1ms reading results.
2025-09-05 01:50:01.565 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:01.566 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:50:01.581 +03:00 [DBG] Fetched secret for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:50:01.594 +03:00 [DBG] Fetching schema for Profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08", ForceRefresh=false
2025-09-05 01:50:01.596 +03:00 [INF] Fetching schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory (ForceRefresh=false)
2025-09-05 01:50:01.720 +03:00 [INF] Loaded schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory from cache file
2025-09-05 01:50:01.750 +03:00 [INF] Groq API key configured for HttpClient
2025-09-05 01:50:01.751 +03:00 [INF] Converting natural language to SQL. User query: show all categories
2025-09-05 01:50:01.753 +03:00 [DBG] Generated prompt with system message, 2 examples, and user query
2025-09-05 01:50:01.754 +03:00 [DBG] Generated prompt with 6 messages
2025-09-05 01:50:01.765 +03:00 [DBG] Request payload prepared for LLM API
2025-09-05 01:50:02.518 +03:00 [INF] LLM API responded with status: "OK"
2025-09-05 01:50:02.528 +03:00 [INF] Successfully converted natural language to SQL query
2025-09-05 01:50:02.537 +03:00 [INF] Executed endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:50:02.540 +03:00 [DBG] Connection id "0HNFC0LGJU1CH" completed keep alive response.
2025-09-05 01:50:02.542 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:50:02.545 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:50:02.547 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:50:02.549 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 200 null application/json; charset=utf-8 1681.6766ms
2025-09-05 01:50:40.024 +03:00 [INF] This is a test log to file!
2025-09-05 01:50:40.378 +03:00 [INF] Shared Kernal configured successfully.
2025-09-05 01:50:40.425 +03:00 [INF] API configured successfully.
2025-09-05 01:50:40.491 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-05 01:50:40.535 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-05 01:50:40.907 +03:00 [WRN] The foreign key property 'Profile.UserInfoId1' was created in shadow state because a conflicting property with the simple name 'UserInfoId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-09-05 01:50:40.964 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:50:40.990 +03:00 [INF] Registered 20 endpoints in 818 milliseconds.
2025-09-05 01:50:40.997 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:50:41.028 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:50:41.098 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:50:41.108 +03:00 [DBG] Created DbConnection. (7ms).
2025-09-05 01:50:41.110 +03:00 [DBG] Migrating using database 'main' on server 'schema_cache.db'.
2025-09-05 01:50:41.115 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:50:41.117 +03:00 [DBG] Created DbConnection. (2ms).
2025-09-05 01:50:41.118 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:50:41.125 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:41.128 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:50:41.132 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:50:41.133 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:50:41.135 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:41.137 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-05 01:50:41.141 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:50:41.145 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 01:50:41.147 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (5ms).
2025-09-05 01:50:41.152 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 01:50:41.170 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 01:50:41.173 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:50:41.174 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 01:50:41.175 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:50:41.176 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-04 22:50:41.1734311+00:00');
SELECT changes();
2025-09-05 01:50:41.181 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-04 22:50:41.1734311+00:00');
SELECT changes();
2025-09-05 01:50:41.224 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 01:50:41.228 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 01:50:41.230 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-05 01:50:41.232 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-09-05 01:50:41.233 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-09-05 01:50:41.235 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 01:50:41.238 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 01:50:41.241 +03:00 [DBG] Committing transaction.
2025-09-05 01:50:41.243 +03:00 [DBG] Committed transaction.
2025-09-05 01:50:41.246 +03:00 [DBG] Disposing transaction.
2025-09-05 01:50:41.248 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 01:50:41.252 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 01:50:41.255 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:50:41.255 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:50:41.256 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:50:41.258 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:41.258 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:50:41.269 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (10ms).
2025-09-05 01:50:41.270 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:50:41.271 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 01:50:41.272 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:50:41.273 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 01:50:41.274 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 01:50:41.288 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:50:41.289 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:50:41.290 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:50:41.291 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 01:50:41.292 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 01:50:41.295 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:41.297 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 2ms reading results.
2025-09-05 01:50:41.309 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-05 01:50:41.310 +03:00 [DBG] Committing transaction.
2025-09-05 01:50:41.310 +03:00 [DBG] Committed transaction.
2025-09-05 01:50:41.311 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:50:41.312 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 01:50:41.313 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:50:41.313 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 01:50:41.317 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 01:50:41.318 +03:00 [DBG] Disposing transaction.
2025-09-05 01:50:41.320 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:41.322 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (2ms).
2025-09-05 01:50:41.323 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:50:41.324 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:50:41.325 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:50:41.327 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 01:50:41.328 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 01:50:41.357 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-05 01:50:41.384 +03:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-09-05 01:50:41.386 +03:00 [DBG] Hosting starting
2025-09-05 01:50:41.400 +03:00 [DBG] Middleware loaded
2025-09-05 01:50:41.403 +03:00 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16521 B).
2025-09-05 01:50:41.404 +03:00 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-09-05 01:50:41.486 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-05 01:50:41.489 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-05 01:50:41.500 +03:00 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-09-05 01:50:41.555 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert
2025-09-05 01:50:41.611 +03:00 [INF] Now listening on: https://localhost:7202
2025-09-05 01:50:41.612 +03:00 [INF] Now listening on: http://localhost:5000
2025-09-05 01:50:41.613 +03:00 [DBG] Loaded hosting startup assembly NaturalToQuery.Api
2025-09-05 01:50:41.614 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-05 01:50:41.615 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-05 01:50:41.615 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-05 01:50:41.620 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 01:50:41.634 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 01:50:41.661 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-05 01:50:41.662 +03:00 [INF] Hosting environment: Development
2025-09-05 01:50:41.663 +03:00 [INF] Content root path: C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql
2025-09-05 01:50:41.664 +03:00 [DBG] Hosting started
2025-09-05 01:50:42.517 +03:00 [DBG] Connection id "0HNFC0LT2NVA9" received FIN.
2025-09-05 01:50:42.523 +03:00 [DBG] Connection id "0HNFC0LT2NVA9" accepted.
2025-09-05 01:50:42.525 +03:00 [DBG] Connection id "0HNFC0LT2NVA9" started.
2025-09-05 01:50:42.527 +03:00 [DBG] Connection id "0HNFC0LT2NVAA" accepted.
2025-09-05 01:50:42.528 +03:00 [DBG] Connection id "0HNFC0LT2NVAA" started.
2025-09-05 01:50:42.532 +03:00 [DBG] Connection id "0HNFC0LT2NVA9" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 01:50:42.535 +03:00 [DBG] Connection id "0HNFC0LT2NVA9" disconnecting.
2025-09-05 01:50:42.538 +03:00 [DBG] Connection id "0HNFC0LT2NVA9" stopped.
2025-09-05 01:50:42.555 +03:00 [INF] Request starting HTTP/1.1 PUT http://localhost:5000/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode - application/json 103
2025-09-05 01:50:42.596 +03:00 [DBG] 1 candidate(s) found for the request path '/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode'
2025-09-05 01:50:42.598 +03:00 [DBG] Endpoint 'HTTP: PUT api/userinfo/{userId}/aimode' with route pattern 'api/userinfo/{userId}/aimode' is valid for the request path '/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode'
2025-09-05 01:50:42.601 +03:00 [DBG] Request matched endpoint 'HTTP: PUT api/userinfo/{userId}/aimode'
2025-09-05 01:50:42.622 +03:00 [DBG] Https port '7202' loaded from configuration.
2025-09-05 01:50:42.624 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode'.
2025-09-05 01:50:42.626 +03:00 [DBG] Connection id "0HNFC0LT2NVAA" completed keep alive response.
2025-09-05 01:50:42.629 +03:00 [INF] Request finished HTTP/1.1 PUT http://localhost:5000/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode - 307 0 null 77.5887ms
2025-09-05 01:50:42.630 +03:00 [DBG] Connection id "0HNFC0LT2NVAB" received FIN.
2025-09-05 01:50:42.630 +03:00 [DBG] Connection id "0HNFC0LT2NVAC" accepted.
2025-09-05 01:50:42.630 +03:00 [DBG] Connection id "0HNFC0LT2NVAB" accepted.
2025-09-05 01:50:42.639 +03:00 [DBG] Connection id "0HNFC0LT2NVAA", Request id "0HNFC0LT2NVAA:00000001": started reading request body.
2025-09-05 01:50:42.640 +03:00 [DBG] Connection id "0HNFC0LT2NVAC" started.
2025-09-05 01:50:42.641 +03:00 [DBG] Connection id "0HNFC0LT2NVAB" started.
2025-09-05 01:50:42.642 +03:00 [DBG] Connection id "0HNFC0LT2NVAA", Request id "0HNFC0LT2NVAA:00000001": done reading request body.
2025-09-05 01:50:42.644 +03:00 [DBG] Connection id "0HNFC0LT2NVAB" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 01:50:42.646 +03:00 [DBG] Connection id "0HNFC0LT2NVAB" disconnecting.
2025-09-05 01:50:42.647 +03:00 [DBG] Connection id "0HNFC0LT2NVAB" stopped.
2025-09-05 01:50:42.672 +03:00 [DBG] Connection 0HNFC0LT2NVAC established using the following protocol: "Tls13"
2025-09-05 01:50:42.676 +03:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7202/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode - application/json 103
2025-09-05 01:50:42.679 +03:00 [DBG] 1 candidate(s) found for the request path '/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode'
2025-09-05 01:50:42.680 +03:00 [DBG] Endpoint 'HTTP: PUT api/userinfo/{userId}/aimode' with route pattern 'api/userinfo/{userId}/aimode' is valid for the request path '/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode'
2025-09-05 01:50:42.681 +03:00 [DBG] Request matched endpoint 'HTTP: PUT api/userinfo/{userId}/aimode'
2025-09-05 01:50:42.685 +03:00 [INF] Executing endpoint 'HTTP: PUT api/userinfo/{userId}/aimode'
2025-09-05 01:50:42.696 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:50:42.731 +03:00 [DBG] Connection id "0HNFC0LT2NVAC", Request id "0HNFC0LT2NVAC:00000001": started reading request body.
2025-09-05 01:50:42.733 +03:00 [DBG] Connection id "0HNFC0LT2NVAC", Request id "0HNFC0LT2NVAC:00000001": done reading request body.
2025-09-05 01:50:42.793 +03:00 [DBG] Compiling query expression: 
'DbSet<UserInfo>()
    .Include(p => p.Profiles)
    .FirstOrDefault(e => e.Id.Equals(__id_0))'
2025-09-05 01:50:42.826 +03:00 [DBG] Including navigation: 'UserInfo.Profiles'.
2025-09-05 01:50:42.997 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<UserInfo>(
    asyncEnumerable: SingleQueryingEnumerable.Create<UserInfo>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: UserInfo.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserInfo.ApiKey (string) Required MaxLength(200), 1], [Property: UserInfo.CreatedUtc (DateTime) Required, 2], [Property: UserInfo.LastUpdatedUtc (DateTime) Required, 3], [Property: UserInfo.Mode (AIMode) Required, 4] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 5], [Property: Profile.CacheFile (string) MaxLength(500), 6], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 7], [Property: Profile.DatabaseName (string) Required, 8], [Property: Profile.Name (string) Required MaxLength(200), 9], [Property: Profile.Provider (ProviderType) Required, 10], [Property: Profile.SecretRef (string) Required, 11], [Property: Profile.UserInfoId (Guid?) FK Index, 12], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 13] }
                3 -> 5
            SELECT u0.Id, u0.ApiKey, u0.CreatedUtc, u0.LastUpdatedUtc, u0.Mode, p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
            FROM 
            (
                SELECT TOP(1) u.Id, u.ApiKey, u.CreatedUtc, u.LastUpdatedUtc, u.Mode
                FROM UserInfos AS u
                WHERE u.Id == @__id_0
            ) AS u0
            LEFT JOIN Profiles AS p ON u0.Id == p.UserInfoId
            ORDER BY u0.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: UserInfo.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserInfo.ApiKey (string) Required MaxLength(200), 1], [Property: UserInfo.CreatedUtc (DateTime) Required, 2], [Property: UserInfo.LastUpdatedUtc (DateTime) Required, 3], [Property: UserInfo.Mode (AIMode) Required, 4] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 5], [Property: Profile.CacheFile (string) MaxLength(500), 6], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 7], [Property: Profile.DatabaseName (string) Required, 8], [Property: Profile.Name (string) Required MaxLength(200), 9], [Property: Profile.Provider (ProviderType) Required, 10], [Property: Profile.SecretRef (string) Required, 11], [Property: Profile.UserInfoId (Guid?) FK Index, 12], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 13] }
                3 -> 5
            SELECT u0.Id, u0.ApiKey, u0.CreatedUtc, u0.LastUpdatedUtc, u0.Mode, p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
            FROM 
            (
                SELECT TOP(1) u.Id, u.ApiKey, u.CreatedUtc, u.LastUpdatedUtc, u.Mode
                FROM UserInfos AS u
                WHERE u.Id == @__id_0
            ) AS u0
            LEFT JOIN Profiles AS p ON u0.Id == p.UserInfoId
            ORDER BY u0.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                UserInfo entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    UserInfo instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(UserInfo);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: UserInfo.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (UserInfo)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")]: 
                                {
                                    return 
                                    {
                                        UserInfo instance;
                                        instance = new UserInfo();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<ApiKey>k__BackingField = dataReader.GetString(1);
                                        instance.<CreatedUtc>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<LastUpdatedUtc>k__BackingField = dataReader.GetDateTime(3);
                                        instance.<Mode>k__BackingField = Invoke(((EnumToNumberConverter<AIMode, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: UserInfo.Mode (AIMode) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindProperty("Mode")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(4));
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(UserInfo)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<UserInfo, UserInfo>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (UserInfo)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: UserInfo.Profiles (List<Profile>) Collection ToDependent Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<UserInfo, List<Profile>, Profile> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<UserInfo, Profile>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(5) ? default(Guid?) : (Guid?)dataReader.GetGuid(5) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Profile entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Profile instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Profile);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Profile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetGuid(5) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Profile)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<Guid?>(dataReader.IsDBNull(13) ? default(Guid?) : (Guid?)dataReader.GetGuid(13));
                                        return 
                                        {
                                            Profile instance;
                                            instance = new Profile();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(5) ? default(Guid) : dataReader.GetGuid(5);
                                            instance.<CacheFile>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                            instance.<CreatedUtc>k__BackingField = dataReader.IsDBNull(7) ? default(DateTimeOffset) : dataReader.GetFieldValue<DateTimeOffset>(7);
                                            instance.<DatabaseName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                            instance.<Name>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                            instance.<Provider>k__BackingField = dataReader.IsDBNull(10) ? default(ProviderType) : Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(10));
                                            instance.<SecretRef>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                            instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(12) ? default(Guid?) : (Guid?)dataReader.GetGuid(12);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Profile)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<UserInfo, List<Profile>, Profile> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (UserInfo)(resultContext.Values[0]) : default(UserInfo);
        }, 
        contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-05 01:50:43.024 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:50:43.026 +03:00 [DBG] Created DbConnection. (1ms).
2025-09-05 01:50:43.028 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:50:43.032 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:43.033 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:50:43.034 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:50:43.037 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-09-05 01:50:43.043 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:50:43.053 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:50:43.093 +03:00 [DBG] Context 'ContextDB' started tracking 'UserInfo' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:50:43.118 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:50:43.136 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:43.138 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 80ms reading results.
2025-09-05 01:50:43.140 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:43.142 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:50:43.149 +03:00 [DBG] An entity of type 'UserInfo' tracked by 'ContextDB' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:50:43.154 +03:00 [DBG] DetectChanges starting for 'ContextDB'.
2025-09-05 01:50:43.176 +03:00 [DBG] DetectChanges completed for 'ContextDB'.
2025-09-05 01:50:43.181 +03:00 [DBG] SaveChanges starting for 'ContextDB'.
2025-09-05 01:50:43.183 +03:00 [DBG] DetectChanges starting for 'ContextDB'.
2025-09-05 01:50:43.184 +03:00 [DBG] DetectChanges completed for 'ContextDB'.
2025-09-05 01:50:43.221 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:50:43.223 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:43.226 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:50:43.227 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:50:43.229 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-09-05 01:50:43.230 +03:00 [DBG] Executing DbCommand [Parameters=[@p4='?' (DbType = Guid), @p0='?' (Size = 56), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "UserInfos" SET "ApiKey" = @p0, "CreatedUtc" = @p1, "LastUpdatedUtc" = @p2, "Mode" = @p3
WHERE "Id" = @p4
RETURNING 1;
2025-09-05 01:50:43.232 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p4='?' (DbType = Guid), @p0='?' (Size = 56), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "UserInfos" SET "ApiKey" = @p0, "CreatedUtc" = @p1, "LastUpdatedUtc" = @p2, "Mode" = @p3
WHERE "Id" = @p4
RETURNING 1;
2025-09-05 01:50:43.243 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:43.244 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 10ms reading results.
2025-09-05 01:50:43.246 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:43.247 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:50:43.249 +03:00 [DBG] An entity of type 'UserInfo' tracked by 'ContextDB' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:50:43.252 +03:00 [DBG] SaveChanges completed for 'ContextDB' with 1 entities written to the database.
2025-09-05 01:50:43.255 +03:00 [INF] AI mode changed to "Local" for user "46d016a8-8e03-4987-91a6-998f321cfacf" at "2025-09-04T22:50:43.1434471Z"
2025-09-05 01:50:43.272 +03:00 [INF] Executed endpoint 'HTTP: PUT api/userinfo/{userId}/aimode'
2025-09-05 01:50:43.274 +03:00 [DBG] Connection id "0HNFC0LT2NVAC" completed keep alive response.
2025-09-05 01:50:43.276 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:50:43.278 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:50:43.280 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:50:43.282 +03:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7202/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode - 200 null application/json; charset=utf-8 606.3673ms
2025-09-05 01:50:51.578 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:50:51.582 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:50:51.583 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:50:51.584 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:50:51.586 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'.
2025-09-05 01:50:51.587 +03:00 [DBG] Connection id "0HNFC0LT2NVAA" completed keep alive response.
2025-09-05 01:50:51.588 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 307 0 null 9.1313ms
2025-09-05 01:50:51.588 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:50:51.590 +03:00 [DBG] Connection id "0HNFC0LT2NVAA", Request id "0HNFC0LT2NVAA:00000002": started reading request body.
2025-09-05 01:50:51.592 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:50:51.592 +03:00 [DBG] Connection id "0HNFC0LT2NVAA", Request id "0HNFC0LT2NVAA:00000002": done reading request body.
2025-09-05 01:50:51.593 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:50:51.595 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:50:51.596 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:50:51.606 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:50:51.617 +03:00 [DBG] Connection id "0HNFC0LT2NVAC", Request id "0HNFC0LT2NVAC:00000002": started reading request body.
2025-09-05 01:50:51.618 +03:00 [DBG] Connection id "0HNFC0LT2NVAC", Request id "0HNFC0LT2NVAC:00000002": done reading request body.
2025-09-05 01:50:51.633 +03:00 [INF] Converting NL to SQL for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:50:51.637 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:50:51.638 +03:00 [DBG] Created DbConnection. (1ms).
2025-09-05 01:50:51.639 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:50:51.640 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:51.641 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:50:51.642 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:50:51.643 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:50:51.644 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:50:51.646 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:50:51.649 +03:00 [DBG] Context 'ContextDB' started tracking 'UserInfo' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:50:51.650 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:50:51.652 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:51.653 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 4ms reading results.
2025-09-05 01:50:51.655 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:51.656 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:50:51.660 +03:00 [DBG] Compiling query expression: 
'DbSet<Profile>()
    .Include(e => e.Queries)
    .FirstOrDefault(e => e.Id.Equals(__id_0))'
2025-09-05 01:50:51.662 +03:00 [DBG] Including navigation: 'Profile.Queries'.
2025-09-05 01:50:51.679 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Profile>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Profile>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Profile entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Profile instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Profile);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Profile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Profile)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                {
                                    shadowSnapshot1 = (ISnapshot)new Snapshot<Guid?>(dataReader.IsDBNull(8) ? default(Guid?) : (Guid?)dataReader.GetGuid(8));
                                    return 
                                    {
                                        Profile instance;
                                        instance = new Profile();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<CacheFile>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                        instance.<CreatedUtc>k__BackingField = dataReader.GetFieldValue<DateTimeOffset>(2);
                                        instance.<DatabaseName>k__BackingField = dataReader.GetString(3);
                                        instance.<Name>k__BackingField = dataReader.GetString(4);
                                        instance.<Provider>k__BackingField = Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                        instance.<SecretRef>k__BackingField = dataReader.GetString(6);
                                        instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid?) : (Guid?)dataReader.GetGuid(7);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Profile)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Profile, Profile>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Profile)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: Profile.Queries (List<Query>) Collection ToDependent Query Inverse: Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Profile, Query>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(9) ? default(Guid?) : (Guid?)dataReader.GetGuid(9) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Query entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Query instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Query);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Query.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetGuid(9) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Query)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]: 
                                    {
                                        return 
                                        {
                                            Query instance;
                                            instance = new Query();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                            instance.<ProfileId>k__BackingField = dataReader.IsDBNull(10) ? default(Guid) : dataReader.GetGuid(10);
                                            instance.<ResultJson>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                            instance.<SqlQuery>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                            instance.<TimestampUtc>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime) : dataReader.GetDateTime(13);
                                            instance.<UserQuery>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Query)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Query.Profile (Profile) ToPrincipal Profile Inverse: Queries | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindNavigation("Profile")], 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                    return namelessParameter{11}.<Profile>k__BackingField = namelessParameter{10};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Profile)(resultContext.Values[0]) : default(Profile);
        }, 
        contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-05 01:50:51.685 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:50:51.686 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:51.687 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:50:51.688 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:50:51.689 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:50:51.690 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:50:51.691 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:50:51.694 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:51.695 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 2ms reading results.
2025-09-05 01:50:51.697 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:51.698 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:50:51.706 +03:00 [INF] Fetching connection string for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:50:51.707 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:50:51.708 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:51.709 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:50:51.710 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:50:51.711 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:50:51.712 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:50:51.713 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:50:51.715 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:51.716 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 1ms reading results.
2025-09-05 01:50:51.718 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:50:51.719 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:50:51.727 +03:00 [DBG] Fetched secret for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:50:51.737 +03:00 [DBG] Fetching schema for Profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08", ForceRefresh=false
2025-09-05 01:50:51.739 +03:00 [INF] Fetching schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory (ForceRefresh=false)
2025-09-05 01:50:51.821 +03:00 [INF] Loaded schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory from cache file
2025-09-05 01:50:51.843 +03:00 [INF] Local LLM is configured
2025-09-05 01:50:51.845 +03:00 [INF] Converting natural language to SQL. User query: show all categories
2025-09-05 01:50:51.847 +03:00 [DBG] Generated prompt with system message, 2 examples, and user query
2025-09-05 01:50:51.848 +03:00 [DBG] Generated prompt with 6 messages
2025-09-05 01:50:51.856 +03:00 [DBG] Request payload prepared for LLM API
2025-09-05 01:51:17.704 +03:00 [INF] LLM API responded with status: "OK"
2025-09-05 01:51:17.787 +03:00 [INF] Successfully converted natural language to SQL query
2025-09-05 01:51:17.798 +03:00 [INF] Executed endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:51:17.800 +03:00 [DBG] Connection id "0HNFC0LT2NVAC" completed keep alive response.
2025-09-05 01:51:17.801 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:51:17.802 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:51:17.803 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:51:17.804 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 200 null application/json; charset=utf-8 26215.8444ms
2025-09-05 01:51:32.160 +03:00 [INF] Request starting HTTP/1.1 PUT http://localhost:5000/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode - application/json 102
2025-09-05 01:51:32.162 +03:00 [DBG] 1 candidate(s) found for the request path '/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode'
2025-09-05 01:51:32.162 +03:00 [DBG] Endpoint 'HTTP: PUT api/userinfo/{userId}/aimode' with route pattern 'api/userinfo/{userId}/aimode' is valid for the request path '/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode'
2025-09-05 01:51:32.163 +03:00 [DBG] Request matched endpoint 'HTTP: PUT api/userinfo/{userId}/aimode'
2025-09-05 01:51:32.164 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode'.
2025-09-05 01:51:32.165 +03:00 [DBG] Connection id "0HNFC0LT2NVAA" completed keep alive response.
2025-09-05 01:51:32.166 +03:00 [INF] Request finished HTTP/1.1 PUT http://localhost:5000/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode - 307 0 null 6.0379ms
2025-09-05 01:51:32.191 +03:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7202/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode - application/json 102
2025-09-05 01:51:32.193 +03:00 [DBG] Connection id "0HNFC0LT2NVAA", Request id "0HNFC0LT2NVAA:00000003": started reading request body.
2025-09-05 01:51:32.195 +03:00 [DBG] 1 candidate(s) found for the request path '/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode'
2025-09-05 01:51:32.196 +03:00 [DBG] Connection id "0HNFC0LT2NVAA", Request id "0HNFC0LT2NVAA:00000003": done reading request body.
2025-09-05 01:51:32.196 +03:00 [DBG] Endpoint 'HTTP: PUT api/userinfo/{userId}/aimode' with route pattern 'api/userinfo/{userId}/aimode' is valid for the request path '/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode'
2025-09-05 01:51:32.198 +03:00 [DBG] Request matched endpoint 'HTTP: PUT api/userinfo/{userId}/aimode'
2025-09-05 01:51:32.199 +03:00 [INF] Executing endpoint 'HTTP: PUT api/userinfo/{userId}/aimode'
2025-09-05 01:51:32.201 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:51:32.202 +03:00 [DBG] Connection id "0HNFC0LT2NVAC", Request id "0HNFC0LT2NVAC:00000003": started reading request body.
2025-09-05 01:51:32.203 +03:00 [DBG] Connection id "0HNFC0LT2NVAC", Request id "0HNFC0LT2NVAC:00000003": done reading request body.
2025-09-05 01:51:32.205 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:51:32.205 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:51:32.206 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:51:32.207 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:51:32.208 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:51:32.209 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:51:32.210 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:51:32.210 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:51:32.212 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:51:32.214 +03:00 [DBG] Context 'ContextDB' started tracking 'UserInfo' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:51:32.215 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:51:32.216 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:51:32.217 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 3ms reading results.
2025-09-05 01:51:32.218 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:51:32.219 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:51:32.220 +03:00 [DBG] An entity of type 'UserInfo' tracked by 'ContextDB' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:51:32.222 +03:00 [DBG] DetectChanges starting for 'ContextDB'.
2025-09-05 01:51:32.223 +03:00 [DBG] DetectChanges completed for 'ContextDB'.
2025-09-05 01:51:32.223 +03:00 [DBG] SaveChanges starting for 'ContextDB'.
2025-09-05 01:51:32.224 +03:00 [DBG] DetectChanges starting for 'ContextDB'.
2025-09-05 01:51:32.225 +03:00 [DBG] DetectChanges completed for 'ContextDB'.
2025-09-05 01:51:32.226 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:51:32.227 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:51:32.228 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:51:32.229 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:51:32.230 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:51:32.231 +03:00 [DBG] Executing DbCommand [Parameters=[@p4='?' (DbType = Guid), @p0='?' (Size = 56), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "UserInfos" SET "ApiKey" = @p0, "CreatedUtc" = @p1, "LastUpdatedUtc" = @p2, "Mode" = @p3
WHERE "Id" = @p4
RETURNING 1;
2025-09-05 01:51:32.233 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p4='?' (DbType = Guid), @p0='?' (Size = 56), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "UserInfos" SET "ApiKey" = @p0, "CreatedUtc" = @p1, "LastUpdatedUtc" = @p2, "Mode" = @p3
WHERE "Id" = @p4
RETURNING 1;
2025-09-05 01:51:32.240 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:51:32.241 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 7ms reading results.
2025-09-05 01:51:32.242 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:51:32.243 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:51:32.244 +03:00 [DBG] An entity of type 'UserInfo' tracked by 'ContextDB' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:51:32.246 +03:00 [DBG] SaveChanges completed for 'ContextDB' with 1 entities written to the database.
2025-09-05 01:51:32.247 +03:00 [INF] AI mode changed to "Groq" for user "46d016a8-8e03-4987-91a6-998f321cfacf" at "2025-09-04T22:51:32.2204905Z"
2025-09-05 01:51:32.249 +03:00 [INF] API key changed for user "46d016a8-8e03-4987-91a6-998f321cfacf" at "2025-09-04T22:51:32.2207766Z"
2025-09-05 01:51:32.251 +03:00 [INF] Executed endpoint 'HTTP: PUT api/userinfo/{userId}/aimode'
2025-09-05 01:51:32.251 +03:00 [DBG] Connection id "0HNFC0LT2NVAC" completed keep alive response.
2025-09-05 01:51:32.252 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:51:32.253 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:51:32.254 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:51:32.256 +03:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7202/api/userinfo/46d016a8-8e03-4987-91a6-998f321cfacf/aimode - 200 null application/json; charset=utf-8 67.4135ms
2025-09-05 01:51:36.941 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:51:36.942 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:51:36.943 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:51:36.944 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:51:36.945 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'.
2025-09-05 01:51:36.946 +03:00 [DBG] Connection id "0HNFC0LT2NVAA" completed keep alive response.
2025-09-05 01:51:36.947 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 307 0 null 6.0549ms
2025-09-05 01:51:36.947 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:51:36.949 +03:00 [DBG] Connection id "0HNFC0LT2NVAA", Request id "0HNFC0LT2NVAA:00000004": started reading request body.
2025-09-05 01:51:36.950 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:51:36.951 +03:00 [DBG] Connection id "0HNFC0LT2NVAA", Request id "0HNFC0LT2NVAA:00000004": done reading request body.
2025-09-05 01:51:36.952 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:51:36.954 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:51:36.955 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:51:36.956 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:51:36.958 +03:00 [DBG] Connection id "0HNFC0LT2NVAC", Request id "0HNFC0LT2NVAC:00000004": started reading request body.
2025-09-05 01:51:36.959 +03:00 [DBG] Connection id "0HNFC0LT2NVAC", Request id "0HNFC0LT2NVAC:00000004": done reading request body.
2025-09-05 01:51:36.961 +03:00 [INF] Executed endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:51:36.961 +03:00 [DBG] Connection id "0HNFC0LT2NVAC" completed keep alive response.
2025-09-05 01:51:36.962 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:51:36.963 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 200 null application/json; charset=utf-8 16.3336ms
2025-09-05 01:51:42.682 +03:00 [INF] This is a test log to file!
2025-09-05 01:51:43.068 +03:00 [INF] Shared Kernal configured successfully.
2025-09-05 01:51:43.077 +03:00 [INF] API configured successfully.
2025-09-05 01:51:43.236 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-05 01:51:43.355 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-05 01:51:43.923 +03:00 [WRN] The foreign key property 'Profile.UserInfoId1' was created in shadow state because a conflicting property with the simple name 'UserInfoId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-09-05 01:51:43.988 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:51:44.017 +03:00 [INF] Registered 20 endpoints in 1,201 milliseconds.
2025-09-05 01:51:44.023 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:51:44.055 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:51:44.126 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:51:44.136 +03:00 [DBG] Created DbConnection. (8ms).
2025-09-05 01:51:44.139 +03:00 [DBG] Migrating using database 'main' on server 'schema_cache.db'.
2025-09-05 01:51:44.143 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:51:44.145 +03:00 [DBG] Created DbConnection. (2ms).
2025-09-05 01:51:44.147 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:51:44.155 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:51:44.158 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:51:44.162 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:51:44.163 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:51:44.166 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:51:44.168 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-05 01:51:44.171 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:51:44.175 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 01:51:44.177 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (6ms).
2025-09-05 01:51:44.183 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 01:51:44.201 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 01:51:44.204 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:51:44.205 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 01:51:44.206 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:51:44.207 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-04 22:51:44.2044617+00:00');
SELECT changes();
2025-09-05 01:51:44.212 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-04 22:51:44.2044617+00:00');
SELECT changes();
2025-09-05 01:51:44.249 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 01:51:44.252 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 01:51:44.254 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-05 01:51:44.255 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-05 01:51:44.256 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-09-05 01:51:44.258 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 01:51:44.259 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 01:51:44.261 +03:00 [DBG] Committing transaction.
2025-09-05 01:51:44.263 +03:00 [DBG] Committed transaction.
2025-09-05 01:51:44.264 +03:00 [DBG] Disposing transaction.
2025-09-05 01:51:44.266 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 01:51:44.267 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 01:51:44.269 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:51:44.269 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:51:44.270 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:51:44.271 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:51:44.272 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:51:44.273 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:51:44.275 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:51:44.276 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 01:51:44.277 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:51:44.278 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 01:51:44.279 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 01:51:44.282 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:51:44.283 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:51:44.284 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 01:51:44.285 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 01:51:44.287 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 01:51:44.290 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:51:44.292 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 3ms reading results.
2025-09-05 01:51:44.296 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-05 01:51:44.297 +03:00 [DBG] Committing transaction.
2025-09-05 01:51:44.297 +03:00 [DBG] Committed transaction.
2025-09-05 01:51:44.298 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 01:51:44.299 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 01:51:44.300 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 01:51:44.301 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 01:51:44.308 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 01:51:44.310 +03:00 [DBG] Disposing transaction.
2025-09-05 01:51:44.311 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:51:44.314 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (3ms).
2025-09-05 01:51:44.316 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:51:44.317 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:51:44.318 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:51:44.319 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 01:51:44.320 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 01:51:44.342 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-05 01:51:44.366 +03:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-09-05 01:51:44.367 +03:00 [DBG] Hosting starting
2025-09-05 01:51:44.378 +03:00 [DBG] Middleware loaded
2025-09-05 01:51:44.380 +03:00 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16521 B).
2025-09-05 01:51:44.382 +03:00 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-09-05 01:51:44.447 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-05 01:51:44.449 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-05 01:51:44.453 +03:00 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-09-05 01:51:44.484 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert
2025-09-05 01:51:44.544 +03:00 [INF] Now listening on: https://localhost:7202
2025-09-05 01:51:44.546 +03:00 [INF] Now listening on: http://localhost:5000
2025-09-05 01:51:44.547 +03:00 [DBG] Loaded hosting startup assembly NaturalToQuery.Api
2025-09-05 01:51:44.548 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-05 01:51:44.548 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-05 01:51:44.549 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-05 01:51:44.553 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 01:51:44.565 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 01:51:44.588 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-05 01:51:44.590 +03:00 [INF] Hosting environment: Development
2025-09-05 01:51:44.591 +03:00 [INF] Content root path: C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql
2025-09-05 01:51:44.593 +03:00 [DBG] Hosting started
2025-09-05 01:51:46.717 +03:00 [DBG] Connection id "0HNFC0MG7078B" received FIN.
2025-09-05 01:51:46.724 +03:00 [DBG] Connection id "0HNFC0MG7078B" accepted.
2025-09-05 01:51:46.726 +03:00 [DBG] Connection id "0HNFC0MG7078B" started.
2025-09-05 01:51:46.727 +03:00 [DBG] Connection id "0HNFC0MG7078C" accepted.
2025-09-05 01:51:46.728 +03:00 [DBG] Connection id "0HNFC0MG7078C" started.
2025-09-05 01:51:46.732 +03:00 [DBG] Connection id "0HNFC0MG7078B" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 01:51:46.735 +03:00 [DBG] Connection id "0HNFC0MG7078B" disconnecting.
2025-09-05 01:51:46.737 +03:00 [DBG] Connection id "0HNFC0MG7078B" stopped.
2025-09-05 01:51:46.761 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:51:46.834 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:51:46.836 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:51:46.839 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:51:46.867 +03:00 [DBG] Https port '7202' loaded from configuration.
2025-09-05 01:51:46.870 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'.
2025-09-05 01:51:46.872 +03:00 [DBG] Connection id "0HNFC0MG7078C" completed keep alive response.
2025-09-05 01:51:46.874 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 307 0 null 120.7705ms
2025-09-05 01:51:46.874 +03:00 [DBG] Connection id "0HNFC0MG7078D" accepted.
2025-09-05 01:51:46.875 +03:00 [DBG] Connection id "0HNFC0MG7078D" received FIN.
2025-09-05 01:51:46.874 +03:00 [DBG] Connection id "0HNFC0MG7078E" accepted.
2025-09-05 01:51:46.883 +03:00 [DBG] Connection id "0HNFC0MG7078D" started.
2025-09-05 01:51:46.883 +03:00 [DBG] Connection id "0HNFC0MG7078C", Request id "0HNFC0MG7078C:00000001": started reading request body.
2025-09-05 01:51:46.884 +03:00 [DBG] Connection id "0HNFC0MG7078E" started.
2025-09-05 01:51:46.885 +03:00 [DBG] Connection id "0HNFC0MG7078D" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 01:51:46.886 +03:00 [DBG] Connection id "0HNFC0MG7078C", Request id "0HNFC0MG7078C:00000001": done reading request body.
2025-09-05 01:51:46.887 +03:00 [DBG] Connection id "0HNFC0MG7078D" disconnecting.
2025-09-05 01:51:46.889 +03:00 [DBG] Connection id "0HNFC0MG7078D" stopped.
2025-09-05 01:51:46.918 +03:00 [DBG] Connection 0HNFC0MG7078E established using the following protocol: "Tls13"
2025-09-05 01:51:46.921 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - application/json 130
2025-09-05 01:51:46.925 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:51:46.926 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/convert' with route pattern 'api/query/{profileId}/convert' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert'
2025-09-05 01:51:46.928 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:51:46.932 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:51:46.952 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 01:51:46.988 +03:00 [DBG] Connection id "0HNFC0MG7078E", Request id "0HNFC0MG7078E:00000001": started reading request body.
2025-09-05 01:51:46.990 +03:00 [DBG] Connection id "0HNFC0MG7078E", Request id "0HNFC0MG7078E:00000001": done reading request body.
2025-09-05 01:51:47.018 +03:00 [INF] Converting NL to SQL for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:51:47.090 +03:00 [DBG] Compiling query expression: 
'DbSet<UserInfo>()
    .Include(p => p.Profiles)
    .FirstOrDefault(e => e.Id.Equals(__id_0))'
2025-09-05 01:51:47.146 +03:00 [DBG] Including navigation: 'UserInfo.Profiles'.
2025-09-05 01:51:47.407 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<UserInfo>(
    asyncEnumerable: SingleQueryingEnumerable.Create<UserInfo>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: UserInfo.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserInfo.ApiKey (string) Required MaxLength(200), 1], [Property: UserInfo.CreatedUtc (DateTime) Required, 2], [Property: UserInfo.LastUpdatedUtc (DateTime) Required, 3], [Property: UserInfo.Mode (AIMode) Required, 4] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 5], [Property: Profile.CacheFile (string) MaxLength(500), 6], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 7], [Property: Profile.DatabaseName (string) Required, 8], [Property: Profile.Name (string) Required MaxLength(200), 9], [Property: Profile.Provider (ProviderType) Required, 10], [Property: Profile.SecretRef (string) Required, 11], [Property: Profile.UserInfoId (Guid?) FK Index, 12], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 13] }
                3 -> 5
            SELECT u0.Id, u0.ApiKey, u0.CreatedUtc, u0.LastUpdatedUtc, u0.Mode, p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
            FROM 
            (
                SELECT TOP(1) u.Id, u.ApiKey, u.CreatedUtc, u.LastUpdatedUtc, u.Mode
                FROM UserInfos AS u
                WHERE u.Id == @__id_0
            ) AS u0
            LEFT JOIN Profiles AS p ON u0.Id == p.UserInfoId
            ORDER BY u0.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: UserInfo.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserInfo.ApiKey (string) Required MaxLength(200), 1], [Property: UserInfo.CreatedUtc (DateTime) Required, 2], [Property: UserInfo.LastUpdatedUtc (DateTime) Required, 3], [Property: UserInfo.Mode (AIMode) Required, 4] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 5], [Property: Profile.CacheFile (string) MaxLength(500), 6], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 7], [Property: Profile.DatabaseName (string) Required, 8], [Property: Profile.Name (string) Required MaxLength(200), 9], [Property: Profile.Provider (ProviderType) Required, 10], [Property: Profile.SecretRef (string) Required, 11], [Property: Profile.UserInfoId (Guid?) FK Index, 12], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 13] }
                3 -> 5
            SELECT u0.Id, u0.ApiKey, u0.CreatedUtc, u0.LastUpdatedUtc, u0.Mode, p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
            FROM 
            (
                SELECT TOP(1) u.Id, u.ApiKey, u.CreatedUtc, u.LastUpdatedUtc, u.Mode
                FROM UserInfos AS u
                WHERE u.Id == @__id_0
            ) AS u0
            LEFT JOIN Profiles AS p ON u0.Id == p.UserInfoId
            ORDER BY u0.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                UserInfo entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    UserInfo instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(UserInfo);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: UserInfo.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (UserInfo)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")]: 
                                {
                                    return 
                                    {
                                        UserInfo instance;
                                        instance = new UserInfo();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<ApiKey>k__BackingField = dataReader.GetString(1);
                                        instance.<CreatedUtc>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<LastUpdatedUtc>k__BackingField = dataReader.GetDateTime(3);
                                        instance.<Mode>k__BackingField = Invoke(((EnumToNumberConverter<AIMode, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: UserInfo.Mode (AIMode) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindProperty("Mode")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(4));
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(UserInfo)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<UserInfo, UserInfo>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (UserInfo)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: UserInfo.Profiles (List<Profile>) Collection ToDependent Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<UserInfo, List<Profile>, Profile> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<UserInfo, Profile>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(5) ? default(Guid?) : (Guid?)dataReader.GetGuid(5) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Profile entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Profile instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Profile);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Profile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetGuid(5) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Profile)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<Guid?>(dataReader.IsDBNull(13) ? default(Guid?) : (Guid?)dataReader.GetGuid(13));
                                        return 
                                        {
                                            Profile instance;
                                            instance = new Profile();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(5) ? default(Guid) : dataReader.GetGuid(5);
                                            instance.<CacheFile>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                            instance.<CreatedUtc>k__BackingField = dataReader.IsDBNull(7) ? default(DateTimeOffset) : dataReader.GetFieldValue<DateTimeOffset>(7);
                                            instance.<DatabaseName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                            instance.<Name>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                            instance.<Provider>k__BackingField = dataReader.IsDBNull(10) ? default(ProviderType) : Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(10));
                                            instance.<SecretRef>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                            instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(12) ? default(Guid?) : (Guid?)dataReader.GetGuid(12);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Profile)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<UserInfo, List<Profile>, Profile> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (UserInfo)(resultContext.Values[0]) : default(UserInfo);
        }, 
        contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-05 01:51:47.433 +03:00 [DBG] Creating DbConnection.
2025-09-05 01:51:47.434 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 01:51:47.436 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:51:47.438 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:51:47.439 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:51:47.440 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:51:47.442 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 01:51:47.445 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:51:47.451 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "u0"."Id", "u0"."ApiKey", "u0"."CreatedUtc", "u0"."LastUpdatedUtc", "u0"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM (
    SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode"
    FROM "UserInfos" AS "u"
    WHERE "u"."Id" = @__id_0
    LIMIT 1
) AS "u0"
LEFT JOIN "Profiles" AS "p" ON "u0"."Id" = "p"."UserInfoId"
ORDER BY "u0"."Id"
2025-09-05 01:51:47.481 +03:00 [DBG] Context 'ContextDB' started tracking 'UserInfo' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:51:47.512 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 01:51:47.528 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:51:47.529 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 76ms reading results.
2025-09-05 01:51:47.532 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:51:47.535 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (2ms).
2025-09-05 01:51:47.539 +03:00 [DBG] Compiling query expression: 
'DbSet<Profile>()
    .Include(e => e.Queries)
    .FirstOrDefault(e => e.Id.Equals(__id_0))'
2025-09-05 01:51:47.541 +03:00 [DBG] Including navigation: 'Profile.Queries'.
2025-09-05 01:51:47.554 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Profile>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Profile>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Profile entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Profile instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Profile);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Profile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Profile)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                {
                                    shadowSnapshot1 = (ISnapshot)new Snapshot<Guid?>(dataReader.IsDBNull(8) ? default(Guid?) : (Guid?)dataReader.GetGuid(8));
                                    return 
                                    {
                                        Profile instance;
                                        instance = new Profile();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<CacheFile>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                        instance.<CreatedUtc>k__BackingField = dataReader.GetFieldValue<DateTimeOffset>(2);
                                        instance.<DatabaseName>k__BackingField = dataReader.GetString(3);
                                        instance.<Name>k__BackingField = dataReader.GetString(4);
                                        instance.<Provider>k__BackingField = Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                        instance.<SecretRef>k__BackingField = dataReader.GetString(6);
                                        instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid?) : (Guid?)dataReader.GetGuid(7);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Profile)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Profile, Profile>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Profile)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: Profile.Queries (List<Query>) Collection ToDependent Query Inverse: Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Profile, Query>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(9) ? default(Guid?) : (Guid?)dataReader.GetGuid(9) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Query entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Query instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Query);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Query.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetGuid(9) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Query)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]: 
                                    {
                                        return 
                                        {
                                            Query instance;
                                            instance = new Query();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                            instance.<ProfileId>k__BackingField = dataReader.IsDBNull(10) ? default(Guid) : dataReader.GetGuid(10);
                                            instance.<ResultJson>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                            instance.<SqlQuery>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                            instance.<TimestampUtc>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime) : dataReader.GetDateTime(13);
                                            instance.<UserQuery>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Query)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Query.Profile (Profile) ToPrincipal Profile Inverse: Queries | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindNavigation("Profile")], 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                    return namelessParameter{11}.<Profile>k__BackingField = namelessParameter{10};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Profile)(resultContext.Values[0]) : default(Profile);
        }, 
        contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-05 01:51:47.560 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:51:47.561 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:51:47.562 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:51:47.563 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:51:47.564 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 01:51:47.566 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:51:47.567 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:51:47.570 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:51:47.571 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 2ms reading results.
2025-09-05 01:51:47.572 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:51:47.573 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:51:47.581 +03:00 [INF] Fetching connection string for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:51:47.584 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:51:47.585 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:51:47.586 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 01:51:47.587 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 01:51:47.588 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-05 01:51:47.589 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:51:47.591 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 01:51:47.592 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:51:47.593 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 1ms reading results.
2025-09-05 01:51:47.595 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 01:51:47.596 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 01:51:47.604 +03:00 [DBG] Fetched secret for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 01:51:47.615 +03:00 [DBG] Fetching schema for Profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08", ForceRefresh=false
2025-09-05 01:51:47.617 +03:00 [INF] Fetching schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory (ForceRefresh=false)
2025-09-05 01:51:47.702 +03:00 [INF] Loaded schema for DESKTOP-QCK8UI5\SQLEXPRESS|ProductInventory from cache file
2025-09-05 01:51:47.726 +03:00 [INF] Groq API key configured for HttpClient
2025-09-05 01:51:47.728 +03:00 [INF] Converting natural language to SQL. User query: show all categories
2025-09-05 01:51:47.730 +03:00 [DBG] Generated prompt with system message, 2 examples, and user query
2025-09-05 01:51:47.731 +03:00 [DBG] Generated prompt with 6 messages
2025-09-05 01:51:47.738 +03:00 [DBG] Request payload prepared for LLM API
2025-09-05 01:51:48.555 +03:00 [INF] LLM API responded with status: "OK"
2025-09-05 01:51:48.565 +03:00 [INF] Successfully converted natural language to SQL query
2025-09-05 01:51:48.573 +03:00 [INF] Executed endpoint 'HTTP: POST api/query/{profileId}/convert'
2025-09-05 01:51:48.577 +03:00 [DBG] Connection id "0HNFC0MG7078E" completed keep alive response.
2025-09-05 01:51:48.579 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 01:51:48.582 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 01:51:48.584 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 01:51:48.585 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/convert - 200 null application/json; charset=utf-8 1664.5723ms
2025-09-05 17:18:32.827 +03:00 [INF] This is a test log to file!
2025-09-05 17:18:34.512 +03:00 [INF] Shared Kernal configured successfully.
2025-09-05 17:18:34.538 +03:00 [INF] API configured successfully.
2025-09-05 17:18:34.746 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-05 17:18:34.874 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-05 17:18:35.676 +03:00 [WRN] The foreign key property 'Profile.UserInfoId1' was created in shadow state because a conflicting property with the simple name 'UserInfoId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-09-05 17:18:35.811 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 17:18:35.867 +03:00 [INF] Registered 20 endpoints in 1,871 milliseconds.
2025-09-05 17:18:35.879 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 17:18:35.938 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 17:18:36.060 +03:00 [DBG] Creating DbConnection.
2025-09-05 17:18:36.080 +03:00 [DBG] Created DbConnection. (17ms).
2025-09-05 17:18:36.086 +03:00 [DBG] Migrating using database 'main' on server 'schema_cache.db'.
2025-09-05 17:18:36.094 +03:00 [DBG] Creating DbConnection.
2025-09-05 17:18:36.097 +03:00 [DBG] Created DbConnection. (3ms).
2025-09-05 17:18:36.100 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 17:18:36.139 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 17:18:36.155 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 17:18:36.161 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 17:18:36.162 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 17:18:36.165 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 17:18:36.169 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-05 17:18:36.175 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 17:18:36.189 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (11ms).
2025-09-05 17:18:36.192 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (17ms).
2025-09-05 17:18:36.198 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 17:18:36.224 +03:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 17:18:36.228 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 17:18:36.229 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 17:18:36.230 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 17:18:36.231 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-05 14:18:36.2278796+00:00');
SELECT changes();
2025-09-05 17:18:36.237 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-05 14:18:36.2278796+00:00');
SELECT changes();
2025-09-05 17:18:36.285 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 17:18:36.288 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 17:18:36.290 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-05 17:18:36.292 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-09-05 17:18:36.293 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-09-05 17:18:36.295 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 17:18:36.297 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 17:18:36.299 +03:00 [DBG] Committing transaction.
2025-09-05 17:18:36.301 +03:00 [DBG] Committed transaction.
2025-09-05 17:18:36.303 +03:00 [DBG] Disposing transaction.
2025-09-05 17:18:36.306 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 17:18:36.307 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 17:18:36.310 +03:00 [DBG] Creating DbConnection.
2025-09-05 17:18:36.311 +03:00 [DBG] Created DbConnection. (1ms).
2025-09-05 17:18:36.312 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 17:18:36.313 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 17:18:36.315 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 17:18:36.316 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 17:18:36.318 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 17:18:36.318 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 17:18:36.320 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 17:18:36.321 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 17:18:36.323 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 17:18:36.326 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 17:18:36.327 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-09-05 17:18:36.328 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 17:18:36.330 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 17:18:36.332 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 17:18:36.336 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 17:18:36.339 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 3ms reading results.
2025-09-05 17:18:36.344 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-05 17:18:36.345 +03:00 [DBG] Committing transaction.
2025-09-05 17:18:36.346 +03:00 [DBG] Committed transaction.
2025-09-05 17:18:36.347 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 17:18:36.348 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 17:18:36.349 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 17:18:36.350 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 17:18:36.358 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 17:18:36.360 +03:00 [DBG] Disposing transaction.
2025-09-05 17:18:36.362 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 17:18:36.366 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (4ms).
2025-09-05 17:18:36.367 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 17:18:36.368 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 17:18:36.370 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 17:18:36.371 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 17:18:36.372 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 17:18:36.414 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-05 17:18:36.450 +03:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-09-05 17:18:36.452 +03:00 [DBG] Hosting starting
2025-09-05 17:18:36.474 +03:00 [DBG] Middleware loaded
2025-09-05 17:18:36.492 +03:00 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16521 B).
2025-09-05 17:18:36.494 +03:00 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-09-05 17:18:36.644 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-05 17:18:36.647 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-05 17:18:36.724 +03:00 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-09-05 17:18:36.803 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert
2025-09-05 17:18:36.925 +03:00 [INF] Now listening on: https://localhost:7202
2025-09-05 17:18:36.926 +03:00 [INF] Now listening on: http://localhost:5000
2025-09-05 17:18:36.929 +03:00 [DBG] Loaded hosting startup assembly NaturalToQuery.Api
2025-09-05 17:18:36.933 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-05 17:18:36.934 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-05 17:18:36.936 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-05 17:18:36.946 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 17:18:36.973 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 17:18:37.037 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-05 17:18:37.038 +03:00 [INF] Hosting environment: Development
2025-09-05 17:18:37.039 +03:00 [INF] Content root path: C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql
2025-09-05 17:18:37.040 +03:00 [DBG] Hosting started
2025-09-05 19:43:15.701 +03:00 [INF] This is a test log to file!
2025-09-05 19:43:16.475 +03:00 [INF] Shared Kernal configured successfully.
2025-09-05 19:43:16.501 +03:00 [INF] API configured successfully.
2025-09-05 19:43:16.705 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-05 19:43:16.776 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-05 19:43:17.288 +03:00 [WRN] The foreign key property 'Profile.UserInfoId1' was created in shadow state because a conflicting property with the simple name 'UserInfoId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-09-05 19:43:17.373 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 19:43:17.409 +03:00 [INF] Registered 20 endpoints in 1,484 milliseconds.
2025-09-05 19:43:17.415 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 19:43:17.449 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 19:43:17.540 +03:00 [DBG] Creating DbConnection.
2025-09-05 19:43:17.555 +03:00 [DBG] Created DbConnection. (11ms).
2025-09-05 19:43:17.557 +03:00 [DBG] Migrating using database 'main' on server 'schema_cache.db'.
2025-09-05 19:43:17.573 +03:00 [DBG] Creating DbConnection.
2025-09-05 19:43:17.580 +03:00 [DBG] Created DbConnection. (7ms).
2025-09-05 19:43:17.584 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 19:43:17.619 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 19:43:17.624 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 19:43:17.628 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 19:43:17.629 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 19:43:17.633 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 19:43:17.636 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-05 19:43:17.640 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 19:43:17.648 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (5ms).
2025-09-05 19:43:17.650 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (9ms).
2025-09-05 19:43:17.657 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 19:43:17.700 +03:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 19:43:17.704 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 19:43:17.705 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 19:43:17.706 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 19:43:17.707 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-05 16:43:17.704074+00:00');
SELECT changes();
2025-09-05 19:43:17.716 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-05 16:43:17.704074+00:00');
SELECT changes();
2025-09-05 19:43:17.784 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 19:43:17.788 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 19:43:17.792 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-05 19:43:17.793 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-09-05 19:43:17.798 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (6ms).
2025-09-05 19:43:17.800 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 19:43:17.805 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 19:43:17.808 +03:00 [DBG] Committing transaction.
2025-09-05 19:43:17.810 +03:00 [DBG] Committed transaction.
2025-09-05 19:43:17.812 +03:00 [DBG] Disposing transaction.
2025-09-05 19:43:17.814 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 19:43:17.815 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 19:43:17.817 +03:00 [DBG] Creating DbConnection.
2025-09-05 19:43:17.818 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 19:43:17.819 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 19:43:17.821 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 19:43:17.822 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 19:43:17.823 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 19:43:17.824 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 19:43:17.825 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 19:43:17.827 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 19:43:17.828 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 19:43:17.830 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 19:43:17.833 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 19:43:17.834 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 19:43:17.835 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 19:43:17.836 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 19:43:17.840 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 19:43:17.844 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 19:43:17.846 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 3ms reading results.
2025-09-05 19:43:17.850 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-05 19:43:17.851 +03:00 [DBG] Committing transaction.
2025-09-05 19:43:17.852 +03:00 [DBG] Committed transaction.
2025-09-05 19:43:17.852 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 19:43:17.853 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 19:43:17.854 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 19:43:17.855 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 19:43:17.860 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 19:43:17.862 +03:00 [DBG] Disposing transaction.
2025-09-05 19:43:17.863 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 19:43:17.866 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (3ms).
2025-09-05 19:43:17.868 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 19:43:17.869 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 19:43:17.870 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 19:43:17.871 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 19:43:17.872 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 19:43:17.936 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-05 19:43:17.991 +03:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-09-05 19:43:17.993 +03:00 [DBG] Hosting starting
2025-09-05 19:43:18.012 +03:00 [DBG] Middleware loaded
2025-09-05 19:43:18.015 +03:00 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16521 B).
2025-09-05 19:43:18.027 +03:00 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-09-05 19:43:18.127 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-05 19:43:18.129 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-05 19:43:18.132 +03:00 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-09-05 19:43:18.185 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert
2025-09-05 19:43:18.269 +03:00 [INF] Now listening on: https://localhost:7202
2025-09-05 19:43:18.270 +03:00 [INF] Now listening on: http://localhost:5000
2025-09-05 19:43:18.271 +03:00 [DBG] Loaded hosting startup assembly NaturalToQuery.Api
2025-09-05 19:43:18.272 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-05 19:43:18.273 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-05 19:43:18.273 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-05 19:43:18.278 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 19:43:18.295 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 19:43:18.327 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-05 19:43:18.328 +03:00 [INF] Hosting environment: Development
2025-09-05 19:43:18.329 +03:00 [INF] Content root path: C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql
2025-09-05 19:43:18.330 +03:00 [DBG] Hosting started
2025-09-05 19:45:31.075 +03:00 [DBG] Connection id "0HNFCJEG5I2I5" received FIN.
2025-09-05 19:45:31.087 +03:00 [DBG] Connection id "0HNFCJEG5I2I5" accepted.
2025-09-05 19:45:31.095 +03:00 [DBG] Connection id "0HNFCJEG5I2I5" started.
2025-09-05 19:45:31.096 +03:00 [DBG] Connection id "0HNFCJEG5I2I6" accepted.
2025-09-05 19:45:31.097 +03:00 [DBG] Connection id "0HNFCJEG5I2I6" started.
2025-09-05 19:45:31.110 +03:00 [DBG] Connection id "0HNFCJEG5I2I5" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 19:45:31.113 +03:00 [DBG] Connection id "0HNFCJEG5I2I5" disconnecting.
2025-09-05 19:45:31.117 +03:00 [DBG] Connection id "0HNFCJEG5I2I5" stopped.
2025-09-05 19:45:31.151 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/health/localllm - null null
2025-09-05 19:45:31.203 +03:00 [DBG] No candidates found for the request path '/api/health/localllm'
2025-09-05 19:45:31.205 +03:00 [DBG] Request did not match any endpoints
2025-09-05 19:45:31.248 +03:00 [DBG] Https port '7202' loaded from configuration.
2025-09-05 19:45:31.251 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/health/localllm'.
2025-09-05 19:45:31.259 +03:00 [DBG] Connection id "0HNFCJEG5I2I6" completed keep alive response.
2025-09-05 19:45:31.262 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/api/health/localllm - 307 0 null 119.1673ms
2025-09-05 19:45:31.265 +03:00 [DBG] Connection id "0HNFCJEG5I2I7" accepted.
2025-09-05 19:45:31.265 +03:00 [DBG] Connection id "0HNFCJEG5I2I8" accepted.
2025-09-05 19:45:31.279 +03:00 [DBG] Connection id "0HNFCJEG5I2I7" received FIN.
2025-09-05 19:45:31.280 +03:00 [DBG] Connection id "0HNFCJEG5I2I7" started.
2025-09-05 19:45:31.281 +03:00 [DBG] Connection id "0HNFCJEG5I2I8" started.
2025-09-05 19:45:31.283 +03:00 [DBG] Connection id "0HNFCJEG5I2I7" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 19:45:31.285 +03:00 [DBG] Connection id "0HNFCJEG5I2I7" disconnecting.
2025-09-05 19:45:31.285 +03:00 [DBG] Connection id "0HNFCJEG5I2I7" stopped.
2025-09-05 19:45:31.367 +03:00 [DBG] Connection 0HNFCJEG5I2I8 established using the following protocol: "Tls13"
2025-09-05 19:45:31.371 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7202/api/health/localllm - null null
2025-09-05 19:45:31.374 +03:00 [DBG] No candidates found for the request path '/api/health/localllm'
2025-09-05 19:45:31.375 +03:00 [DBG] Request did not match any endpoints
2025-09-05 19:45:31.381 +03:00 [DBG] Connection id "0HNFCJEG5I2I8" completed keep alive response.
2025-09-05 19:45:31.382 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7202/api/health/localllm - 404 0 null 11.2527ms
2025-09-05 19:45:31.385 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7202/api/health/localllm, Response status code: 404
2025-09-05 19:45:42.520 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/setup/profiles - null null
2025-09-05 19:45:42.523 +03:00 [DBG] 1 candidate(s) found for the request path '/api/setup/profiles'
2025-09-05 19:45:42.524 +03:00 [DBG] Request matched endpoint 'HTTP: GET api/setup/profiles'
2025-09-05 19:45:42.529 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/setup/profiles'.
2025-09-05 19:45:42.530 +03:00 [DBG] Connection id "0HNFCJEG5I2I6" completed keep alive response.
2025-09-05 19:45:42.531 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/api/setup/profiles - 307 0 null 11.0467ms
2025-09-05 19:45:42.533 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7202/api/setup/profiles - null null
2025-09-05 19:45:42.537 +03:00 [DBG] 1 candidate(s) found for the request path '/api/setup/profiles'
2025-09-05 19:45:42.538 +03:00 [DBG] Request matched endpoint 'HTTP: GET api/setup/profiles'
2025-09-05 19:45:42.540 +03:00 [INF] Executing endpoint 'HTTP: GET api/setup/profiles'
2025-09-05 19:45:42.565 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 19:45:42.589 +03:00 [INF] Listing all profiles
2025-09-05 19:45:42.620 +03:00 [DBG] Compiling query expression: 
'DbSet<Profile>()
    .Include(e => e.Queries)
    .AsNoTracking()'
2025-09-05 19:45:42.669 +03:00 [DBG] Including navigation: 'Profile.Queries'.
2025-09-05 19:45:42.862 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Profile>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
            1 -> 0
            2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
            3 -> 9
        SELECT p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
        FROM Profiles AS p
        LEFT JOIN Queries AS q ON p.Id == q.ProfileId
        ORDER BY p.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
            1 -> 0
            2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
            3 -> 9
        SELECT p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
        FROM Profiles AS p
        LEFT JOIN Queries AS q ON p.Id == q.ProfileId
        ORDER BY p.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            Profile entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Profile instance1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Profile);
                (object)dataReader.GetGuid(0) != null ? 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                            {
                                return 
                                {
                                    Profile instance;
                                    instance = new Profile();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<CacheFile>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<CreatedUtc>k__BackingField = dataReader.GetFieldValue<DateTimeOffset>(2);
                                    instance.<DatabaseName>k__BackingField = dataReader.GetString(3);
                                    instance.<Name>k__BackingField = dataReader.GetString(4);
                                    instance.<Provider>k__BackingField = Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                    instance.<SecretRef>k__BackingField = dataReader.GetString(6);
                                    instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid?) : (Guid?)dataReader.GetGuid(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: NoTracking, 
                                        structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Profile)
                    }
                    ;
                    return instance1;
                } : 
                {
                    object[] keyValues1;
                    keyValues1 = new object[]{ (object)dataReader.GetGuid(0) };
                    return ShapedQueryCompilingExpressionVisitor.CreateNullKeyValueInNoTrackingQuery(
                        entityType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")], 
                        properties: [LIFTABLE Constant: List<RuntimeProperty> { Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd } | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey().Properties], 
                        keyValues: keyValues1);
                };
                return instance1;
            };
            resultContext.Values = new object[]{ entity };
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Profile, Profile>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Profile)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                navigation: [LIFTABLE Constant: Navigation: Profile.Queries (List<Query>) Collection ToDependent Query Inverse: Profile | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()], 
                trackingQuery: False, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Profile, Query>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
            selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(9) ? default(Guid?) : (Guid?)dataReader.GetGuid(9) }], 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Query entity;
                entity = 
                {
                    MaterializationContext materializationContext2;
                    IEntityType entityType2;
                    Query instance2;
                    materializationContext2 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance2 = default(Query);
                    dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetGuid(9) != null ? 
                    {
                        ISnapshot shadowSnapshot2;
                        shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType2 = [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")];
                        instance2 = switch (entityType2)
                        {
                            case [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]: 
                                {
                                    return 
                                    {
                                        Query instance;
                                        instance = new Query();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                        instance.<ProfileId>k__BackingField = dataReader.IsDBNull(10) ? default(Guid) : dataReader.GetGuid(10);
                                        instance.<ResultJson>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<SqlQuery>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<TimestampUtc>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime) : dataReader.GetDateTime(13);
                                        instance.<UserQuery>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext2.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: NoTracking, 
                                            structuralType: [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Query)
                        }
                        ;
                        return instance2;
                    } : default(void);
                    return instance2;
                };
                return entity;
            }, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Query.Profile (Profile) ToPrincipal Profile Inverse: Queries | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindNavigation("Profile")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()].Add(
                    entity: namelessParameter{11}, 
                    value: namelessParameter{12}, 
                    forMaterialization: True);
                return namelessParameter{12}.<Profile>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: False);
        return IsTrue(resultCoordinator.ResultReady)
         ? (Profile)(resultContext.Values[0]) : default(Profile);
    }, 
    contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-09-05 19:45:42.887 +03:00 [DBG] Creating DbConnection.
2025-09-05 19:45:42.889 +03:00 [DBG] Created DbConnection. (1ms).
2025-09-05 19:45:42.891 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 19:45:42.893 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 19:45:42.895 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 19:45:42.896 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 19:45:42.897 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 19:45:42.899 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM "Profiles" AS "p"
LEFT JOIN "Queries" AS "q" ON "p"."Id" = "q"."ProfileId"
ORDER BY "p"."Id"
2025-09-05 19:45:42.902 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM "Profiles" AS "p"
LEFT JOIN "Queries" AS "q" ON "p"."Id" = "q"."ProfileId"
ORDER BY "p"."Id"
2025-09-05 19:45:42.914 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 19:45:42.916 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 11ms reading results.
2025-09-05 19:45:42.918 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 19:45:42.919 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 19:45:42.922 +03:00 [INF] Fetching connection string for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 19:45:42.929 +03:00 [DBG] Compiling query expression: 
'DbSet<Profile>()
    .Include(e => e.Queries)
    .FirstOrDefault(e => e.Id.Equals(__id_0))'
2025-09-05 19:45:42.933 +03:00 [DBG] Including navigation: 'Profile.Queries'.
2025-09-05 19:45:42.957 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Profile>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Profile>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Profile entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Profile instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Profile);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Profile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Profile)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                {
                                    shadowSnapshot1 = (ISnapshot)new Snapshot<Guid?>(dataReader.IsDBNull(8) ? default(Guid?) : (Guid?)dataReader.GetGuid(8));
                                    return 
                                    {
                                        Profile instance;
                                        instance = new Profile();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<CacheFile>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                        instance.<CreatedUtc>k__BackingField = dataReader.GetFieldValue<DateTimeOffset>(2);
                                        instance.<DatabaseName>k__BackingField = dataReader.GetString(3);
                                        instance.<Name>k__BackingField = dataReader.GetString(4);
                                        instance.<Provider>k__BackingField = Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                        instance.<SecretRef>k__BackingField = dataReader.GetString(6);
                                        instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid?) : (Guid?)dataReader.GetGuid(7);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Profile)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Profile, Profile>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Profile)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: Profile.Queries (List<Query>) Collection ToDependent Query Inverse: Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Profile, Query>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(9) ? default(Guid?) : (Guid?)dataReader.GetGuid(9) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Query entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Query instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Query);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Query.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetGuid(9) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Query)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]: 
                                    {
                                        return 
                                        {
                                            Query instance;
                                            instance = new Query();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                            instance.<ProfileId>k__BackingField = dataReader.IsDBNull(10) ? default(Guid) : dataReader.GetGuid(10);
                                            instance.<ResultJson>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                            instance.<SqlQuery>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                            instance.<TimestampUtc>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime) : dataReader.GetDateTime(13);
                                            instance.<UserQuery>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Query)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Query.Profile (Profile) ToPrincipal Profile Inverse: Queries | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindNavigation("Profile")], 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                    return namelessParameter{11}.<Profile>k__BackingField = namelessParameter{10};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Profile)(resultContext.Values[0]) : default(Profile);
        }, 
        contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-05 19:45:42.969 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 19:45:42.971 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 19:45:42.972 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 19:45:42.973 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 19:45:42.975 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-09-05 19:45:42.978 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 19:45:42.983 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-05 19:45:43.004 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-05 19:45:43.029 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 19:45:43.031 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 45ms reading results.
2025-09-05 19:45:43.032 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 19:45:43.033 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 19:45:43.048 +03:00 [DBG] Fetched secret for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-05 19:45:43.070 +03:00 [INF] Executed endpoint 'HTTP: GET api/setup/profiles'
2025-09-05 19:45:43.071 +03:00 [DBG] Connection id "0HNFCJEG5I2I8" completed keep alive response.
2025-09-05 19:45:43.073 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 19:45:43.075 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 19:45:43.076 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 19:45:43.078 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7202/api/setup/profiles - 200 null application/json; charset=utf-8 545.3074ms
2025-09-05 19:48:40.771 +03:00 [INF] This is a test log to file!
2025-09-05 19:49:57.845 +03:00 [INF] This is a test log to file!
2025-09-05 19:49:58.209 +03:00 [INF] Shared Kernal configured successfully.
2025-09-05 19:49:58.219 +03:00 [INF] API configured successfully.
2025-09-05 19:49:58.316 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-05 19:49:58.419 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-05 19:49:58.913 +03:00 [WRN] The foreign key property 'Profile.UserInfoId1' was created in shadow state because a conflicting property with the simple name 'UserInfoId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-09-05 19:49:58.973 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 19:49:59.006 +03:00 [INF] Registered 21 endpoints in 1,040 milliseconds.
2025-09-05 19:49:59.013 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 19:49:59.060 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 19:49:59.171 +03:00 [DBG] Creating DbConnection.
2025-09-05 19:49:59.183 +03:00 [DBG] Created DbConnection. (8ms).
2025-09-05 19:49:59.195 +03:00 [DBG] Migrating using database 'main' on server 'schema_cache.db'.
2025-09-05 19:49:59.199 +03:00 [DBG] Creating DbConnection.
2025-09-05 19:49:59.203 +03:00 [DBG] Created DbConnection. (3ms).
2025-09-05 19:49:59.212 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 19:49:59.235 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 19:49:59.240 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 19:49:59.260 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (17ms).
2025-09-05 19:49:59.261 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 19:49:59.264 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 19:49:59.266 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-05 19:49:59.270 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 19:49:59.280 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 19:49:59.290 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (19ms).
2025-09-05 19:49:59.295 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 19:49:59.336 +03:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 19:49:59.341 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 19:49:59.342 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 19:49:59.343 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 19:49:59.364 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-05 16:49:59.3408619+00:00');
SELECT changes();
2025-09-05 19:49:59.370 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-05 16:49:59.3408619+00:00');
SELECT changes();
2025-09-05 19:49:59.454 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 19:49:59.459 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 19:49:59.461 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-05 19:49:59.474 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (12ms).
2025-09-05 19:49:59.476 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (14ms).
2025-09-05 19:49:59.477 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 19:49:59.480 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 19:49:59.483 +03:00 [DBG] Committing transaction.
2025-09-05 19:49:59.498 +03:00 [DBG] Committed transaction.
2025-09-05 19:49:59.502 +03:00 [DBG] Disposing transaction.
2025-09-05 19:49:59.506 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 19:49:59.507 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 19:49:59.512 +03:00 [DBG] Creating DbConnection.
2025-09-05 19:49:59.513 +03:00 [DBG] Created DbConnection. (1ms).
2025-09-05 19:49:59.514 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 19:49:59.519 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 19:49:59.521 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 19:49:59.522 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 19:49:59.523 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 19:49:59.525 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 19:49:59.526 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 19:49:59.527 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 19:49:59.529 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 19:49:59.532 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 19:49:59.533 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-05 19:49:59.535 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 19:49:59.536 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 19:49:59.546 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 19:49:59.550 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 19:49:59.553 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 3ms reading results.
2025-09-05 19:49:59.557 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-05 19:49:59.558 +03:00 [DBG] Committing transaction.
2025-09-05 19:49:59.559 +03:00 [DBG] Committed transaction.
2025-09-05 19:49:59.559 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 19:49:59.560 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 19:49:59.561 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 19:49:59.562 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 19:49:59.568 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 19:49:59.569 +03:00 [DBG] Disposing transaction.
2025-09-05 19:49:59.571 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 19:49:59.574 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (3ms).
2025-09-05 19:49:59.576 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 19:49:59.577 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 19:49:59.578 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 19:49:59.579 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 19:49:59.580 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 19:49:59.621 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-05 19:49:59.653 +03:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-09-05 19:49:59.655 +03:00 [DBG] Hosting starting
2025-09-05 19:49:59.675 +03:00 [DBG] Middleware loaded
2025-09-05 19:49:59.679 +03:00 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16521 B).
2025-09-05 19:49:59.682 +03:00 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-09-05 19:49:59.773 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-05 19:49:59.776 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-05 19:49:59.779 +03:00 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-09-05 19:49:59.826 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert
2025-09-05 19:49:59.890 +03:00 [INF] Now listening on: https://localhost:7202
2025-09-05 19:49:59.891 +03:00 [INF] Now listening on: http://localhost:5000
2025-09-05 19:49:59.892 +03:00 [DBG] Loaded hosting startup assembly NaturalToQuery.Api
2025-09-05 19:49:59.893 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-05 19:49:59.893 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-05 19:49:59.894 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-05 19:49:59.902 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 19:49:59.910 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 19:49:59.944 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-05 19:49:59.945 +03:00 [INF] Hosting environment: Development
2025-09-05 19:49:59.946 +03:00 [INF] Content root path: C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql
2025-09-05 19:49:59.947 +03:00 [DBG] Hosting started
2025-09-05 19:50:06.428 +03:00 [DBG] Connection id "0HNFCJH27H5GM" received FIN.
2025-09-05 19:50:06.434 +03:00 [DBG] Connection id "0HNFCJH27H5GM" accepted.
2025-09-05 19:50:06.435 +03:00 [DBG] Connection id "0HNFCJH27H5GM" started.
2025-09-05 19:50:06.437 +03:00 [DBG] Connection id "0HNFCJH27H5GN" accepted.
2025-09-05 19:50:06.438 +03:00 [DBG] Connection id "0HNFCJH27H5GN" started.
2025-09-05 19:50:06.441 +03:00 [DBG] Connection id "0HNFCJH27H5GM" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 19:50:06.445 +03:00 [DBG] Connection id "0HNFCJH27H5GM" disconnecting.
2025-09-05 19:50:06.447 +03:00 [DBG] Connection id "0HNFCJH27H5GM" stopped.
2025-09-05 19:50:06.464 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/health/localllm - null null
2025-09-05 19:50:06.512 +03:00 [DBG] 1 candidate(s) found for the request path '/api/health/localllm'
2025-09-05 19:50:06.514 +03:00 [DBG] Request matched endpoint 'HTTP: GET api/health/localllm'
2025-09-05 19:50:06.553 +03:00 [DBG] Https port '7202' loaded from configuration.
2025-09-05 19:50:06.555 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/health/localllm'.
2025-09-05 19:50:06.557 +03:00 [DBG] Connection id "0HNFCJH27H5GN" completed keep alive response.
2025-09-05 19:50:06.560 +03:00 [DBG] Connection id "0HNFCJH27H5GP" accepted.
2025-09-05 19:50:06.560 +03:00 [DBG] Connection id "0HNFCJH27H5GO" accepted.
2025-09-05 19:50:06.567 +03:00 [DBG] Connection id "0HNFCJH27H5GP" started.
2025-09-05 19:50:06.567 +03:00 [DBG] Connection id "0HNFCJH27H5GO" started.
2025-09-05 19:50:06.574 +03:00 [DBG] Connection id "0HNFCJH27H5GO" received FIN.
2025-09-05 19:50:06.596 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/api/health/localllm - 307 0 null 108.3112ms
2025-09-05 19:50:06.597 +03:00 [DBG] Connection id "0HNFCJH27H5GO" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 19:50:06.606 +03:00 [DBG] Connection id "0HNFCJH27H5GO" disconnecting.
2025-09-05 19:50:06.608 +03:00 [DBG] Connection id "0HNFCJH27H5GO" stopped.
2025-09-05 19:50:06.635 +03:00 [DBG] Connection 0HNFCJH27H5GP established using the following protocol: "Tls13"
2025-09-05 19:50:06.639 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7202/api/health/localllm - null null
2025-09-05 19:50:06.642 +03:00 [DBG] 1 candidate(s) found for the request path '/api/health/localllm'
2025-09-05 19:50:06.643 +03:00 [DBG] Request matched endpoint 'HTTP: GET api/health/localllm'
2025-09-05 19:50:06.647 +03:00 [INF] Executing endpoint 'HTTP: GET api/health/localllm'
2025-09-05 19:50:06.678 +03:00 [INF] Start processing HTTP request GET http://localhost:11434/
2025-09-05 19:50:06.689 +03:00 [INF] Sending HTTP request GET http://localhost:11434/
2025-09-05 19:50:06.784 +03:00 [INF] Received HTTP response headers after 90.3482ms - 200
2025-09-05 19:50:06.786 +03:00 [INF] End processing HTTP request after 108.1993ms - 200
2025-09-05 19:50:06.800 +03:00 [INF] Executed endpoint 'HTTP: GET api/health/localllm'
2025-09-05 19:50:06.805 +03:00 [DBG] Connection id "0HNFCJH27H5GP" completed keep alive response.
2025-09-05 19:50:06.809 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7202/api/health/localllm - 200 null application/json; charset=utf-8 169.634ms
2025-09-05 19:50:20.955 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/health/localllm - null null
2025-09-05 19:50:20.958 +03:00 [DBG] 1 candidate(s) found for the request path '/api/health/localllm'
2025-09-05 19:50:20.959 +03:00 [DBG] Request matched endpoint 'HTTP: GET api/health/localllm'
2025-09-05 19:50:20.961 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/health/localllm'.
2025-09-05 19:50:20.963 +03:00 [DBG] Connection id "0HNFCJH27H5GN" completed keep alive response.
2025-09-05 19:50:20.964 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/api/health/localllm - 307 0 null 9.049ms
2025-09-05 19:50:20.965 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7202/api/health/localllm - null null
2025-09-05 19:50:20.969 +03:00 [DBG] 1 candidate(s) found for the request path '/api/health/localllm'
2025-09-05 19:50:20.970 +03:00 [DBG] Request matched endpoint 'HTTP: GET api/health/localllm'
2025-09-05 19:50:20.971 +03:00 [INF] Executing endpoint 'HTTP: GET api/health/localllm'
2025-09-05 19:50:20.973 +03:00 [INF] Start processing HTTP request GET http://localhost:11434/
2025-09-05 19:50:20.974 +03:00 [INF] Sending HTTP request GET http://localhost:11434/
2025-09-05 19:50:20.978 +03:00 [INF] Received HTTP response headers after 2.9171ms - 200
2025-09-05 19:50:20.982 +03:00 [INF] End processing HTTP request after 9.5635ms - 200
2025-09-05 19:50:20.984 +03:00 [INF] Executed endpoint 'HTTP: GET api/health/localllm'
2025-09-05 19:50:20.987 +03:00 [DBG] Connection id "0HNFCJH27H5GP" completed keep alive response.
2025-09-05 19:50:20.990 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7202/api/health/localllm - 200 null application/json; charset=utf-8 24.5521ms
2025-09-05 19:50:38.102 +03:00 [INF] This is a test log to file!
2025-09-05 19:50:38.408 +03:00 [INF] Shared Kernal configured successfully.
2025-09-05 19:50:38.416 +03:00 [INF] API configured successfully.
2025-09-05 19:50:38.492 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-05 19:50:38.544 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-05 19:50:38.995 +03:00 [WRN] The foreign key property 'Profile.UserInfoId1' was created in shadow state because a conflicting property with the simple name 'UserInfoId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-09-05 19:50:39.056 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 19:50:39.088 +03:00 [INF] Registered 21 endpoints in 875 milliseconds.
2025-09-05 19:50:39.095 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 19:50:39.130 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 19:50:39.203 +03:00 [DBG] Creating DbConnection.
2025-09-05 19:50:39.215 +03:00 [DBG] Created DbConnection. (10ms).
2025-09-05 19:50:39.220 +03:00 [DBG] Migrating using database 'main' on server 'schema_cache.db'.
2025-09-05 19:50:39.225 +03:00 [DBG] Creating DbConnection.
2025-09-05 19:50:39.227 +03:00 [DBG] Created DbConnection. (2ms).
2025-09-05 19:50:39.230 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 19:50:39.238 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 19:50:39.243 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 19:50:39.246 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 19:50:39.247 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 19:50:39.250 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 19:50:39.252 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-05 19:50:39.255 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 19:50:39.260 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 19:50:39.262 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (6ms).
2025-09-05 19:50:39.269 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 19:50:39.291 +03:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 19:50:39.294 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 19:50:39.295 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 19:50:39.296 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 19:50:39.297 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-05 16:50:39.2947327+00:00');
SELECT changes();
2025-09-05 19:50:39.306 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-05 16:50:39.2947327+00:00');
SELECT changes();
2025-09-05 19:50:39.343 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 19:50:39.348 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 19:50:39.350 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-05 19:50:39.351 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-09-05 19:50:39.352 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-09-05 19:50:39.354 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 19:50:39.355 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 19:50:39.358 +03:00 [DBG] Committing transaction.
2025-09-05 19:50:39.359 +03:00 [DBG] Committed transaction.
2025-09-05 19:50:39.361 +03:00 [DBG] Disposing transaction.
2025-09-05 19:50:39.362 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 19:50:39.364 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 19:50:39.366 +03:00 [DBG] Creating DbConnection.
2025-09-05 19:50:39.367 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-05 19:50:39.368 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 19:50:39.369 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 19:50:39.370 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 19:50:39.372 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 19:50:39.373 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 19:50:39.374 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 19:50:39.375 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 19:50:39.376 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 19:50:39.378 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 19:50:39.381 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 19:50:39.382 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-09-05 19:50:39.383 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 19:50:39.384 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 19:50:39.386 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 19:50:39.390 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 19:50:39.392 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 3ms reading results.
2025-09-05 19:50:39.396 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-05 19:50:39.397 +03:00 [DBG] Committing transaction.
2025-09-05 19:50:39.398 +03:00 [DBG] Committed transaction.
2025-09-05 19:50:39.399 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 19:50:39.400 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-05 19:50:39.401 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 19:50:39.402 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 19:50:39.410 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 19:50:39.411 +03:00 [DBG] Disposing transaction.
2025-09-05 19:50:39.413 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 19:50:39.415 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (3ms).
2025-09-05 19:50:39.417 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 19:50:39.418 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 19:50:39.419 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-05 19:50:39.420 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 19:50:39.421 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 19:50:39.444 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-05 19:50:39.468 +03:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-09-05 19:50:39.469 +03:00 [DBG] Hosting starting
2025-09-05 19:50:39.482 +03:00 [DBG] Middleware loaded
2025-09-05 19:50:39.485 +03:00 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16521 B).
2025-09-05 19:50:39.487 +03:00 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-09-05 19:50:39.557 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-05 19:50:39.560 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-05 19:50:39.563 +03:00 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-09-05 19:50:39.609 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert
2025-09-05 19:50:39.680 +03:00 [INF] Now listening on: https://localhost:7202
2025-09-05 19:50:39.681 +03:00 [INF] Now listening on: http://localhost:5000
2025-09-05 19:50:39.682 +03:00 [DBG] Loaded hosting startup assembly NaturalToQuery.Api
2025-09-05 19:50:39.683 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-05 19:50:39.683 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-05 19:50:39.684 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-05 19:50:39.689 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 19:50:39.696 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 19:50:39.720 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-05 19:50:39.722 +03:00 [INF] Hosting environment: Development
2025-09-05 19:50:39.723 +03:00 [INF] Content root path: C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql
2025-09-05 19:50:39.723 +03:00 [DBG] Hosting started
2025-09-05 19:50:43.979 +03:00 [DBG] Connection id "0HNFCJHDDKPED" received FIN.
2025-09-05 19:50:43.985 +03:00 [DBG] Connection id "0HNFCJHDDKPED" accepted.
2025-09-05 19:50:43.986 +03:00 [DBG] Connection id "0HNFCJHDDKPED" started.
2025-09-05 19:50:43.987 +03:00 [DBG] Connection id "0HNFCJHDDKPEE" accepted.
2025-09-05 19:50:43.989 +03:00 [DBG] Connection id "0HNFCJHDDKPEE" started.
2025-09-05 19:50:43.992 +03:00 [DBG] Connection id "0HNFCJHDDKPED" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 19:50:43.995 +03:00 [DBG] Connection id "0HNFCJHDDKPED" disconnecting.
2025-09-05 19:50:43.996 +03:00 [DBG] Connection id "0HNFCJHDDKPED" stopped.
2025-09-05 19:50:44.012 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/health/localllm - null null
2025-09-05 19:50:44.049 +03:00 [DBG] 1 candidate(s) found for the request path '/api/health/localllm'
2025-09-05 19:50:44.051 +03:00 [DBG] Request matched endpoint 'HTTP: GET api/health/localllm'
2025-09-05 19:50:44.074 +03:00 [DBG] Https port '7202' loaded from configuration.
2025-09-05 19:50:44.075 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/health/localllm'.
2025-09-05 19:50:44.077 +03:00 [DBG] Connection id "0HNFCJHDDKPEE" completed keep alive response.
2025-09-05 19:50:44.079 +03:00 [DBG] Connection id "0HNFCJHDDKPEF" accepted.
2025-09-05 19:50:44.080 +03:00 [DBG] Connection id "0HNFCJHDDKPEF" received FIN.
2025-09-05 19:50:44.079 +03:00 [DBG] Connection id "0HNFCJHDDKPEG" accepted.
2025-09-05 19:50:44.080 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/api/health/localllm - 307 0 null 71.2686ms
2025-09-05 19:50:44.086 +03:00 [DBG] Connection id "0HNFCJHDDKPEF" started.
2025-09-05 19:50:44.088 +03:00 [DBG] Connection id "0HNFCJHDDKPEG" started.
2025-09-05 19:50:44.092 +03:00 [DBG] Connection id "0HNFCJHDDKPEF" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 19:50:44.094 +03:00 [DBG] Connection id "0HNFCJHDDKPEF" disconnecting.
2025-09-05 19:50:44.094 +03:00 [DBG] Connection id "0HNFCJHDDKPEF" stopped.
2025-09-05 19:50:44.277 +03:00 [DBG] Connection 0HNFCJHDDKPEG established using the following protocol: "Tls13"
2025-09-05 19:50:44.282 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7202/api/health/localllm - null null
2025-09-05 19:50:44.287 +03:00 [DBG] 1 candidate(s) found for the request path '/api/health/localllm'
2025-09-05 19:50:44.289 +03:00 [DBG] Request matched endpoint 'HTTP: GET api/health/localllm'
2025-09-05 19:50:44.296 +03:00 [INF] Executing endpoint 'HTTP: GET api/health/localllm'
2025-09-05 19:50:44.324 +03:00 [INF] Start processing HTTP request GET http://localhost:11434/
2025-09-05 19:50:44.327 +03:00 [INF] Sending HTTP request GET http://localhost:11434/
2025-09-05 19:50:44.385 +03:00 [INF] Received HTTP response headers after 55.3302ms - 200
2025-09-05 19:50:44.388 +03:00 [INF] End processing HTTP request after 63.6125ms - 200
2025-09-05 19:50:44.398 +03:00 [INF] Executed endpoint 'HTTP: GET api/health/localllm'
2025-09-05 19:50:44.402 +03:00 [DBG] Connection id "0HNFCJHDDKPEG" completed keep alive response.
2025-09-05 19:50:44.404 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7202/api/health/localllm - 200 null application/json; charset=utf-8 121.8878ms
2025-09-05 19:51:02.860 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/health/localllm - null null
2025-09-05 19:51:02.863 +03:00 [DBG] 1 candidate(s) found for the request path '/api/health/localllm'
2025-09-05 19:51:02.864 +03:00 [DBG] Request matched endpoint 'HTTP: GET api/health/localllm'
2025-09-05 19:51:02.865 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/health/localllm'.
2025-09-05 19:51:02.866 +03:00 [DBG] Connection id "0HNFCJHDDKPEE" completed keep alive response.
2025-09-05 19:51:02.867 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/api/health/localllm - 307 0 null 7.2146ms
2025-09-05 19:51:02.868 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7202/api/health/localllm - null null
2025-09-05 19:51:02.872 +03:00 [DBG] 1 candidate(s) found for the request path '/api/health/localllm'
2025-09-05 19:51:02.873 +03:00 [DBG] Request matched endpoint 'HTTP: GET api/health/localllm'
2025-09-05 19:51:02.874 +03:00 [INF] Executing endpoint 'HTTP: GET api/health/localllm'
2025-09-05 19:51:02.876 +03:00 [INF] Start processing HTTP request GET http://localhost:11434/
2025-09-05 19:51:02.877 +03:00 [INF] Sending HTTP request GET http://localhost:11434/
2025-09-05 19:51:07.339 +03:00 [INF] Executed endpoint 'HTTP: GET api/health/localllm'
2025-09-05 19:51:07.340 +03:00 [DBG] Connection id "0HNFCJHDDKPEG" completed keep alive response.
2025-09-05 19:51:07.342 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7202/api/health/localllm - 503 null application/json; charset=utf-8 4474.4488ms
2025-09-05 19:51:16.306 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/health/localllm - null null
2025-09-05 19:51:16.309 +03:00 [DBG] 1 candidate(s) found for the request path '/api/health/localllm'
2025-09-05 19:51:16.310 +03:00 [DBG] Request matched endpoint 'HTTP: GET api/health/localllm'
2025-09-05 19:51:16.311 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/health/localllm'.
2025-09-05 19:51:16.312 +03:00 [DBG] Connection id "0HNFCJHDDKPEE" completed keep alive response.
2025-09-05 19:51:16.313 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7202/api/health/localllm - null null
2025-09-05 19:51:16.313 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/api/health/localllm - 307 0 null 7.5707ms
2025-09-05 19:51:16.315 +03:00 [DBG] 1 candidate(s) found for the request path '/api/health/localllm'
2025-09-05 19:51:16.318 +03:00 [DBG] Request matched endpoint 'HTTP: GET api/health/localllm'
2025-09-05 19:51:16.319 +03:00 [INF] Executing endpoint 'HTTP: GET api/health/localllm'
2025-09-05 19:51:16.321 +03:00 [INF] Start processing HTTP request GET http://localhost:11434/
2025-09-05 19:51:16.322 +03:00 [INF] Sending HTTP request GET http://localhost:11434/
2025-09-05 19:51:18.334 +03:00 [INF] Received HTTP response headers after 2011.2749ms - 200
2025-09-05 19:51:18.336 +03:00 [INF] End processing HTTP request after 2015.2209ms - 200
2025-09-05 19:51:18.337 +03:00 [INF] Executed endpoint 'HTTP: GET api/health/localllm'
2025-09-05 19:51:18.339 +03:00 [DBG] Connection id "0HNFCJHDDKPEG" completed keep alive response.
2025-09-05 19:51:18.340 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7202/api/health/localllm - 200 null application/json; charset=utf-8 2027.1057ms
2025-09-05 22:41:40.278 +03:00 [INF] This is a test log to file!
2025-09-05 23:29:59.251 +03:00 [INF] This is a test log to file!
2025-09-05 23:30:00.089 +03:00 [INF] Shared Kernal configured successfully.
2025-09-05 23:30:00.113 +03:00 [INF] API configured successfully.
2025-09-05 23:30:00.369 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-05 23:30:00.636 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-05 23:30:01.334 +03:00 [WRN] The foreign key property 'Profile.UserInfoId1' was created in shadow state because a conflicting property with the simple name 'UserInfoId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-09-05 23:30:01.434 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 23:30:01.471 +03:00 [INF] Registered 23 endpoints in 1,721 milliseconds.
2025-09-05 23:30:01.478 +03:00 [ERR] The route [PUT:api/userinfo/localllm] has 2 endpoints registered to handle requests!
2025-09-05 23:30:28.727 +03:00 [INF] This is a test log to file!
2025-09-05 23:30:29.185 +03:00 [INF] Shared Kernal configured successfully.
2025-09-05 23:30:29.195 +03:00 [INF] API configured successfully.
2025-09-05 23:30:29.376 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-05 23:30:29.439 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-05 23:30:30.034 +03:00 [WRN] The foreign key property 'Profile.UserInfoId1' was created in shadow state because a conflicting property with the simple name 'UserInfoId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-09-05 23:30:30.152 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 23:30:30.206 +03:00 [INF] Registered 23 endpoints in 1,295 milliseconds.
2025-09-05 23:30:30.218 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 23:30:30.281 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 23:30:30.402 +03:00 [DBG] Creating DbConnection.
2025-09-05 23:30:30.431 +03:00 [DBG] Created DbConnection. (22ms).
2025-09-05 23:30:30.434 +03:00 [DBG] Migrating using database 'main' on server 'schema_cache.db'.
2025-09-05 23:30:30.457 +03:00 [DBG] Creating DbConnection.
2025-09-05 23:30:30.465 +03:00 [DBG] Created DbConnection. (8ms).
2025-09-05 23:30:30.474 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 23:30:30.521 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 23:30:30.537 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 23:30:30.542 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 23:30:30.555 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 23:30:30.561 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 23:30:30.564 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-05 23:30:30.570 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 23:30:30.587 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (10ms).
2025-09-05 23:30:30.598 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (28ms).
2025-09-05 23:30:30.616 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 23:30:30.658 +03:00 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-05 23:30:30.663 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 23:30:30.664 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 23:30:30.666 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 23:30:30.667 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-05 20:30:30.662912+00:00');
SELECT changes();
2025-09-05 23:30:30.674 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-05 20:30:30.662912+00:00');
SELECT changes();
2025-09-05 23:30:30.750 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 23:30:30.756 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 23:30:30.763 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-05 23:30:30.764 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-09-05 23:30:30.767 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-09-05 23:30:30.769 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 23:30:30.773 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-05 23:30:30.777 +03:00 [DBG] Committing transaction.
2025-09-05 23:30:30.780 +03:00 [DBG] Committed transaction.
2025-09-05 23:30:30.786 +03:00 [DBG] Disposing transaction.
2025-09-05 23:30:30.790 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-05 23:30:30.791 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-05 23:30:30.794 +03:00 [DBG] Creating DbConnection.
2025-09-05 23:30:30.795 +03:00 [DBG] Created DbConnection. (1ms).
2025-09-05 23:30:30.811 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 23:30:30.826 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 23:30:30.828 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 23:30:30.830 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 23:30:30.832 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 23:30:30.834 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 23:30:30.835 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (3ms).
2025-09-05 23:30:30.837 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 23:30:30.859 +03:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-05 23:30:30.864 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 23:30:30.865 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-09-05 23:30:30.868 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-09-05 23:30:30.871 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 23:30:30.875 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-05 23:30:30.880 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 23:30:30.883 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 4ms reading results.
2025-09-05 23:30:30.890 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-05 23:30:30.891 +03:00 [DBG] Committing transaction.
2025-09-05 23:30:30.892 +03:00 [DBG] Committed transaction.
2025-09-05 23:30:30.894 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-05 23:30:30.895 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-05 23:30:30.897 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-05 23:30:30.901 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 23:30:30.908 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-05 23:30:30.910 +03:00 [DBG] Disposing transaction.
2025-09-05 23:30:30.913 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 23:30:30.918 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (5ms).
2025-09-05 23:30:30.920 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 23:30:30.922 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 23:30:30.923 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-05 23:30:30.925 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 23:30:30.926 +03:00 [INF] Infrastructure configured successfully.
2025-09-05 23:30:31.011 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-05 23:30:31.071 +03:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-09-05 23:30:31.074 +03:00 [DBG] Hosting starting
2025-09-05 23:30:31.098 +03:00 [DBG] Middleware loaded
2025-09-05 23:30:31.103 +03:00 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16521 B).
2025-09-05 23:30:31.105 +03:00 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-09-05 23:30:31.251 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-05 23:30:31.255 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-05 23:30:31.267 +03:00 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-09-05 23:30:31.331 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert
2025-09-05 23:30:31.510 +03:00 [INF] Now listening on: https://localhost:7202
2025-09-05 23:30:31.515 +03:00 [INF] Now listening on: http://localhost:5000
2025-09-05 23:30:31.516 +03:00 [DBG] Loaded hosting startup assembly NaturalToQuery.Api
2025-09-05 23:30:31.517 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-05 23:30:31.518 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-05 23:30:31.519 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-05 23:30:31.534 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 23:30:31.558 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-05 23:30:31.621 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-05 23:30:31.622 +03:00 [INF] Hosting environment: Development
2025-09-05 23:30:31.623 +03:00 [INF] Content root path: C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql
2025-09-05 23:30:31.629 +03:00 [DBG] Hosting started
2025-09-05 23:30:40.943 +03:00 [DBG] Connection id "0HNFCNCADM98C" accepted.
2025-09-05 23:30:40.947 +03:00 [DBG] Connection id "0HNFCNCADM98C" started.
2025-09-05 23:30:40.977 +03:00 [DBG] Connection id "0HNFCNCADM98D" accepted.
2025-09-05 23:30:40.978 +03:00 [DBG] Connection id "0HNFCNCADM98D" started.
2025-09-05 23:30:40.979 +03:00 [DBG] Connection id "0HNFCNCADM98C" received FIN.
2025-09-05 23:30:40.982 +03:00 [DBG] Connection id "0HNFCNCADM98C" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 23:30:40.985 +03:00 [DBG] Connection id "0HNFCNCADM98C" disconnecting.
2025-09-05 23:30:40.987 +03:00 [DBG] Connection id "0HNFCNCADM98C" stopped.
2025-09-05 23:30:41.086 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/userinfo - null null
2025-09-05 23:30:41.149 +03:00 [DBG] 1 candidate(s) found for the request path '/api/userinfo'
2025-09-05 23:30:41.152 +03:00 [DBG] Request matched endpoint 'HTTP: GET api/userinfo'
2025-09-05 23:30:41.203 +03:00 [DBG] Https port '7202' loaded from configuration.
2025-09-05 23:30:41.207 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/userinfo'.
2025-09-05 23:30:41.212 +03:00 [DBG] Connection id "0HNFCNCADM98D" completed keep alive response.
2025-09-05 23:30:41.216 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/api/userinfo - 307 0 null 140.0569ms
2025-09-05 23:30:41.431 +03:00 [DBG] Connection id "0HNFCNCADM98E" accepted.
2025-09-05 23:30:41.433 +03:00 [DBG] Connection id "0HNFCNCADM98E" started.
2025-09-05 23:30:41.458 +03:00 [DBG] Connection id "0HNFCNCADM98E" received FIN.
2025-09-05 23:30:41.458 +03:00 [DBG] Connection id "0HNFCNCADM98F" accepted.
2025-09-05 23:30:41.460 +03:00 [DBG] Connection id "0HNFCNCADM98E" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-05 23:30:41.461 +03:00 [DBG] Connection id "0HNFCNCADM98F" started.
2025-09-05 23:30:41.462 +03:00 [DBG] Connection id "0HNFCNCADM98E" disconnecting.
2025-09-05 23:30:41.466 +03:00 [DBG] Connection id "0HNFCNCADM98E" stopped.
2025-09-05 23:30:41.843 +03:00 [DBG] Connection 0HNFCNCADM98F established using the following protocol: "Tls13"
2025-09-05 23:30:41.847 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7202/api/userinfo - null null
2025-09-05 23:30:41.851 +03:00 [DBG] 1 candidate(s) found for the request path '/api/userinfo'
2025-09-05 23:30:41.854 +03:00 [DBG] Request matched endpoint 'HTTP: GET api/userinfo'
2025-09-05 23:30:41.860 +03:00 [INF] Executing endpoint 'HTTP: GET api/userinfo'
2025-09-05 23:30:41.874 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-05 23:30:41.910 +03:00 [INF] Getting all users
2025-09-05 23:30:41.951 +03:00 [DBG] Compiling query expression: 
'DbSet<UserInfo>()
    .Include(p => p.Profiles)
    .AsNoTracking()'
2025-09-05 23:30:42.016 +03:00 [DBG] Including navigation: 'UserInfo.Profiles'.
2025-09-05 23:30:42.279 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<UserInfo>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: UserInfo.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserInfo.ApiKey (string) Required MaxLength(200), 1], [Property: UserInfo.CreatedUtc (DateTime) Required, 2], [Property: UserInfo.LastUpdatedUtc (DateTime) Required, 3], [Property: UserInfo.Mode (AIMode) Required, 4] }
            1 -> 0
            2 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 5], [Property: Profile.CacheFile (string) MaxLength(500), 6], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 7], [Property: Profile.DatabaseName (string) Required, 8], [Property: Profile.Name (string) Required MaxLength(200), 9], [Property: Profile.Provider (ProviderType) Required, 10], [Property: Profile.SecretRef (string) Required, 11], [Property: Profile.UserInfoId (Guid?) FK Index, 12], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 13] }
            3 -> 5
        SELECT u.Id, u.ApiKey, u.CreatedUtc, u.LastUpdatedUtc, u.Mode, p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
        FROM UserInfos AS u
        LEFT JOIN Profiles AS p ON u.Id == p.UserInfoId
        ORDER BY u.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: UserInfo.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserInfo.ApiKey (string) Required MaxLength(200), 1], [Property: UserInfo.CreatedUtc (DateTime) Required, 2], [Property: UserInfo.LastUpdatedUtc (DateTime) Required, 3], [Property: UserInfo.Mode (AIMode) Required, 4] }
            1 -> 0
            2 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 5], [Property: Profile.CacheFile (string) MaxLength(500), 6], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 7], [Property: Profile.DatabaseName (string) Required, 8], [Property: Profile.Name (string) Required MaxLength(200), 9], [Property: Profile.Provider (ProviderType) Required, 10], [Property: Profile.SecretRef (string) Required, 11], [Property: Profile.UserInfoId (Guid?) FK Index, 12], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 13] }
            3 -> 5
        SELECT u.Id, u.ApiKey, u.CreatedUtc, u.LastUpdatedUtc, u.Mode, p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
        FROM UserInfos AS u
        LEFT JOIN Profiles AS p ON u.Id == p.UserInfoId
        ORDER BY u.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            UserInfo entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                UserInfo instance1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(UserInfo);
                (object)dataReader.GetGuid(0) != null ? 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")]: 
                            {
                                return 
                                {
                                    UserInfo instance;
                                    instance = new UserInfo();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<ApiKey>k__BackingField = dataReader.GetString(1);
                                    instance.<CreatedUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<LastUpdatedUtc>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<Mode>k__BackingField = Invoke(((EnumToNumberConverter<AIMode, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: UserInfo.Mode (AIMode) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindProperty("Mode")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: NoTracking, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserInfo)
                    }
                    ;
                    return instance1;
                } : 
                {
                    object[] keyValues1;
                    keyValues1 = new object[]{ (object)dataReader.GetGuid(0) };
                    return ShapedQueryCompilingExpressionVisitor.CreateNullKeyValueInNoTrackingQuery(
                        entityType: [LIFTABLE Constant: EntityType: UserInfo | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo")], 
                        properties: [LIFTABLE Constant: List<RuntimeProperty> { Property: UserInfo.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd } | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindPrimaryKey().Properties], 
                        keyValues: keyValues1);
                };
                return instance1;
            };
            resultContext.Values = new object[]{ entity };
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<UserInfo, UserInfo>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (UserInfo)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                navigation: [LIFTABLE Constant: Navigation: UserInfo.Profiles (List<Profile>) Collection ToDependent Profile | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<UserInfo, List<Profile>, Profile> | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles").GetCollectionAccessor()], 
                trackingQuery: False, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<UserInfo, Profile>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
            selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(5) ? default(Guid?) : (Guid?)dataReader.GetGuid(5) }], 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Profile entity;
                entity = 
                {
                    MaterializationContext materializationContext2;
                    IEntityType entityType2;
                    Profile instance2;
                    materializationContext2 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance2 = default(Profile);
                    dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetGuid(5) != null ? 
                    {
                        ISnapshot shadowSnapshot2;
                        shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType2 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                        instance2 = switch (entityType2)
                        {
                            case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                {
                                    return 
                                    {
                                        Profile instance;
                                        instance = new Profile();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(5) ? default(Guid) : dataReader.GetGuid(5);
                                        instance.<CacheFile>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                        instance.<CreatedUtc>k__BackingField = dataReader.IsDBNull(7) ? default(DateTimeOffset) : dataReader.GetFieldValue<DateTimeOffset>(7);
                                        instance.<DatabaseName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                        instance.<Name>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<Provider>k__BackingField = dataReader.IsDBNull(10) ? default(ProviderType) : Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(10));
                                        instance.<SecretRef>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(12) ? default(Guid?) : (Guid?)dataReader.GetGuid(12);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext2.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: NoTracking, 
                                            structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Profile)
                        }
                        ;
                        return instance2;
                    } : default(void);
                    return instance2;
                };
                return entity;
            }, 
            inverseNavigation: default(INavigationBase), 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                return [LIFTABLE Constant: ClrICollectionAccessor<UserInfo, List<Profile>, Profile> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.UserInfos.UserInfo").FindNavigation("Profiles").GetCollectionAccessor()].Add(
                    entity: namelessParameter{11}, 
                    value: namelessParameter{12}, 
                    forMaterialization: True);
            }, 
            trackingQuery: False);
        return IsTrue(resultCoordinator.ResultReady)
         ? (UserInfo)(resultContext.Values[0]) : default(UserInfo);
    }, 
    contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-09-05 23:30:42.305 +03:00 [DBG] Creating DbConnection.
2025-09-05 23:30:42.306 +03:00 [DBG] Created DbConnection. (1ms).
2025-09-05 23:30:42.309 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-05 23:30:42.312 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 23:30:42.314 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-05 23:30:42.315 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-09-05 23:30:42.316 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-05 23:30:42.318 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM "UserInfos" AS "u"
LEFT JOIN "Profiles" AS "p" ON "u"."Id" = "p"."UserInfoId"
ORDER BY "u"."Id"
2025-09-05 23:30:42.326 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."ApiKey", "u"."CreatedUtc", "u"."LastUpdatedUtc", "u"."Mode", "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
FROM "UserInfos" AS "u"
LEFT JOIN "Profiles" AS "p" ON "u"."Id" = "p"."UserInfoId"
ORDER BY "u"."Id"
2025-09-05 23:30:42.355 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 23:30:42.357 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 27ms reading results.
2025-09-05 23:30:42.362 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-05 23:30:42.365 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (2ms).
2025-09-05 23:30:42.411 +03:00 [INF] Executed endpoint 'HTTP: GET api/userinfo'
2025-09-05 23:30:42.413 +03:00 [DBG] Connection id "0HNFCNCADM98F" completed keep alive response.
2025-09-05 23:30:42.415 +03:00 [DBG] 'ContextDB' disposed.
2025-09-05 23:30:42.418 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-05 23:30:42.420 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (2ms).
2025-09-05 23:30:42.422 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7202/api/userinfo - 200 null application/json; charset=utf-8 575.55ms
2025-09-05 23:30:50.515 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/userinfo/localllm - null null
2025-09-05 23:30:50.518 +03:00 [DBG] 2 candidate(s) found for the request path '/api/userinfo/localllm'
2025-09-05 23:30:50.520 +03:00 [DBG] Endpoint 'HTTP: GET api/userinfo/localllm' with route pattern 'api/userinfo/localllm' is valid for the request path '/api/userinfo/localllm'
2025-09-05 23:30:50.522 +03:00 [DBG] Endpoint 'HTTP: GET api/userinfo/{id}' with route pattern 'api/userinfo/{id}' is valid for the request path '/api/userinfo/localllm'
2025-09-05 23:30:50.523 +03:00 [DBG] Request matched endpoint 'HTTP: GET api/userinfo/localllm'
2025-09-05 23:30:50.526 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/userinfo/localllm'.
2025-09-05 23:30:50.527 +03:00 [DBG] Connection id "0HNFCNCADM98D" completed keep alive response.
2025-09-05 23:30:50.528 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/api/userinfo/localllm - 307 0 null 12.978ms
2025-09-05 23:30:50.529 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7202/api/userinfo/localllm - null null
2025-09-05 23:30:50.532 +03:00 [DBG] 2 candidate(s) found for the request path '/api/userinfo/localllm'
2025-09-05 23:30:50.533 +03:00 [DBG] Endpoint 'HTTP: GET api/userinfo/localllm' with route pattern 'api/userinfo/localllm' is valid for the request path '/api/userinfo/localllm'
2025-09-05 23:30:50.534 +03:00 [DBG] Endpoint 'HTTP: GET api/userinfo/{id}' with route pattern 'api/userinfo/{id}' is valid for the request path '/api/userinfo/localllm'
2025-09-05 23:30:50.536 +03:00 [DBG] Request matched endpoint 'HTTP: GET api/userinfo/localllm'
2025-09-05 23:30:50.537 +03:00 [INF] Executing endpoint 'HTTP: GET api/userinfo/localllm'
2025-09-05 23:30:50.541 +03:00 [INF] Executed endpoint 'HTTP: GET api/userinfo/localllm'
2025-09-05 23:30:50.543 +03:00 [DBG] Connection id "0HNFCNCADM98F" completed keep alive response.
2025-09-05 23:30:50.544 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7202/api/userinfo/localllm - 200 null application/json; charset=utf-8 14.4848ms
