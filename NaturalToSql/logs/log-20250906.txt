2025-09-06 04:05:46.540 +03:00 [INF] This is a test log to file!
2025-09-06 04:05:47.466 +03:00 [INF] Shared Kernal configured successfully.
2025-09-06 04:05:47.482 +03:00 [INF] API configured successfully.
2025-09-06 04:05:47.654 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-06 04:05:47.754 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-06 04:05:48.549 +03:00 [WRN] The foreign key property 'Profile.UserInfoId1' was created in shadow state because a conflicting property with the simple name 'UserInfoId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-09-06 04:05:48.662 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-06 04:05:48.686 +03:00 [INF] Registered 23 endpoints in 1,677 milliseconds.
2025-09-06 04:05:48.692 +03:00 [DBG] 'ContextDB' disposed.
2025-09-06 04:05:48.734 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-06 04:05:48.864 +03:00 [DBG] Creating DbConnection.
2025-09-06 04:05:48.879 +03:00 [DBG] Created DbConnection. (13ms).
2025-09-06 04:05:48.882 +03:00 [DBG] Migrating using database 'main' on server 'schema_cache.db'.
2025-09-06 04:05:48.887 +03:00 [DBG] Creating DbConnection.
2025-09-06 04:05:48.890 +03:00 [DBG] Created DbConnection. (3ms).
2025-09-06 04:05:48.893 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:05:48.923 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:05:48.929 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:05:48.934 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (2ms).
2025-09-06 04:05:48.936 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:05:48.940 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:05:48.943 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-06 04:05:48.948 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-06 04:05:48.955 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (4ms).
2025-09-06 04:05:48.961 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (13ms).
2025-09-06 04:05:48.969 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-06 04:05:49.008 +03:00 [INF] Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-06 04:05:49.012 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-06 04:05:49.013 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-06 04:05:49.014 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-06 04:05:49.016 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-06 01:05:49.0120694+00:00');
SELECT changes();
2025-09-06 04:05:49.025 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-06 01:05:49.0120694+00:00');
SELECT changes();
2025-09-06 04:05:49.111 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-06 04:05:49.117 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-06 04:05:49.121 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-06 04:05:49.122 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-09-06 04:05:49.124 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-09-06 04:05:49.126 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-06 04:05:49.129 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-06 04:05:49.133 +03:00 [DBG] Committing transaction.
2025-09-06 04:05:49.135 +03:00 [DBG] Committed transaction.
2025-09-06 04:05:49.137 +03:00 [DBG] Disposing transaction.
2025-09-06 04:05:49.141 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-06 04:05:49.144 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-06 04:05:49.148 +03:00 [DBG] Creating DbConnection.
2025-09-06 04:05:49.149 +03:00 [DBG] Created DbConnection. (1ms).
2025-09-06 04:05:49.150 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:05:49.152 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:05:49.154 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:05:49.155 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-06 04:05:49.157 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-06 04:05:49.158 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-06 04:05:49.160 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-06 04:05:49.161 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-06 04:05:49.163 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-06 04:05:49.167 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-06 04:05:49.169 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-09-06 04:05:49.170 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-09-06 04:05:49.172 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-06 04:05:49.175 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-06 04:05:49.181 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:05:49.184 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 5ms reading results.
2025-09-06 04:05:49.189 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-06 04:05:49.190 +03:00 [DBG] Committing transaction.
2025-09-06 04:05:49.191 +03:00 [DBG] Committed transaction.
2025-09-06 04:05:49.192 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-06 04:05:49.193 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-06 04:05:49.195 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-06 04:05:49.196 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-06 04:05:49.200 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-06 04:05:49.202 +03:00 [DBG] Disposing transaction.
2025-09-06 04:05:49.203 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:05:49.206 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (3ms).
2025-09-06 04:05:49.208 +03:00 [DBG] 'ContextDB' disposed.
2025-09-06 04:05:49.209 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:05:49.210 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-06 04:05:49.211 +03:00 [INF] Infrastructure configured successfully.
2025-09-06 04:05:49.212 +03:00 [INF] Infrastructure configured successfully.
2025-09-06 04:05:49.248 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-06 04:05:49.283 +03:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-09-06 04:05:49.285 +03:00 [DBG] Hosting starting
2025-09-06 04:05:49.306 +03:00 [DBG] Middleware loaded
2025-09-06 04:05:49.309 +03:00 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16521 B).
2025-09-06 04:05:49.311 +03:00 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-09-06 04:05:49.410 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-06 04:05:49.413 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-06 04:05:49.417 +03:00 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-09-06 04:05:49.465 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert
2025-09-06 04:05:49.526 +03:00 [INF] Now listening on: https://localhost:7202
2025-09-06 04:05:49.527 +03:00 [INF] Now listening on: http://localhost:5000
2025-09-06 04:05:49.528 +03:00 [DBG] Loaded hosting startup assembly NaturalToQuery.Api
2025-09-06 04:05:49.529 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-06 04:05:49.530 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-06 04:05:49.531 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-06 04:05:49.538 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-06 04:05:49.549 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-06 04:05:49.582 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-06 04:05:49.584 +03:00 [INF] Hosting environment: Development
2025-09-06 04:05:49.585 +03:00 [INF] Content root path: C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql
2025-09-06 04:05:49.586 +03:00 [DBG] Hosting started
2025-09-06 04:06:21.720 +03:00 [DBG] Connection id "0HNFCS6BUR5HB" received FIN.
2025-09-06 04:06:21.867 +03:00 [DBG] Connection id "0HNFCS6BUR5HB" accepted.
2025-09-06 04:06:21.876 +03:00 [DBG] Connection id "0HNFCS6BUR5HB" started.
2025-09-06 04:06:21.877 +03:00 [DBG] Connection id "0HNFCS6BUR5HC" accepted.
2025-09-06 04:06:21.878 +03:00 [DBG] Connection id "0HNFCS6BUR5HC" started.
2025-09-06 04:06:21.881 +03:00 [DBG] Connection id "0HNFCS6BUR5HB" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-06 04:06:21.884 +03:00 [DBG] Connection id "0HNFCS6BUR5HB" disconnecting.
2025-09-06 04:06:21.887 +03:00 [DBG] Connection id "0HNFCS6BUR5HB" stopped.
2025-09-06 04:06:21.913 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/setup/profiles - null null
2025-09-06 04:06:21.962 +03:00 [DBG] 1 candidate(s) found for the request path '/api/setup/profiles'
2025-09-06 04:06:21.963 +03:00 [DBG] Request matched endpoint 'HTTP: GET api/setup/profiles'
2025-09-06 04:06:21.997 +03:00 [DBG] Https port '7202' loaded from configuration.
2025-09-06 04:06:22.000 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/setup/profiles'.
2025-09-06 04:06:22.005 +03:00 [DBG] Connection id "0HNFCS6BUR5HC" completed keep alive response.
2025-09-06 04:06:22.008 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/api/setup/profiles - 307 0 null 98.1026ms
2025-09-06 04:06:22.009 +03:00 [DBG] Connection id "0HNFCS6BUR5HD" accepted.
2025-09-06 04:06:22.010 +03:00 [DBG] Connection id "0HNFCS6BUR5HD" received FIN.
2025-09-06 04:06:22.010 +03:00 [DBG] Connection id "0HNFCS6BUR5HE" accepted.
2025-09-06 04:06:22.020 +03:00 [DBG] Connection id "0HNFCS6BUR5HD" started.
2025-09-06 04:06:22.021 +03:00 [DBG] Connection id "0HNFCS6BUR5HE" started.
2025-09-06 04:06:22.022 +03:00 [DBG] Connection id "0HNFCS6BUR5HD" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-06 04:06:22.023 +03:00 [DBG] Connection id "0HNFCS6BUR5HD" disconnecting.
2025-09-06 04:06:22.025 +03:00 [DBG] Connection id "0HNFCS6BUR5HD" stopped.
2025-09-06 04:06:22.095 +03:00 [DBG] Connection 0HNFCS6BUR5HE established using the following protocol: "Tls13"
2025-09-06 04:06:22.099 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7202/api/setup/profiles - null null
2025-09-06 04:06:22.103 +03:00 [DBG] 1 candidate(s) found for the request path '/api/setup/profiles'
2025-09-06 04:06:22.104 +03:00 [DBG] Request matched endpoint 'HTTP: GET api/setup/profiles'
2025-09-06 04:06:22.108 +03:00 [INF] Executing endpoint 'HTTP: GET api/setup/profiles'
2025-09-06 04:06:22.128 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-06 04:06:22.154 +03:00 [INF] Listing all profiles
2025-09-06 04:06:22.192 +03:00 [DBG] Compiling query expression: 
'DbSet<Profile>()
    .Include(e => e.Queries)
    .AsNoTracking()'
2025-09-06 04:06:22.246 +03:00 [DBG] Including navigation: 'Profile.Queries'.
2025-09-06 04:06:22.433 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Profile>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
            1 -> 0
            2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
            3 -> 9
        SELECT p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
        FROM Profiles AS p
        LEFT JOIN Queries AS q ON p.Id == q.ProfileId
        ORDER BY p.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
            1 -> 0
            2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
            3 -> 9
        SELECT p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
        FROM Profiles AS p
        LEFT JOIN Queries AS q ON p.Id == q.ProfileId
        ORDER BY p.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            Profile entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Profile instance1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Profile);
                (object)dataReader.GetGuid(0) != null ? 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                            {
                                return 
                                {
                                    Profile instance;
                                    instance = new Profile();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<CacheFile>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<CreatedUtc>k__BackingField = dataReader.GetFieldValue<DateTimeOffset>(2);
                                    instance.<DatabaseName>k__BackingField = dataReader.GetString(3);
                                    instance.<Name>k__BackingField = dataReader.GetString(4);
                                    instance.<Provider>k__BackingField = Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                    instance.<SecretRef>k__BackingField = dataReader.GetString(6);
                                    instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid?) : (Guid?)dataReader.GetGuid(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: NoTracking, 
                                        structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Profile)
                    }
                    ;
                    return instance1;
                } : 
                {
                    object[] keyValues1;
                    keyValues1 = new object[]{ (object)dataReader.GetGuid(0) };
                    return ShapedQueryCompilingExpressionVisitor.CreateNullKeyValueInNoTrackingQuery(
                        entityType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")], 
                        properties: [LIFTABLE Constant: List<RuntimeProperty> { Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd } | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey().Properties], 
                        keyValues: keyValues1);
                };
                return instance1;
            };
            resultContext.Values = new object[]{ entity };
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Profile, Profile>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Profile)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                navigation: [LIFTABLE Constant: Navigation: Profile.Queries (List<Query>) Collection ToDependent Query Inverse: Profile | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()], 
                trackingQuery: False, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Profile, Query>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
            selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(9) ? default(Guid?) : (Guid?)dataReader.GetGuid(9) }], 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Query entity;
                entity = 
                {
                    MaterializationContext materializationContext2;
                    IEntityType entityType2;
                    Query instance2;
                    materializationContext2 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance2 = default(Query);
                    dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetGuid(9) != null ? 
                    {
                        ISnapshot shadowSnapshot2;
                        shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType2 = [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")];
                        instance2 = switch (entityType2)
                        {
                            case [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]: 
                                {
                                    return 
                                    {
                                        Query instance;
                                        instance = new Query();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                        instance.<ProfileId>k__BackingField = dataReader.IsDBNull(10) ? default(Guid) : dataReader.GetGuid(10);
                                        instance.<ResultJson>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<SqlQuery>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<TimestampUtc>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime) : dataReader.GetDateTime(13);
                                        instance.<UserQuery>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext2.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: NoTracking, 
                                            structuralType: [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Query)
                        }
                        ;
                        return instance2;
                    } : default(void);
                    return instance2;
                };
                return entity;
            }, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Query.Profile (Profile) ToPrincipal Profile Inverse: Queries | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindNavigation("Profile")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()].Add(
                    entity: namelessParameter{11}, 
                    value: namelessParameter{12}, 
                    forMaterialization: True);
                return namelessParameter{12}.<Profile>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: False);
        return IsTrue(resultCoordinator.ResultReady)
         ? (Profile)(resultContext.Values[0]) : default(Profile);
    }, 
    contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-09-06 04:06:22.455 +03:00 [DBG] Creating DbConnection.
2025-09-06 04:06:22.456 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-06 04:06:22.458 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:06:22.460 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:06:22.461 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-06 04:06:22.462 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-06 04:06:22.463 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-06 04:06:22.464 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM "Profiles" AS "p"
LEFT JOIN "Queries" AS "q" ON "p"."Id" = "q"."ProfileId"
ORDER BY "p"."Id"
2025-09-06 04:06:22.467 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM "Profiles" AS "p"
LEFT JOIN "Queries" AS "q" ON "p"."Id" = "q"."ProfileId"
ORDER BY "p"."Id"
2025-09-06 04:06:22.479 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:06:22.480 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 12ms reading results.
2025-09-06 04:06:22.483 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:06:22.484 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-06 04:06:22.486 +03:00 [INF] Fetching connection string for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-06 04:06:22.492 +03:00 [DBG] Compiling query expression: 
'DbSet<Profile>()
    .Include(e => e.Queries)
    .FirstOrDefault(e => e.Id.Equals(__id_0))'
2025-09-06 04:06:22.496 +03:00 [DBG] Including navigation: 'Profile.Queries'.
2025-09-06 04:06:22.520 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Profile>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Profile>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Profile entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Profile instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Profile);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Profile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Profile)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                {
                                    shadowSnapshot1 = (ISnapshot)new Snapshot<Guid?>(dataReader.IsDBNull(8) ? default(Guid?) : (Guid?)dataReader.GetGuid(8));
                                    return 
                                    {
                                        Profile instance;
                                        instance = new Profile();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<CacheFile>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                        instance.<CreatedUtc>k__BackingField = dataReader.GetFieldValue<DateTimeOffset>(2);
                                        instance.<DatabaseName>k__BackingField = dataReader.GetString(3);
                                        instance.<Name>k__BackingField = dataReader.GetString(4);
                                        instance.<Provider>k__BackingField = Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                        instance.<SecretRef>k__BackingField = dataReader.GetString(6);
                                        instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid?) : (Guid?)dataReader.GetGuid(7);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Profile)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Profile, Profile>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Profile)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: Profile.Queries (List<Query>) Collection ToDependent Query Inverse: Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Profile, Query>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(9) ? default(Guid?) : (Guid?)dataReader.GetGuid(9) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Query entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Query instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Query);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Query.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetGuid(9) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Query)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]: 
                                    {
                                        return 
                                        {
                                            Query instance;
                                            instance = new Query();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                            instance.<ProfileId>k__BackingField = dataReader.IsDBNull(10) ? default(Guid) : dataReader.GetGuid(10);
                                            instance.<ResultJson>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                            instance.<SqlQuery>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                            instance.<TimestampUtc>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime) : dataReader.GetDateTime(13);
                                            instance.<UserQuery>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Query)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Query.Profile (Profile) ToPrincipal Profile Inverse: Queries | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindNavigation("Profile")], 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                    return namelessParameter{11}.<Profile>k__BackingField = namelessParameter{10};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Profile)(resultContext.Values[0]) : default(Profile);
        }, 
        contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-06 04:06:22.530 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:06:22.531 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:06:22.532 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-06 04:06:22.532 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-06 04:06:22.535 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-09-06 04:06:22.537 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:06:22.541 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:06:22.561 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-06 04:06:22.585 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:06:22.587 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 43ms reading results.
2025-09-06 04:06:22.589 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:06:22.590 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-06 04:06:22.603 +03:00 [DBG] Fetched secret for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-06 04:06:22.621 +03:00 [INF] Executed endpoint 'HTTP: GET api/setup/profiles'
2025-09-06 04:06:22.623 +03:00 [DBG] Connection id "0HNFCS6BUR5HE" completed keep alive response.
2025-09-06 04:06:22.625 +03:00 [DBG] 'ContextDB' disposed.
2025-09-06 04:06:22.628 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:06:22.629 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-06 04:06:22.632 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7202/api/setup/profiles - 200 null application/json; charset=utf-8 532.5651ms
2025-09-06 04:07:39.743 +03:00 [DBG] Connection id "0HNFCS6BUR5HF" received FIN.
2025-09-06 04:07:39.745 +03:00 [DBG] Connection id "0HNFCS6BUR5HF" accepted.
2025-09-06 04:07:39.751 +03:00 [DBG] Connection id "0HNFCS6BUR5HF" started.
2025-09-06 04:07:39.751 +03:00 [DBG] Connection id "0HNFCS6BUR5HG" accepted.
2025-09-06 04:07:39.757 +03:00 [DBG] Connection id "0HNFCS6BUR5HF" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-06 04:07:39.758 +03:00 [DBG] Connection id "0HNFCS6BUR5HG" started.
2025-09-06 04:07:39.759 +03:00 [DBG] Connection id "0HNFCS6BUR5HF" disconnecting.
2025-09-06 04:07:39.760 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - application/json 105
2025-09-06 04:07:39.760 +03:00 [DBG] Connection id "0HNFCS6BUR5HF" stopped.
2025-09-06 04:07:39.762 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:07:39.764 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/execute' with route pattern 'api/query/{profileId}/execute' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:07:39.766 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:07:39.767 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'.
2025-09-06 04:07:39.768 +03:00 [DBG] Connection id "0HNFCS6BUR5HG" completed keep alive response.
2025-09-06 04:07:39.768 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - 307 0 null 8.3434ms
2025-09-06 04:07:39.770 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - application/json 105
2025-09-06 04:07:39.771 +03:00 [DBG] Connection id "0HNFCS6BUR5HG", Request id "0HNFCS6BUR5HG:00000001": started reading request body.
2025-09-06 04:07:39.773 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:07:39.774 +03:00 [DBG] Connection id "0HNFCS6BUR5HG", Request id "0HNFCS6BUR5HG:00000001": done reading request body.
2025-09-06 04:07:39.774 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/execute' with route pattern 'api/query/{profileId}/execute' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:07:39.777 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:07:39.778 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:07:39.781 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-06 04:07:39.806 +03:00 [DBG] Connection id "0HNFCS6BUR5HE", Request id "0HNFCS6BUR5HE:00000002": started reading request body.
2025-09-06 04:07:39.808 +03:00 [DBG] Connection id "0HNFCS6BUR5HE", Request id "0HNFCS6BUR5HE:00000002": done reading request body.
2025-09-06 04:07:40.023 +03:00 [INF] Executed endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:07:40.025 +03:00 [DBG] Connection id "0HNFCS6BUR5HE" completed keep alive response.
2025-09-06 04:07:40.026 +03:00 [DBG] 'ContextDB' disposed.
2025-09-06 04:07:40.027 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - 400 null application/problem+json; charset=utf-8 256.219ms
2025-09-06 04:07:49.244 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - application/json 105
2025-09-06 04:07:49.248 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:07:49.249 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/execute' with route pattern 'api/query/{profileId}/execute' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:07:49.250 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:07:49.251 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'.
2025-09-06 04:07:49.252 +03:00 [DBG] Connection id "0HNFCS6BUR5HG" completed keep alive response.
2025-09-06 04:07:49.253 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - 307 0 null 8.5627ms
2025-09-06 04:07:49.254 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - application/json 105
2025-09-06 04:07:49.256 +03:00 [DBG] Connection id "0HNFCS6BUR5HG", Request id "0HNFCS6BUR5HG:00000002": started reading request body.
2025-09-06 04:07:49.257 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:07:49.258 +03:00 [DBG] Connection id "0HNFCS6BUR5HG", Request id "0HNFCS6BUR5HG:00000002": done reading request body.
2025-09-06 04:07:49.259 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/execute' with route pattern 'api/query/{profileId}/execute' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:07:49.261 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:07:49.262 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:07:49.263 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-06 04:07:49.265 +03:00 [DBG] Connection id "0HNFCS6BUR5HE", Request id "0HNFCS6BUR5HE:00000003": started reading request body.
2025-09-06 04:07:49.266 +03:00 [DBG] Connection id "0HNFCS6BUR5HE", Request id "0HNFCS6BUR5HE:00000003": done reading request body.
2025-09-06 04:07:49.286 +03:00 [DBG] Creating DbConnection.
2025-09-06 04:07:49.287 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-06 04:07:49.288 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:07:49.289 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:07:49.290 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-06 04:07:49.291 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-06 04:07:49.292 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-06 04:07:49.293 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:07:49.294 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:07:49.296 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-06 04:07:49.297 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:07:49.298 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 2ms reading results.
2025-09-06 04:07:49.299 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:07:49.300 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-06 04:07:49.307 +03:00 [INF] Fetching connection string for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-06 04:07:49.308 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:07:49.309 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:07:49.310 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-06 04:07:49.311 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-06 04:07:49.312 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-06 04:07:49.313 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:07:49.315 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:07:49.317 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:07:49.318 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 1ms reading results.
2025-09-06 04:07:49.319 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:07:49.320 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-06 04:07:49.322 +03:00 [DBG] Fetched secret for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-06 04:07:49.373 +03:00 [INF] Executing SQL for Profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08", Mode="ReadOnly"
2025-09-06 04:07:49.383 +03:00 [INF] Executing SQL on DESKTOP-QCK8UI5\SQLEXPRESS/ProductInventory (Mode="ReadOnly")
2025-09-06 04:07:49.385 +03:00 [DBG] SQL: Select * from categories
2025-09-06 04:07:49.388 +03:00 [INF] Creating connection (Server=DESKTOP-QCK8UI5\SQLEXPRESS, Database=ProductInventory)
2025-09-06 04:07:49.655 +03:00 [DBG] Connection opened to DESKTOP-QCK8UI5\SQLEXPRESS
2025-09-06 04:07:49.697 +03:00 [INF] Query execution finished in 309 ms, returned 16 rows
2025-09-06 04:07:49.705 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:07:49.707 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:07:49.708 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-06 04:07:49.709 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-06 04:07:49.710 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-06 04:07:49.711 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:07:49.712 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:07:49.714 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:07:49.716 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 1ms reading results.
2025-09-06 04:07:49.717 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:07:49.718 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-06 04:07:49.766 +03:00 [DBG] The navigation 'Query.Profile' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-06 04:07:49.772 +03:00 [DBG] Context 'ContextDB' started tracking 'Query' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-06 04:07:49.777 +03:00 [DBG] DetectChanges starting for 'ContextDB'.
2025-09-06 04:07:49.800 +03:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'Profile.Queries'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-06 04:07:49.805 +03:00 [DBG] DetectChanges completed for 'ContextDB'.
2025-09-06 04:07:49.809 +03:00 [DBG] SaveChanges starting for 'ContextDB'.
2025-09-06 04:07:49.811 +03:00 [DBG] DetectChanges starting for 'ContextDB'.
2025-09-06 04:07:49.812 +03:00 [DBG] DetectChanges completed for 'ContextDB'.
2025-09-06 04:07:49.850 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:07:49.853 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:07:49.855 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-06 04:07:49.856 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-06 04:07:49.857 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-06 04:07:49.857 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (Size = 1552), @p3='?' (Size = 24), @p4='?' (DbType = DateTime), @p5='?' (Size = 4)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Queries" ("Id", "ProfileId", "ResultJson", "SqlQuery", "TimestampUtc", "UserQuery")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2025-09-06 04:07:49.862 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (Size = 1552), @p3='?' (Size = 24), @p4='?' (DbType = DateTime), @p5='?' (Size = 4)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Queries" ("Id", "ProfileId", "ResultJson", "SqlQuery", "TimestampUtc", "UserQuery")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2025-09-06 04:07:49.866 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:07:49.867 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 2ms reading results.
2025-09-06 04:07:49.868 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:07:49.869 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-06 04:07:49.875 +03:00 [DBG] An entity of type 'Query' tracked by 'ContextDB' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-06 04:07:49.878 +03:00 [DBG] SaveChanges completed for 'ContextDB' with 1 entities written to the database.
2025-09-06 04:07:49.884 +03:00 [INF] ProfileSettingsChangedEvent triggered: {"DateOccurred":"2025-09-06T01:07:49.7338488Z","$type":"QueryAddedEvent"}
2025-09-06 04:07:49.887 +03:00 [INF] Saved query to DB for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-06 04:07:49.891 +03:00 [INF] Executed endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:07:49.893 +03:00 [DBG] Connection id "0HNFCS6BUR5HE" completed keep alive response.
2025-09-06 04:07:49.895 +03:00 [DBG] 'ContextDB' disposed.
2025-09-06 04:07:49.896 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:07:49.897 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-06 04:07:49.898 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - 200 null application/json; charset=utf-8 644.8705ms
2025-09-06 04:08:09.300 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - application/json 105
2025-09-06 04:08:09.302 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:08:09.303 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/execute' with route pattern 'api/query/{profileId}/execute' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:08:09.304 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:08:09.305 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'.
2025-09-06 04:08:09.306 +03:00 [DBG] Connection id "0HNFCS6BUR5HG" completed keep alive response.
2025-09-06 04:08:09.307 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - 307 0 null 6.3419ms
2025-09-06 04:08:09.307 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - application/json 105
2025-09-06 04:08:09.309 +03:00 [DBG] Connection id "0HNFCS6BUR5HG", Request id "0HNFCS6BUR5HG:00000003": started reading request body.
2025-09-06 04:08:09.311 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:08:09.312 +03:00 [DBG] Connection id "0HNFCS6BUR5HG", Request id "0HNFCS6BUR5HG:00000003": done reading request body.
2025-09-06 04:08:09.313 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/execute' with route pattern 'api/query/{profileId}/execute' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:08:09.315 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:08:09.315 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:08:09.317 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-06 04:08:09.318 +03:00 [DBG] Connection id "0HNFCS6BUR5HE", Request id "0HNFCS6BUR5HE:00000004": started reading request body.
2025-09-06 04:08:09.319 +03:00 [DBG] Connection id "0HNFCS6BUR5HE", Request id "0HNFCS6BUR5HE:00000004": done reading request body.
2025-09-06 04:08:09.321 +03:00 [INF] Executed endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:08:09.322 +03:00 [DBG] Connection id "0HNFCS6BUR5HE" completed keep alive response.
2025-09-06 04:08:09.323 +03:00 [DBG] 'ContextDB' disposed.
2025-09-06 04:08:09.324 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - 200 null application/json; charset=utf-8 16.6765ms
2025-09-06 04:08:14.863 +03:00 [INF] This is a test log to file!
2025-09-06 04:08:15.219 +03:00 [INF] Shared Kernal configured successfully.
2025-09-06 04:08:15.226 +03:00 [INF] API configured successfully.
2025-09-06 04:08:15.333 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-06 04:08:15.417 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-06 04:08:16.110 +03:00 [WRN] The foreign key property 'Profile.UserInfoId1' was created in shadow state because a conflicting property with the simple name 'UserInfoId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-09-06 04:08:16.257 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-06 04:08:16.287 +03:00 [INF] Registered 23 endpoints in 1,258 milliseconds.
2025-09-06 04:08:16.295 +03:00 [DBG] 'ContextDB' disposed.
2025-09-06 04:08:16.358 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-06 04:08:16.504 +03:00 [DBG] Creating DbConnection.
2025-09-06 04:08:16.527 +03:00 [DBG] Created DbConnection. (21ms).
2025-09-06 04:08:16.530 +03:00 [DBG] Migrating using database 'main' on server 'schema_cache.db'.
2025-09-06 04:08:16.537 +03:00 [DBG] Creating DbConnection.
2025-09-06 04:08:16.540 +03:00 [DBG] Created DbConnection. (3ms).
2025-09-06 04:08:16.542 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:08:16.552 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:08:16.556 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:08:16.560 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-06 04:08:16.562 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:08:16.564 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:08:16.566 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-06 04:08:16.571 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-06 04:08:16.587 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (13ms).
2025-09-06 04:08:16.589 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (18ms).
2025-09-06 04:08:16.614 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-06 04:08:16.650 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-06 04:08:16.658 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-06 04:08:16.659 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-06 04:08:16.660 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-06 04:08:16.660 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-06 01:08:16.6579589+00:00');
SELECT changes();
2025-09-06 04:08:16.665 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-06 01:08:16.6579589+00:00');
SELECT changes();
2025-09-06 04:08:16.716 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-06 04:08:16.719 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-06 04:08:16.721 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-06 04:08:16.722 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-09-06 04:08:16.724 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-09-06 04:08:16.726 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-06 04:08:16.728 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-06 04:08:16.732 +03:00 [DBG] Committing transaction.
2025-09-06 04:08:16.734 +03:00 [DBG] Committed transaction.
2025-09-06 04:08:16.735 +03:00 [DBG] Disposing transaction.
2025-09-06 04:08:16.738 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-06 04:08:16.740 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-06 04:08:16.742 +03:00 [DBG] Creating DbConnection.
2025-09-06 04:08:16.743 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-06 04:08:16.744 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:08:16.746 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:08:16.747 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:08:16.748 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-06 04:08:16.750 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-06 04:08:16.751 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-06 04:08:16.753 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-06 04:08:16.754 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-06 04:08:16.757 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-06 04:08:16.760 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-06 04:08:16.760 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-06 04:08:16.762 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-06 04:08:16.764 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-06 04:08:16.766 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-06 04:08:16.771 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:08:16.776 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 5ms reading results.
2025-09-06 04:08:16.781 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-06 04:08:16.782 +03:00 [DBG] Committing transaction.
2025-09-06 04:08:16.783 +03:00 [DBG] Committed transaction.
2025-09-06 04:08:16.785 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-06 04:08:16.786 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-06 04:08:16.787 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-06 04:08:16.789 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-06 04:08:16.797 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-06 04:08:16.798 +03:00 [DBG] Disposing transaction.
2025-09-06 04:08:16.799 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:08:16.801 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (2ms).
2025-09-06 04:08:16.803 +03:00 [DBG] 'ContextDB' disposed.
2025-09-06 04:08:16.803 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:08:16.804 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-06 04:08:16.805 +03:00 [INF] Infrastructure configured successfully.
2025-09-06 04:08:16.806 +03:00 [INF] Infrastructure configured successfully.
2025-09-06 04:08:16.827 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-06 04:08:16.853 +03:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-09-06 04:08:16.855 +03:00 [DBG] Hosting starting
2025-09-06 04:08:16.867 +03:00 [DBG] Middleware loaded
2025-09-06 04:08:16.869 +03:00 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16521 B).
2025-09-06 04:08:16.871 +03:00 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-09-06 04:08:16.942 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-06 04:08:16.944 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-06 04:08:16.947 +03:00 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-09-06 04:08:16.984 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert
2025-09-06 04:08:17.036 +03:00 [INF] Now listening on: https://localhost:7202
2025-09-06 04:08:17.037 +03:00 [INF] Now listening on: http://localhost:5000
2025-09-06 04:08:17.038 +03:00 [DBG] Loaded hosting startup assembly NaturalToQuery.Api
2025-09-06 04:08:17.038 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-06 04:08:17.039 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-06 04:08:17.040 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-06 04:08:17.047 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-06 04:08:17.057 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-06 04:08:17.086 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-06 04:08:17.087 +03:00 [INF] Hosting environment: Development
2025-09-06 04:08:17.088 +03:00 [INF] Content root path: C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql
2025-09-06 04:08:17.090 +03:00 [DBG] Hosting started
2025-09-06 04:08:18.317 +03:00 [DBG] Connection id "0HNFCS7EMPNTK" received FIN.
2025-09-06 04:08:18.324 +03:00 [DBG] Connection id "0HNFCS7EMPNTK" accepted.
2025-09-06 04:08:18.326 +03:00 [DBG] Connection id "0HNFCS7EMPNTK" started.
2025-09-06 04:08:18.328 +03:00 [DBG] Connection id "0HNFCS7EMPNTL" accepted.
2025-09-06 04:08:18.334 +03:00 [DBG] Connection id "0HNFCS7EMPNTK" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-06 04:08:18.342 +03:00 [DBG] Connection id "0HNFCS7EMPNTL" started.
2025-09-06 04:08:18.345 +03:00 [DBG] Connection id "0HNFCS7EMPNTK" disconnecting.
2025-09-06 04:08:18.348 +03:00 [DBG] Connection id "0HNFCS7EMPNTK" stopped.
2025-09-06 04:08:18.366 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - application/json 105
2025-09-06 04:08:18.439 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:08:18.445 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/execute' with route pattern 'api/query/{profileId}/execute' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:08:18.447 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:08:18.476 +03:00 [DBG] Https port '7202' loaded from configuration.
2025-09-06 04:08:18.480 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'.
2025-09-06 04:08:18.483 +03:00 [DBG] Connection id "0HNFCS7EMPNTL" completed keep alive response.
2025-09-06 04:08:18.486 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - 307 0 null 124.8289ms
2025-09-06 04:08:18.487 +03:00 [DBG] Connection id "0HNFCS7EMPNTN" accepted.
2025-09-06 04:08:18.486 +03:00 [DBG] Connection id "0HNFCS7EMPNTM" accepted.
2025-09-06 04:08:18.507 +03:00 [DBG] Connection id "0HNFCS7EMPNTM" received FIN.
2025-09-06 04:08:18.513 +03:00 [DBG] Connection id "0HNFCS7EMPNTN" started.
2025-09-06 04:08:18.513 +03:00 [DBG] Connection id "0HNFCS7EMPNTL", Request id "0HNFCS7EMPNTL:00000001": started reading request body.
2025-09-06 04:08:18.514 +03:00 [DBG] Connection id "0HNFCS7EMPNTM" started.
2025-09-06 04:08:18.518 +03:00 [DBG] Connection id "0HNFCS7EMPNTL", Request id "0HNFCS7EMPNTL:00000001": done reading request body.
2025-09-06 04:08:18.519 +03:00 [DBG] Connection id "0HNFCS7EMPNTM" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-06 04:08:18.522 +03:00 [DBG] Connection id "0HNFCS7EMPNTM" disconnecting.
2025-09-06 04:08:18.523 +03:00 [DBG] Connection id "0HNFCS7EMPNTM" stopped.
2025-09-06 04:08:18.582 +03:00 [DBG] Connection 0HNFCS7EMPNTN established using the following protocol: "Tls13"
2025-09-06 04:08:18.586 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - application/json 105
2025-09-06 04:08:18.591 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:08:18.592 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/execute' with route pattern 'api/query/{profileId}/execute' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:08:18.594 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:08:18.598 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:08:18.611 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-06 04:08:18.654 +03:00 [DBG] Connection id "0HNFCS7EMPNTN", Request id "0HNFCS7EMPNTN:00000001": started reading request body.
2025-09-06 04:08:18.656 +03:00 [DBG] Connection id "0HNFCS7EMPNTN", Request id "0HNFCS7EMPNTN:00000001": done reading request body.
2025-09-06 04:08:18.732 +03:00 [DBG] Compiling query expression: 
'DbSet<Profile>()
    .Include(e => e.Queries)
    .FirstOrDefault(e => e.Id.Equals(__id_0))'
2025-09-06 04:08:18.788 +03:00 [DBG] Including navigation: 'Profile.Queries'.
2025-09-06 04:08:19.072 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Profile>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Profile>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Profile entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Profile instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Profile);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Profile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Profile)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                {
                                    shadowSnapshot1 = (ISnapshot)new Snapshot<Guid?>(dataReader.IsDBNull(8) ? default(Guid?) : (Guid?)dataReader.GetGuid(8));
                                    return 
                                    {
                                        Profile instance;
                                        instance = new Profile();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<CacheFile>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                        instance.<CreatedUtc>k__BackingField = dataReader.GetFieldValue<DateTimeOffset>(2);
                                        instance.<DatabaseName>k__BackingField = dataReader.GetString(3);
                                        instance.<Name>k__BackingField = dataReader.GetString(4);
                                        instance.<Provider>k__BackingField = Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                        instance.<SecretRef>k__BackingField = dataReader.GetString(6);
                                        instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid?) : (Guid?)dataReader.GetGuid(7);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Profile)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Profile, Profile>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Profile)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: Profile.Queries (List<Query>) Collection ToDependent Query Inverse: Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Profile, Query>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(9) ? default(Guid?) : (Guid?)dataReader.GetGuid(9) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Query entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Query instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Query);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Query.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetGuid(9) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Query)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]: 
                                    {
                                        return 
                                        {
                                            Query instance;
                                            instance = new Query();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                            instance.<ProfileId>k__BackingField = dataReader.IsDBNull(10) ? default(Guid) : dataReader.GetGuid(10);
                                            instance.<ResultJson>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                            instance.<SqlQuery>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                            instance.<TimestampUtc>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime) : dataReader.GetDateTime(13);
                                            instance.<UserQuery>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Query)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Query.Profile (Profile) ToPrincipal Profile Inverse: Queries | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindNavigation("Profile")], 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                    return namelessParameter{11}.<Profile>k__BackingField = namelessParameter{10};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Profile)(resultContext.Values[0]) : default(Profile);
        }, 
        contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-06 04:08:19.104 +03:00 [DBG] Creating DbConnection.
2025-09-06 04:08:19.105 +03:00 [DBG] Created DbConnection. (1ms).
2025-09-06 04:08:19.108 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:08:19.110 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:08:19.111 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-06 04:08:19.112 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-06 04:08:19.116 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-09-06 04:08:19.118 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:08:19.127 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:08:19.155 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-06 04:08:19.194 +03:00 [DBG] Context 'ContextDB' started tracking 'Query' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-06 04:08:19.204 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:08:19.206 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 77ms reading results.
2025-09-06 04:08:19.209 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:08:19.210 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-06 04:08:19.219 +03:00 [INF] Fetching connection string for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-06 04:08:19.222 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:08:19.224 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:08:19.225 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-06 04:08:19.227 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-09-06 04:08:19.228 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-06 04:08:19.230 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:08:19.232 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:08:19.234 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:08:19.236 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 2ms reading results.
2025-09-06 04:08:19.238 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:08:19.239 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-06 04:08:19.249 +03:00 [DBG] Fetched secret for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-06 04:08:19.260 +03:00 [INF] Executing SQL for Profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08", Mode="ReadOnly"
2025-09-06 04:08:19.270 +03:00 [INF] Executing SQL on DESKTOP-QCK8UI5\SQLEXPRESS/ProductInventory (Mode="ReadOnly")
2025-09-06 04:08:19.272 +03:00 [DBG] SQL: Select * from categories
2025-09-06 04:08:19.274 +03:00 [INF] Creating connection (Server=DESKTOP-QCK8UI5\SQLEXPRESS, Database=ProductInventory)
2025-09-06 04:08:19.477 +03:00 [DBG] Connection opened to DESKTOP-QCK8UI5\SQLEXPRESS
2025-09-06 04:09:52.646 +03:00 [INF] This is a test log to file!
2025-09-06 04:09:52.955 +03:00 [INF] Shared Kernal configured successfully.
2025-09-06 04:09:52.962 +03:00 [INF] API configured successfully.
2025-09-06 04:09:53.045 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-06 04:09:53.116 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-06 04:09:53.747 +03:00 [WRN] The foreign key property 'Profile.UserInfoId1' was created in shadow state because a conflicting property with the simple name 'UserInfoId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-09-06 04:09:53.825 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-06 04:09:53.859 +03:00 [INF] Registered 23 endpoints in 1,090 milliseconds.
2025-09-06 04:09:53.866 +03:00 [DBG] 'ContextDB' disposed.
2025-09-06 04:09:53.909 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-06 04:09:53.991 +03:00 [DBG] Creating DbConnection.
2025-09-06 04:09:54.003 +03:00 [DBG] Created DbConnection. (10ms).
2025-09-06 04:09:54.006 +03:00 [DBG] Migrating using database 'main' on server 'schema_cache.db'.
2025-09-06 04:09:54.010 +03:00 [DBG] Creating DbConnection.
2025-09-06 04:09:54.013 +03:00 [DBG] Created DbConnection. (2ms).
2025-09-06 04:09:54.014 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:09:54.022 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:09:54.025 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:09:54.028 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-06 04:09:54.030 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:09:54.032 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:09:54.035 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-06 04:09:54.038 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-06 04:09:54.043 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (2ms).
2025-09-06 04:09:54.045 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (6ms).
2025-09-06 04:09:54.050 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-06 04:09:54.068 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-06 04:09:54.071 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-06 04:09:54.073 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-06 04:09:54.074 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-06 04:09:54.075 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-06 01:09:54.0717012+00:00');
SELECT changes();
2025-09-06 04:09:54.083 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-06 01:09:54.0717012+00:00');
SELECT changes();
2025-09-06 04:09:54.123 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-06 04:09:54.127 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-06 04:09:54.130 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-06 04:09:54.131 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-09-06 04:09:54.133 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-09-06 04:09:54.134 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-06 04:09:54.137 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-06 04:09:54.140 +03:00 [DBG] Committing transaction.
2025-09-06 04:09:54.141 +03:00 [DBG] Committed transaction.
2025-09-06 04:09:54.143 +03:00 [DBG] Disposing transaction.
2025-09-06 04:09:54.145 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-06 04:09:54.146 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-06 04:09:54.148 +03:00 [DBG] Creating DbConnection.
2025-09-06 04:09:54.149 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-06 04:09:54.150 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:09:54.153 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:09:54.154 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:09:54.155 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-06 04:09:54.157 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-06 04:09:54.157 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-06 04:09:54.158 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-06 04:09:54.160 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-06 04:09:54.161 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-06 04:09:54.164 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-06 04:09:54.165 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-09-06 04:09:54.166 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-06 04:09:54.168 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-06 04:09:54.182 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-06 04:09:54.188 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:09:54.204 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 4ms reading results.
2025-09-06 04:09:54.211 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-06 04:09:54.214 +03:00 [DBG] Committing transaction.
2025-09-06 04:09:54.215 +03:00 [DBG] Committed transaction.
2025-09-06 04:09:54.223 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-06 04:09:54.231 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (8ms).
2025-09-06 04:09:54.232 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (9ms).
2025-09-06 04:09:54.234 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-06 04:09:54.237 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-06 04:09:54.239 +03:00 [DBG] Disposing transaction.
2025-09-06 04:09:54.241 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:09:54.245 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (4ms).
2025-09-06 04:09:54.248 +03:00 [DBG] 'ContextDB' disposed.
2025-09-06 04:09:54.249 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:09:54.250 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-06 04:09:54.252 +03:00 [INF] Infrastructure configured successfully.
2025-09-06 04:09:54.253 +03:00 [INF] Infrastructure configured successfully.
2025-09-06 04:09:54.287 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-06 04:09:54.322 +03:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-09-06 04:09:54.324 +03:00 [DBG] Hosting starting
2025-09-06 04:09:54.346 +03:00 [DBG] Middleware loaded
2025-09-06 04:09:54.349 +03:00 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16521 B).
2025-09-06 04:09:54.351 +03:00 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-09-06 04:09:54.462 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-06 04:09:54.464 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-06 04:09:54.467 +03:00 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-09-06 04:09:54.528 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert
2025-09-06 04:09:54.596 +03:00 [INF] Now listening on: https://localhost:7202
2025-09-06 04:09:54.597 +03:00 [INF] Now listening on: http://localhost:5000
2025-09-06 04:09:54.598 +03:00 [DBG] Loaded hosting startup assembly NaturalToQuery.Api
2025-09-06 04:09:54.599 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-06 04:09:54.599 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-06 04:09:54.600 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-06 04:09:54.606 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-06 04:09:54.616 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-06 04:09:54.648 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-06 04:09:54.648 +03:00 [INF] Hosting environment: Development
2025-09-06 04:09:54.649 +03:00 [INF] Content root path: C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql
2025-09-06 04:09:54.650 +03:00 [DBG] Hosting started
2025-09-06 04:09:55.426 +03:00 [DBG] Connection id "0HNFCS8BKSVR3" received FIN.
2025-09-06 04:09:55.433 +03:00 [DBG] Connection id "0HNFCS8BKSVR3" accepted.
2025-09-06 04:09:55.435 +03:00 [DBG] Connection id "0HNFCS8BKSVR3" started.
2025-09-06 04:09:55.437 +03:00 [DBG] Connection id "0HNFCS8BKSVR4" accepted.
2025-09-06 04:09:55.439 +03:00 [DBG] Connection id "0HNFCS8BKSVR4" started.
2025-09-06 04:09:55.443 +03:00 [DBG] Connection id "0HNFCS8BKSVR3" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-06 04:09:55.448 +03:00 [DBG] Connection id "0HNFCS8BKSVR3" disconnecting.
2025-09-06 04:09:55.451 +03:00 [DBG] Connection id "0HNFCS8BKSVR3" stopped.
2025-09-06 04:09:55.469 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - application/json 105
2025-09-06 04:09:55.519 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:09:55.521 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/execute' with route pattern 'api/query/{profileId}/execute' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:09:55.523 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:09:55.555 +03:00 [DBG] Https port '7202' loaded from configuration.
2025-09-06 04:09:55.560 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'.
2025-09-06 04:09:55.562 +03:00 [DBG] Connection id "0HNFCS8BKSVR4" completed keep alive response.
2025-09-06 04:09:55.565 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - 307 0 null 100.8749ms
2025-09-06 04:09:55.566 +03:00 [DBG] Connection id "0HNFCS8BKSVR5" received FIN.
2025-09-06 04:09:55.566 +03:00 [DBG] Connection id "0HNFCS8BKSVR6" accepted.
2025-09-06 04:09:55.565 +03:00 [DBG] Connection id "0HNFCS8BKSVR5" accepted.
2025-09-06 04:09:55.577 +03:00 [DBG] Connection id "0HNFCS8BKSVR4", Request id "0HNFCS8BKSVR4:00000001": started reading request body.
2025-09-06 04:09:55.577 +03:00 [DBG] Connection id "0HNFCS8BKSVR6" started.
2025-09-06 04:09:55.581 +03:00 [DBG] Connection id "0HNFCS8BKSVR5" started.
2025-09-06 04:09:55.583 +03:00 [DBG] Connection id "0HNFCS8BKSVR4", Request id "0HNFCS8BKSVR4:00000001": done reading request body.
2025-09-06 04:09:55.585 +03:00 [DBG] Connection id "0HNFCS8BKSVR5" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-06 04:09:55.588 +03:00 [DBG] Connection id "0HNFCS8BKSVR5" disconnecting.
2025-09-06 04:09:55.590 +03:00 [DBG] Connection id "0HNFCS8BKSVR5" stopped.
2025-09-06 04:09:55.624 +03:00 [DBG] Connection 0HNFCS8BKSVR6 established using the following protocol: "Tls13"
2025-09-06 04:09:55.628 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - application/json 105
2025-09-06 04:09:55.633 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:09:55.634 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/execute' with route pattern 'api/query/{profileId}/execute' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:09:55.636 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:09:55.640 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:09:55.655 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-06 04:09:55.725 +03:00 [DBG] Connection id "0HNFCS8BKSVR6", Request id "0HNFCS8BKSVR6:00000001": started reading request body.
2025-09-06 04:09:55.728 +03:00 [DBG] Connection id "0HNFCS8BKSVR6", Request id "0HNFCS8BKSVR6:00000001": done reading request body.
2025-09-06 04:09:55.809 +03:00 [DBG] Compiling query expression: 
'DbSet<Profile>()
    .Include(e => e.Queries)
    .FirstOrDefault(e => e.Id.Equals(__id_0))'
2025-09-06 04:09:55.859 +03:00 [DBG] Including navigation: 'Profile.Queries'.
2025-09-06 04:09:56.093 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Profile>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Profile>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Profile entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Profile instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Profile);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Profile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Profile)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                {
                                    shadowSnapshot1 = (ISnapshot)new Snapshot<Guid?>(dataReader.IsDBNull(8) ? default(Guid?) : (Guid?)dataReader.GetGuid(8));
                                    return 
                                    {
                                        Profile instance;
                                        instance = new Profile();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<CacheFile>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                        instance.<CreatedUtc>k__BackingField = dataReader.GetFieldValue<DateTimeOffset>(2);
                                        instance.<DatabaseName>k__BackingField = dataReader.GetString(3);
                                        instance.<Name>k__BackingField = dataReader.GetString(4);
                                        instance.<Provider>k__BackingField = Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                        instance.<SecretRef>k__BackingField = dataReader.GetString(6);
                                        instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid?) : (Guid?)dataReader.GetGuid(7);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Profile)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Profile, Profile>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Profile)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: Profile.Queries (List<Query>) Collection ToDependent Query Inverse: Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Profile, Query>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(9) ? default(Guid?) : (Guid?)dataReader.GetGuid(9) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Query entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Query instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Query);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Query.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetGuid(9) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Query)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]: 
                                    {
                                        return 
                                        {
                                            Query instance;
                                            instance = new Query();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                            instance.<ProfileId>k__BackingField = dataReader.IsDBNull(10) ? default(Guid) : dataReader.GetGuid(10);
                                            instance.<ResultJson>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                            instance.<SqlQuery>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                            instance.<TimestampUtc>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime) : dataReader.GetDateTime(13);
                                            instance.<UserQuery>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Query)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Query.Profile (Profile) ToPrincipal Profile Inverse: Queries | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindNavigation("Profile")], 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                    return namelessParameter{11}.<Profile>k__BackingField = namelessParameter{10};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Profile)(resultContext.Values[0]) : default(Profile);
        }, 
        contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-06 04:09:56.130 +03:00 [DBG] Creating DbConnection.
2025-09-06 04:09:56.131 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-06 04:09:56.133 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:09:56.135 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:09:56.136 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-06 04:09:56.140 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-09-06 04:09:56.144 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-09-06 04:09:56.147 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:09:56.154 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:09:56.184 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-06 04:09:56.265 +03:00 [DBG] Context 'ContextDB' started tracking 'Query' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-06 04:09:56.280 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:09:56.282 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 126ms reading results.
2025-09-06 04:09:56.285 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:09:56.288 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (2ms).
2025-09-06 04:09:56.300 +03:00 [INF] Fetching connection string for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-06 04:09:56.304 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:09:56.305 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:09:56.306 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-06 04:09:56.307 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-06 04:09:56.308 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-06 04:09:56.310 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:09:56.312 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:09:56.314 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:09:56.315 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 1ms reading results.
2025-09-06 04:09:56.316 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:09:56.318 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-06 04:09:56.328 +03:00 [DBG] Fetched secret for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-06 04:09:56.340 +03:00 [INF] Executing SQL for Profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08", Mode="ReadOnly"
2025-09-06 04:09:56.352 +03:00 [INF] Executing SQL on DESKTOP-QCK8UI5\SQLEXPRESS/ProductInventory (Mode="ReadOnly")
2025-09-06 04:09:56.354 +03:00 [DBG] SQL: Select * from categories
2025-09-06 04:09:56.357 +03:00 [INF] Creating connection (Server=DESKTOP-QCK8UI5\SQLEXPRESS, Database=ProductInventory)
2025-09-06 04:09:56.570 +03:00 [DBG] Connection opened to DESKTOP-QCK8UI5\SQLEXPRESS
2025-09-06 04:09:56.630 +03:00 [INF] Query execution finished in 274 ms, returned 16 rows
2025-09-06 04:09:56.637 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:09:56.638 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:09:56.639 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-06 04:09:56.640 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-06 04:09:56.641 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-06 04:09:56.642 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:09:56.643 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:09:56.645 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:09:56.646 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 0ms reading results.
2025-09-06 04:09:56.647 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:09:56.648 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-06 04:09:56.663 +03:00 [INF] Query not saved due to profile rules for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08", Query already existed
2025-09-06 04:09:56.671 +03:00 [INF] Executed endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:09:56.674 +03:00 [DBG] Connection id "0HNFCS8BKSVR6" completed keep alive response.
2025-09-06 04:09:56.676 +03:00 [DBG] 'ContextDB' disposed.
2025-09-06 04:09:56.679 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:09:56.680 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-06 04:09:56.682 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - 200 null application/json; charset=utf-8 1054.5163ms
2025-09-06 04:10:26.277 +03:00 [INF] This is a test log to file!
2025-09-06 04:10:26.659 +03:00 [INF] Shared Kernal configured successfully.
2025-09-06 04:10:26.671 +03:00 [INF] API configured successfully.
2025-09-06 04:10:26.769 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-06 04:10:26.844 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-06 04:10:27.419 +03:00 [WRN] The foreign key property 'Profile.UserInfoId1' was created in shadow state because a conflicting property with the simple name 'UserInfoId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-09-06 04:10:27.504 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-06 04:10:27.549 +03:00 [INF] Registered 23 endpoints in 1,075 milliseconds.
2025-09-06 04:10:27.557 +03:00 [DBG] 'ContextDB' disposed.
2025-09-06 04:10:27.598 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-06 04:10:27.720 +03:00 [DBG] Creating DbConnection.
2025-09-06 04:10:27.738 +03:00 [DBG] Created DbConnection. (16ms).
2025-09-06 04:10:27.750 +03:00 [DBG] Migrating using database 'main' on server 'schema_cache.db'.
2025-09-06 04:10:27.754 +03:00 [DBG] Creating DbConnection.
2025-09-06 04:10:27.765 +03:00 [DBG] Created DbConnection. (2ms).
2025-09-06 04:10:27.767 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:10:27.774 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:10:27.789 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:10:27.793 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-06 04:10:27.794 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:10:27.797 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:10:27.799 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-06 04:10:27.804 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-06 04:10:27.809 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (2ms).
2025-09-06 04:10:27.824 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (20ms).
2025-09-06 04:10:27.831 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-06 04:10:27.862 +03:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-09-06 04:10:27.866 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-06 04:10:27.866 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-06 04:10:27.868 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-06 04:10:27.869 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-06 01:10:27.8658131+00:00');
SELECT changes();
2025-09-06 04:10:27.880 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-09-06 01:10:27.8658131+00:00');
SELECT changes();
2025-09-06 04:10:27.943 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-06 04:10:27.956 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-06 04:10:27.958 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-06 04:10:27.960 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-09-06 04:10:27.961 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-09-06 04:10:27.974 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-06 04:10:27.976 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-09-06 04:10:27.979 +03:00 [DBG] Committing transaction.
2025-09-06 04:10:27.981 +03:00 [DBG] Committed transaction.
2025-09-06 04:10:27.995 +03:00 [DBG] Disposing transaction.
2025-09-06 04:10:27.997 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-06 04:10:27.998 +03:00 [DBG] Began transaction with isolation level 'Serializable'.
2025-09-06 04:10:27.999 +03:00 [DBG] Creating DbConnection.
2025-09-06 04:10:28.000 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-06 04:10:28.001 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:10:28.003 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:10:28.004 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:10:28.005 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-06 04:10:28.006 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-06 04:10:28.007 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-06 04:10:28.020 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (14ms).
2025-09-06 04:10:28.021 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-06 04:10:28.023 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-09-06 04:10:28.026 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-06 04:10:28.027 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-09-06 04:10:28.028 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-06 04:10:28.030 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-06 04:10:28.032 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-09-06 04:10:28.036 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:10:28.039 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 3ms reading results.
2025-09-06 04:10:28.053 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-06 04:10:28.054 +03:00 [DBG] Committing transaction.
2025-09-06 04:10:28.055 +03:00 [DBG] Committed transaction.
2025-09-06 04:10:28.056 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-06 04:10:28.057 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-06 04:10:28.058 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-09-06 04:10:28.059 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-06 04:10:28.063 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-09-06 04:10:28.077 +03:00 [DBG] Disposing transaction.
2025-09-06 04:10:28.078 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:10:28.081 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (3ms).
2025-09-06 04:10:28.082 +03:00 [DBG] 'ContextDB' disposed.
2025-09-06 04:10:28.083 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:10:28.084 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-06 04:10:28.085 +03:00 [INF] Infrastructure configured successfully.
2025-09-06 04:10:28.086 +03:00 [INF] Infrastructure configured successfully.
2025-09-06 04:10:28.123 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-06 04:10:28.157 +03:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-09-06 04:10:28.168 +03:00 [DBG] Hosting starting
2025-09-06 04:10:28.184 +03:00 [DBG] Middleware loaded
2025-09-06 04:10:28.190 +03:00 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16521 B).
2025-09-06 04:10:28.192 +03:00 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-09-06 04:10:28.279 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-06 04:10:28.281 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-06 04:10:28.291 +03:00 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-09-06 04:10:28.366 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert
2025-09-06 04:10:28.423 +03:00 [INF] Now listening on: https://localhost:7202
2025-09-06 04:10:28.424 +03:00 [INF] Now listening on: http://localhost:5000
2025-09-06 04:10:28.425 +03:00 [DBG] Loaded hosting startup assembly NaturalToQuery.Api
2025-09-06 04:10:28.426 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-06 04:10:28.426 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-06 04:10:28.427 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-06 04:10:28.432 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-06 04:10:28.441 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-06 04:10:28.484 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-06 04:10:28.485 +03:00 [INF] Hosting environment: Development
2025-09-06 04:10:28.486 +03:00 [INF] Content root path: C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql
2025-09-06 04:10:28.487 +03:00 [DBG] Hosting started
2025-09-06 04:10:28.604 +03:00 [DBG] Connection id "0HNFCS8LHA7RU" received FIN.
2025-09-06 04:10:28.609 +03:00 [DBG] Connection id "0HNFCS8LHA7RU" accepted.
2025-09-06 04:10:28.610 +03:00 [DBG] Connection id "0HNFCS8LHA7RU" started.
2025-09-06 04:10:28.611 +03:00 [DBG] Connection id "0HNFCS8LHA7RV" accepted.
2025-09-06 04:10:28.613 +03:00 [DBG] Connection id "0HNFCS8LHA7RV" started.
2025-09-06 04:10:28.617 +03:00 [DBG] Connection id "0HNFCS8LHA7RU" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-06 04:10:28.619 +03:00 [DBG] Connection id "0HNFCS8LHA7RU" disconnecting.
2025-09-06 04:10:28.622 +03:00 [DBG] Connection id "0HNFCS8LHA7RU" stopped.
2025-09-06 04:10:28.636 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - application/json 105
2025-09-06 04:10:28.669 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:10:28.671 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/execute' with route pattern 'api/query/{profileId}/execute' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:10:28.674 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:10:28.696 +03:00 [DBG] Https port '7202' loaded from configuration.
2025-09-06 04:10:28.698 +03:00 [DBG] Redirecting to 'https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'.
2025-09-06 04:10:28.701 +03:00 [DBG] Connection id "0HNFCS8LHA7RV" completed keep alive response.
2025-09-06 04:10:28.703 +03:00 [DBG] Connection id "0HNFCS8LHA7S0" accepted.
2025-09-06 04:10:28.704 +03:00 [DBG] Connection id "0HNFCS8LHA7S0" received FIN.
2025-09-06 04:10:28.704 +03:00 [DBG] Connection id "0HNFCS8LHA7S1" accepted.
2025-09-06 04:10:28.703 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - 307 0 null 70.3541ms
2025-09-06 04:10:28.716 +03:00 [DBG] Connection id "0HNFCS8LHA7S0" started.
2025-09-06 04:10:28.718 +03:00 [DBG] Connection id "0HNFCS8LHA7S1" started.
2025-09-06 04:10:28.724 +03:00 [DBG] Connection id "0HNFCS8LHA7S0" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-09-06 04:10:28.724 +03:00 [DBG] Connection id "0HNFCS8LHA7RV", Request id "0HNFCS8LHA7RV:00000001": started reading request body.
2025-09-06 04:10:28.734 +03:00 [DBG] Connection id "0HNFCS8LHA7S0" disconnecting.
2025-09-06 04:10:28.735 +03:00 [DBG] Connection id "0HNFCS8LHA7RV", Request id "0HNFCS8LHA7RV:00000001": done reading request body.
2025-09-06 04:10:28.737 +03:00 [DBG] Connection id "0HNFCS8LHA7S0" stopped.
2025-09-06 04:10:28.760 +03:00 [DBG] Connection 0HNFCS8LHA7S1 established using the following protocol: "Tls13"
2025-09-06 04:10:28.763 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - application/json 105
2025-09-06 04:10:28.769 +03:00 [DBG] 1 candidate(s) found for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:10:28.770 +03:00 [DBG] Endpoint 'HTTP: POST api/query/{profileId}/execute' with route pattern 'api/query/{profileId}/execute' is valid for the request path '/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute'
2025-09-06 04:10:28.772 +03:00 [DBG] Request matched endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:10:28.778 +03:00 [INF] Executing endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:10:28.802 +03:00 [DBG] Entity Framework Core 9.0.8 initialized 'ContextDB' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.8' with options: None
2025-09-06 04:10:28.850 +03:00 [DBG] Connection id "0HNFCS8LHA7S1", Request id "0HNFCS8LHA7S1:00000001": started reading request body.
2025-09-06 04:10:28.851 +03:00 [DBG] Connection id "0HNFCS8LHA7S1", Request id "0HNFCS8LHA7S1:00000001": done reading request body.
2025-09-06 04:10:28.924 +03:00 [DBG] Compiling query expression: 
'DbSet<Profile>()
    .Include(e => e.Queries)
    .FirstOrDefault(e => e.Id.Equals(__id_0))'
2025-09-06 04:10:28.957 +03:00 [DBG] Including navigation: 'Profile.Queries'.
2025-09-06 04:10:29.201 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Profile>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Profile>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Profile.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Profile.CacheFile (string) MaxLength(500), 1], [Property: Profile.CreatedUtc (DateTimeOffset) Required, 2], [Property: Profile.DatabaseName (string) Required, 3], [Property: Profile.Name (string) Required MaxLength(200), 4], [Property: Profile.Provider (ProviderType) Required, 5], [Property: Profile.SecretRef (string) Required, 6], [Property: Profile.UserInfoId (Guid?) FK Index, 7], [Property: Profile.UserInfoId1 (no field, Guid?) Shadow FK Index, 8] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Query.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Query.ProfileId (Guid) Required FK Index, 10], [Property: Query.ResultJson (string) Required, 11], [Property: Query.SqlQuery (string) Required, 12], [Property: Query.TimestampUtc (DateTime) Required, 13], [Property: Query.UserQuery (string) Required, 14] }
                3 -> 9
            SELECT p0.Id, p0.CacheFile, p0.CreatedUtc, p0.DatabaseName, p0.Name, p0.Provider, p0.SecretRef, p0.UserInfoId, p0.UserInfoId1, q.Id, q.ProfileId, q.ResultJson, q.SqlQuery, q.TimestampUtc, q.UserQuery
            FROM 
            (
                SELECT TOP(1) p.Id, p.CacheFile, p.CreatedUtc, p.DatabaseName, p.Name, p.Provider, p.SecretRef, p.UserInfoId, p.UserInfoId1
                FROM Profiles AS p
                WHERE p.Id == @__id_0
            ) AS p0
            LEFT JOIN Queries AS q ON p0.Id == q.ProfileId
            ORDER BY p0.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Profile entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Profile instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Profile);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Profile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Profile)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]: 
                                {
                                    shadowSnapshot1 = (ISnapshot)new Snapshot<Guid?>(dataReader.IsDBNull(8) ? default(Guid?) : (Guid?)dataReader.GetGuid(8));
                                    return 
                                    {
                                        Profile instance;
                                        instance = new Profile();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<CacheFile>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                        instance.<CreatedUtc>k__BackingField = dataReader.GetFieldValue<DateTimeOffset>(2);
                                        instance.<DatabaseName>k__BackingField = dataReader.GetString(3);
                                        instance.<Name>k__BackingField = dataReader.GetString(4);
                                        instance.<Provider>k__BackingField = Invoke(((EnumToNumberConverter<ProviderType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Profile.Provider (ProviderType) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindProperty("Provider")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                        instance.<SecretRef>k__BackingField = dataReader.GetString(6);
                                        instance.<UserInfoId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid?) : (Guid?)dataReader.GetGuid(7);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Profile | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Profile)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Profile, Profile>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Profile)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: Profile.Queries (List<Query>) Collection ToDependent Query Inverse: Profile | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Profile, Query>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(9) ? default(Guid?) : (Guid?)dataReader.GetGuid(9) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Query entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Query instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Query);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Query.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetGuid(9) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Query)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]: 
                                    {
                                        return 
                                        {
                                            Query instance;
                                            instance = new Query();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                            instance.<ProfileId>k__BackingField = dataReader.IsDBNull(10) ? default(Guid) : dataReader.GetGuid(10);
                                            instance.<ResultJson>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                            instance.<SqlQuery>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                            instance.<TimestampUtc>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime) : dataReader.GetDateTime(13);
                                            instance.<UserQuery>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Query | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Query)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Query.Profile (Profile) ToPrincipal Profile Inverse: Queries | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Queries.Query").FindNavigation("Profile")], 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Profile, List<Query>, Query> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("NaturalToQuery.Core.Contributers.Entities.Profiles.Profile").FindNavigation("Queries").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                    return namelessParameter{11}.<Profile>k__BackingField = namelessParameter{10};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Profile)(resultContext.Values[0]) : default(Profile);
        }, 
        contextType: NaturalToQuery.Infrastructure.Persistence.ContextDB, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-06 04:10:29.228 +03:00 [DBG] Creating DbConnection.
2025-09-06 04:10:29.229 +03:00 [DBG] Created DbConnection. (1ms).
2025-09-06 04:10:29.231 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:10:29.233 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:10:29.234 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-06 04:10:29.234 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-06 04:10:29.244 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-09-06 04:10:29.247 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:10:29.261 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:10:29.295 +03:00 [DBG] Context 'ContextDB' started tracking 'Profile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-06 04:10:29.351 +03:00 [DBG] Context 'ContextDB' started tracking 'Query' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-06 04:10:29.366 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:10:29.368 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 104ms reading results.
2025-09-06 04:10:29.371 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:10:29.373 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (2ms).
2025-09-06 04:10:29.381 +03:00 [INF] Fetching connection string for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-06 04:10:29.384 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:10:29.385 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:10:29.386 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-06 04:10:29.387 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-06 04:10:29.388 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-06 04:10:29.389 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:10:29.391 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:10:29.393 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:10:29.393 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 0ms reading results.
2025-09-06 04:10:29.395 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:10:29.396 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-06 04:10:29.405 +03:00 [DBG] Fetched secret for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08"
2025-09-06 04:10:29.417 +03:00 [INF] Executing SQL for Profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08", Mode="ReadOnly"
2025-09-06 04:10:29.426 +03:00 [INF] Executing SQL on DESKTOP-QCK8UI5\SQLEXPRESS/ProductInventory (Mode="ReadOnly")
2025-09-06 04:10:29.428 +03:00 [DBG] SQL: Select * from categories
2025-09-06 04:10:29.430 +03:00 [INF] Creating connection (Server=DESKTOP-QCK8UI5\SQLEXPRESS, Database=ProductInventory)
2025-09-06 04:10:29.662 +03:00 [DBG] Connection opened to DESKTOP-QCK8UI5\SQLEXPRESS
2025-09-06 04:10:29.701 +03:00 [INF] Query execution finished in 271 ms, returned 16 rows
2025-09-06 04:10:29.708 +03:00 [DBG] Opening connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:10:29.709 +03:00 [DBG] Opened connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:10:29.710 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-06 04:10:29.711 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-06 04:10:29.712 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-06 04:10:29.713 +03:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:10:29.714 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "p0"."Id", "p0"."CacheFile", "p0"."CreatedUtc", "p0"."DatabaseName", "p0"."Name", "p0"."Provider", "p0"."SecretRef", "p0"."UserInfoId", "p0"."UserInfoId1", "q"."Id", "q"."ProfileId", "q"."ResultJson", "q"."SqlQuery", "q"."TimestampUtc", "q"."UserQuery"
FROM (
    SELECT "p"."Id", "p"."CacheFile", "p"."CreatedUtc", "p"."DatabaseName", "p"."Name", "p"."Provider", "p"."SecretRef", "p"."UserInfoId", "p"."UserInfoId1"
    FROM "Profiles" AS "p"
    WHERE "p"."Id" = @__id_0
    LIMIT 1
) AS "p0"
LEFT JOIN "Queries" AS "q" ON "p0"."Id" = "q"."ProfileId"
ORDER BY "p0"."Id"
2025-09-06 04:10:29.716 +03:00 [DBG] Closing data reader to 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:10:29.717 +03:00 [DBG] A data reader for 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db' is being disposed after spending 1ms reading results.
2025-09-06 04:10:29.718 +03:00 [DBG] Closing connection to database 'main' on server 'C:\Users\Zyad\Documents\NaturalToSql\NaturalToSql\schema_cache.db'.
2025-09-06 04:10:29.719 +03:00 [DBG] Closed connection to database 'main' on server 'schema_cache.db' (0ms).
2025-09-06 04:10:29.734 +03:00 [INF] Query not saved due to profile rules for profile "17b4d629-6bfa-4574-bef7-f1e0ebe16b08", Query already existed
2025-09-06 04:10:29.741 +03:00 [INF] Executed endpoint 'HTTP: POST api/query/{profileId}/execute'
2025-09-06 04:10:29.744 +03:00 [DBG] Connection id "0HNFCS8LHA7S1" completed keep alive response.
2025-09-06 04:10:29.746 +03:00 [DBG] 'ContextDB' disposed.
2025-09-06 04:10:29.749 +03:00 [DBG] Disposing connection to database 'main' on server 'schema_cache.db'.
2025-09-06 04:10:29.750 +03:00 [DBG] Disposed connection to database 'main' on server 'schema_cache.db' (1ms).
2025-09-06 04:10:29.752 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7202/api/query/17b4d629-6bfa-4574-bef7-f1e0ebe16b08/execute - 200 null application/json; charset=utf-8 988.341ms
